{"version":3,"sources":["contracts sync /^/.//.*/.address/.js$","contracts/WearablesNFTs.abi.js","contracts/WearablesNFTs.bytecode.js","contracts/contracts.js","hooks/ContractLoader.js","constants.js","hooks/Poller.js","hooks/OnBlock.js","hooks/LookupAddress.js","components/Address.jsx","components/Balance.jsx","hooks/Balance.js","components/Account.jsx","helpers/index.js","components/Contract/FunctionForm.jsx","components/Wallet.jsx","components/ChainAlert.jsx","components/Header.jsx","components/Timeline.jsx","components/GasGauge.jsx","components/BytesStringInput.jsx","views/ExistingNFTs.jsx","views/CreateNFT.jsx","components/DistributeModal.jsx","views/DisburseNFTs.jsx","views/DisburseOrList.jsx","views/UpdateNFT.jsx","views/EditOrList.jsx","views/NFTDetails.jsx","views/ViewOrList.jsx","App.jsx","index.jsx","contracts/WearablesNFTs.address.js","contracts sync /^/.//.*/.abi/.js$","contracts sync /^/.//.*/.bytecode/.js$","eth.svg","logo.svg"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","loadContract","contractName","signer","newContract","Contract","require","bytecode","console","error","providerOrSigner","useState","contracts","setContracts","useEffect","a","undefined","listAccounts","accounts","length","getSigner","contractList","newContracts","fromEntries","loadContracts","INFURA_ID","NETWORK","chainId","values","NETWORKS","props","localhost","name","color","blockExplorer","rpcUrl","window","location","hostname","mainnet","kovan","faucet","rinkeby","ropsten","goerli","xdai","price","gasPrice","matic","mumbai","fn","delay","extraWatch","savedCallback","useRef","current","setInterval","clearInterval","provider","args","listener","blockNumber","on","off","lookupAddress","address","isAddress","reportedName","resolveName","resolvedAddress","getAddress","useLookupAddress","ensName","setEnsName","cache","localStorage","getItem","JSON","parse","created_at","Date","now","then","setItem","stringify","SecondLine","value","ens","ensProvider","size","w","mt","ml","noOfLines","spacing","displayAddress","substr","startsWith","etherscanLink","blockExplorerLink","textProps","copyable","text","onChange","editable","title","onClick","blockieClick","seed","toLowerCase","scale","fontSize","mr","href","target","rel","input","balance","floatBalance","usingBalance","pollTime","setBalance","pollBalance","useCallback","getBalance","newBalance","eq","useOnBlock","usePoller","useBalance","etherBalance","formatEther","parseFloat","toFixed","src","eth","alt","h","minimized","injectedProvider","mainnetProvider","localProvider","Address","httpURL","uri","match","utils","Typography","Text","Paragraph","selectedChainId","localChainId","show","setShow","status","maxW","flexDirection","align","position","right","top","NetworkMismatch","ChainAlert","zIndex","ConnectionButton","web3Modal","logoutOfWeb3Modal","loadWeb3Modal","cachedProvider","hasArrow","key","placement","label","LogoutOutlined","LoginOutlined","NetworkDisplay","textAlign","paths","links","icon","targetNetwork","path","useLocation","pathname","replace","_","group","useColorMode","colorMode","toggleColorMode","_network","setSelectedChainId","getNetwork","header","bg","direction","to","logo","fontFamily","grow","isAttached","variant","justify","entries","link","style","margin","borderWidth","colorScheme","mx","p","Account","constants","TOKENS","gql","registryAddress","action","useQuery","loading","data","tokens","setTokens","history","useHistory","load","tokenData","tokenRegistry","token","supply","totalSupply","metadata","URI","uris","Set","t","Promise","all","fetch","response","ok","json","meta","tkn","description","image","my","sx","display","idx","push","_hover","maxH","m","split","ExternalLink","disburse","view","edit","role","aria-label","contract","treasurerParam","treasurer","validNetwork","quantity","setQuantity","setTreasurer","setMetadata","create","evt","preventDefault","confirm","mint","as","onSubmit","isRequired","type","val","parseInt","placeholder","isDisabled","InputTabs","raw","update","addresses","isFitted","mb","ref","minH","addr","justifyContent","isOpen","onClose","distribute","setRaw","setAddresses","filter","test","process","initialFocusRef","TOKEN","balances","setBalances","tokenID","setTokenID","total","setTotal","setMeta","useDisclosure","onOpen","toast","useToast","params","useParams","addrSize","useBreakpointValue","includes","contractAddress","variables","config","duration","isClosable","recipients","distributeSingles","cause","message","identifier","quantities","bal","account","res","amount","localeCompare","sensitivity","DisburseNFTs","ExistingNFTs","newMetadata","setNewMetadata","tokenId","setTokenId","setName","setDescription","homepage","setHomepage","wearables","setWearables","query","URLSearchParams","search","saveLabel","hide","setHide","toggle","prop","external_url","properties","EditOrList","overwrite","setURI","get","info","SaveOutlined","textDecoration","listStyleType","mimetype","model","UpdateNFT","qError","setError","msg","linkTarget","NFTDetails","StaticJsonRpcProvider","localProviderUrl","REACT_APP_PROVIDER","setInjectedProvider","useUserAddress","writeContracts","useContractLoader","setValidNetwork","connect","Web3Provider","className","Header","pl","pt","CreateNFT","WearablesNFTs","ViewOrList","DisburseOrList","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","clearCachedProvider","setTimeout","reload","ethereum","client","ApolloClient","InMemoryCache","theme","extendTheme","useSystemColorMode","initialColorMode","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.be56164a.chunk.js","sourcesContent":["var map = {\n\t\"./WearablesNFTs.address.js\": 164\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1141;","module.exports = [\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"ApprovalForAll\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256[]\",\n        \"name\": \"values\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"name\": \"TransferBatch\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"TransferSingle\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"value\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"URI\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"accounts\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"name\": \"balanceOfBatch\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"to\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"distributeSingles\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isApprovedForAll\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"metadata\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"amounts\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeBatchTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"setApprovalForAll\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"newuri\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"setURI\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"name\": \"supportsInterface\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"tokenCount\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"uri\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];","module.exports = \"0x608060405260006004553480156200001657600080fd5b5060408051808201909152601f81527f53696e676c65204d6574616461746120555249204973204e6f74205573656400602082015262000056816200005d565b5062000159565b80516200007290600290602084019062000076565b5050565b82805462000084906200011c565b90600052602060002090601f016020900481019282620000a85760008555620000f3565b82601f10620000c357805160ff1916838001178555620000f3565b82800160010185558215620000f3579182015b82811115620000f3578251825591602001919060010190620000d6565b506200010192915062000105565b5090565b5b8082111562000101576000815560010162000106565b600181811c908216806200013157607f821691505b602082108114156200015357634e487b7160e01b600052602260045260246000fd5b50919050565b6118d480620001696000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c806367db3b8f1161007157806367db3b8f146101695780639f181b5e1461017c578063a22cb46514610184578063d2b04fd614610197578063e985e9c5146101aa578063f242432a146101e6576100b3565b8062fdd58e146100b857806301ffc9a7146100de5780630e89341c146101015780632eb2c2d6146101215780633656a1a4146101365780634e1273f414610149575b600080fd5b6100cb6100c63660046112b8565b6101f9565b6040519081526020015b60405180910390f35b6100f16100ec3660046113a4565b610290565b60405190151581526020016100d5565b61011461010f366004611426565b6102e4565b6040516100d591906115a7565b61013461012f3660046110fa565b610386565b005b610134610144366004611203565b61041d565b61015c610157366004611343565b6104a6565b6040516100d59190611566565b6101346101773660046113e3565b610608565b6100cb610664565b61013461019236600461127e565b61066b565b6101346101a53660046112e1565b61074f565b6100f16101b83660046110c8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101346101f43660046111a0565b610780565b60006001600160a01b03831661026a5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102c157506001600160e01b031982166303a24d0760e21b145b806102dc57506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b60008181526003602052604090208054606091906103019061172d565b80601f016020809104026020016040519081016040528092919081815260200182805461032d9061172d565b801561037a5780601f1061034f5761010080835404028352916020019161037a565b820191906000526020600020905b81548152906001019060200180831161035d57829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103a257506103a285336101b8565b6104095760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610261565b61041685858585856107c5565b5050505050565b6001600160a01b038416331480610439575061043984336101b8565b6104555760405162461bcd60e51b815260040161026190611602565b60005b8351811015610416576104968585838151811061048557634e487b7160e01b600052603260045260246000fd5b602002602001015185600186610a09565b61049f81611795565b9050610458565b6060815183511461050b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610261565b6000835167ffffffffffffffff81111561053557634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561055e578160200160208202803683370190505b50905060005b8451811015610600576105c585828151811061059057634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106105b857634e487b7160e01b600052603260045260246000fd5b60200260200101516101f9565b8282815181106105e557634e487b7160e01b600052603260045260246000fd5b60209081029190910101526105f981611795565b9050610564565b509392505050565b6000818152600360209081526040909120835161062792850190610ec7565b50807f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b8360405161065891906115a7565b60405180910390a25050565b6004545b90565b336001600160a01b03831614156106d65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610261565b3360008181526001602090815260408083206001600160a01b0387168085529252909120805460ff1916841515179055906001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610743911515815260200190565b60405180910390a35050565b60016004600082825461076291906116fe565b909155505060045461077685828685610b38565b6104168382610608565b6001600160a01b03851633148061079c575061079c85336101b8565b6107b85760405162461bcd60e51b815260040161026190611602565b6104168585858585610a09565b81518351146108275760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610261565b6001600160a01b03841661084d5760405162461bcd60e51b81526004016102619061164b565b3360005b845181101561099b57600085828151811061087c57634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008583815181106108a857634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156108f85760405162461bcd60e51b815260040161026190611690565b6109028282611716565b60008085815260200190815260200160002060008c6001600160a01b03166001600160a01b03168152602001908152602001600020819055508160008085815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461098091906116fe565b925050819055505050508061099490611795565b9050610851565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516109eb929190611579565b60405180910390a4610a01818787878787610c39565b505050505050565b6001600160a01b038416610a2f5760405162461bcd60e51b81526004016102619061164b565b33610a48818787610a3f88610da4565b61041688610da4565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610a895760405162461bcd60e51b815260040161026190611690565b610a938482611716565b6000868152602081815260408083206001600160a01b038c81168552925280832093909355881681529081208054869290610acf9084906116fe565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610b2f828888888888610dfd565b50505050505050565b6001600160a01b038416610b985760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610261565b33610ba981600087610a3f88610da4565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610bd99084906116fe565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461041681600087878787610dfd565b6001600160a01b0384163b15610a015760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610c7d90899089908890889088906004016114c3565b602060405180830381600087803b158015610c9757600080fd5b505af1925050508015610cc7575060408051601f3d908101601f19168201909252610cc4918101906113c7565b60015b610d7457610cd36117dc565b806308c379a01415610d0d5750610ce86117f3565b80610cf35750610d0f565b8060405162461bcd60e51b815260040161026191906115a7565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610261565b6001600160e01b0319811663bc197c8160e01b14610b2f5760405162461bcd60e51b8152600401610261906115ba565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610dec57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b15610a015760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610e419089908990889088908890600401611521565b602060405180830381600087803b158015610e5b57600080fd5b505af1925050508015610e8b575060408051601f3d908101601f19168201909252610e88918101906113c7565b60015b610e9757610cd36117dc565b6001600160e01b0319811663f23a6e6160e01b14610b2f5760405162461bcd60e51b8152600401610261906115ba565b828054610ed39061172d565b90600052602060002090601f016020900481019282610ef55760008555610f3b565b82601f10610f0e57805160ff1916838001178555610f3b565b82800160010185558215610f3b579182015b82811115610f3b578251825591602001919060010190610f20565b50610f47929150610f4b565b5090565b5b80821115610f475760008155600101610f4c565b80356001600160a01b03811681146102df57600080fd5b600082601f830112610f87578081fd5b81356020610f94826116da565b604051610fa18282611768565b8381528281019150858301600585901b87018401881015610fc0578586fd5b855b85811015610fe557610fd382610f60565b84529284019290840190600101610fc2565b5090979650505050505050565b600082601f830112611002578081fd5b8135602061100f826116da565b60405161101c8282611768565b8381528281019150858301600585901b8701840188101561103b578586fd5b855b85811015610fe55781358452928401929084019060010161103d565b600082601f830112611069578081fd5b813567ffffffffffffffff811115611083576110836117c6565b60405161109a601f8301601f191660200182611768565b8181528460208386010111156110ae578283fd5b816020850160208301379081016020019190915292915050565b600080604083850312156110da578182fd5b6110e383610f60565b91506110f160208401610f60565b90509250929050565b600080600080600060a08688031215611111578081fd5b61111a86610f60565b945061112860208701610f60565b9350604086013567ffffffffffffffff80821115611144578283fd5b61115089838a01610ff2565b94506060880135915080821115611165578283fd5b61117189838a01610ff2565b93506080880135915080821115611186578283fd5b5061119388828901611059565b9150509295509295909350565b600080600080600060a086880312156111b7578081fd5b6111c086610f60565b94506111ce60208701610f60565b93506040860135925060608601359150608086013567ffffffffffffffff8111156111f7578182fd5b61119388828901611059565b60008060008060808587031215611218578384fd5b61122185610f60565b9350602085013567ffffffffffffffff8082111561123d578485fd5b61124988838901610f77565b9450604087013593506060870135915080821115611265578283fd5b5061127287828801611059565b91505092959194509250565b60008060408385031215611290578182fd5b61129983610f60565b9150602083013580151581146112ad578182fd5b809150509250929050565b600080604083850312156112ca578182fd5b6112d383610f60565b946020939093013593505050565b600080600080608085870312156112f6578384fd5b6112ff85610f60565b935060208501359250604085013567ffffffffffffffff80821115611322578384fd5b61132e88838901611059565b93506060870135915080821115611265578283fd5b60008060408385031215611355578182fd5b823567ffffffffffffffff8082111561136c578384fd5b61137886838701610f77565b9350602085013591508082111561138d578283fd5b5061139a85828601610ff2565b9150509250929050565b6000602082840312156113b5578081fd5b81356113c081611885565b9392505050565b6000602082840312156113d8578081fd5b81516113c081611885565b600080604083850312156113f5578182fd5b823567ffffffffffffffff81111561140b578283fd5b61141785828601611059565b95602094909401359450505050565b600060208284031215611437578081fd5b5035919050565b6000815180845260208085019450808401835b8381101561146d57815187529582019590820190600101611451565b509495945050505050565b60008151808452815b8181101561149d57602081850181015186830182015201611481565b818111156114ae5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a0604082018190526000906114ef9083018661143e565b8281036060840152611501818661143e565b905082810360808401526115158185611478565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061155b90830184611478565b979650505050505050565b6000602082526113c0602083018461143e565b60006040825261158c604083018561143e565b828103602084015261159e818561143e565b95945050505050565b6000602082526113c06020830184611478565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff8211156116f4576116f46117c6565b5060051b60200190565b60008219821115611711576117116117b0565b500190565b600082821015611728576117286117b0565b500390565b600181811c9082168061174157607f821691505b6020821081141561176257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561178e5761178e6117c6565b6040525050565b60006000198214156117a9576117a96117b0565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561066857600481823e5160e01c90565b600060443d101561180357610668565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611835575050505050610668565b828501915081518181111561184f57505050505050610668565b843d870101602082850101111561186b57505050505050610668565b61187a60208286010187611768565b509094505050505090565b6001600160e01b03198116811461189b57600080fd5b5056fea2646970667358221220d60ed668f245686b0ac963eaaa9802b1ffa0ab91a721ecde35f42ed65cd1e2b664736f6c63430008030033\";","module.exports = [\"WearablesNFTs\"];","/* eslint-disable import/no-dynamic-require */\n/* eslint-disable global-require */\nimport { Contract } from '@ethersproject/contracts'\nimport { useState, useEffect } from 'react'\n\nconst loadContract = (contractName, signer) => {\n  const newContract = new Contract(\n    require(`../contracts/${contractName}.address.js`),\n    require(`../contracts/${contractName}.abi.js`),\n    signer,\n  );\n  try {\n    newContract.bytecode = require(`../contracts/${contractName}.bytecode.js`)\n  } catch(e) {\n    console.error('loadContract', e)\n  }\n  return newContract\n}\n\nexport default (providerOrSigner) => {\n  const [contracts, setContracts] = useState()\n\n  useEffect(() => {\n    const loadContracts = async () => {\n      if(providerOrSigner !== undefined) {\n        try {\n          let accounts\n          if(typeof providerOrSigner?.listAccounts === 'function') {\n            accounts = await providerOrSigner.listAccounts()\n          }\n\n          let signer\n          if(accounts && accounts.length > 0) {\n            signer = providerOrSigner.getSigner()\n          } else {\n            signer = providerOrSigner\n          }\n\n          const contractList = require('../contracts/contracts.js')\n\n          const newContracts = Object.fromEntries(\n            contractList.map((contractName) => (\n              [contractName, loadContract(contractName, signer)]\n            ))\n          )\n\n          setContracts(newContracts)\n        } catch(e) {\n          console.error('ERROR LOADING CONTRACTS!!', e);\n        }\n      }\n    }\n    loadContracts()\n  }, [providerOrSigner])\n\n  return contracts\n}","// From: https://infura.io/dashboard/ethereum\nexport const INFURA_ID = \"79a107f3e7784d31bcedd6fba13d93e9\"\n\n// From: https://etherscan.io/myapikey\nexport const ETHERSCAN_KEY = \"5T6PH4NAY5SDI9MQY8K7PW9CKIS2EBYGMX\"\n\n//BLOCKNATIVE ID FOR Notify.js:\nexport const BLOCKNATIVE_DAPPID = \"0b58206a-f3c0-4701-a62f-73c7243e8c77\"\n\n// EXTERNAL CONTRACTS\n\nexport const DAI_ADDRESS = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n\nexport const DAI_ABI = [{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg1\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\n\nexport const NETWORK = (chainId) => {\n  for(let props of Object.values(NETWORKS)) {\n    if(props.chainId === chainId) {\n      return props\n    }\n  }\n}\n\nexport const NETWORKS = {\n  localhost: {\n    name: \"localhost\",\n    color: '#666666',\n    chainId: 31337,\n    blockExplorer: '',\n    rpcUrl: `http://${window.location.hostname}:8545`,\n  },\n  mainnet: {\n    name: \"mainnet\",\n    color: '#ff8b9e',\n    chainId: 1,\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://etherscan.io/\",\n  },\n  kovan: {\n    name: \"kovan\",\n    color: '#7003DD',\n    chainId: 42,\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://kovan.etherscan.io/\",\n    faucet: \"https://gitter.im/kovan-testnet/faucet\",//https://faucet.kovan.network/\n  },\n  rinkeby: {\n    name: \"rinkeby\",\n    color: '#e0d068',\n    chainId: 4,\n    rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\n    faucet: \"https://faucet.rinkeby.io/\",\n    blockExplorer: \"https://rinkeby.etherscan.io/\",\n  },\n  ropsten: {\n    name: \"ropsten\",\n    color: '#F60D09',\n    chainId: 3,\n    faucet: \"https://faucet.ropsten.be/\",\n    blockExplorer: \"https://ropsten.etherscan.io/\",\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\n  },\n  goerli: {\n    name: \"goerli\",\n    color: '#0975F6',\n    chainId: 5,\n    faucet: \"https://goerli-faucet.slock.it/\",\n    blockExplorer: \"https://goerli.etherscan.io/\",\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\n  },\n  xdai: {\n    name: \"xdai\",\n    color: '#48a9a6',\n    chainId: 100,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://dai.poa.network\",\n    faucet: \"https://xdai-faucet.top/\",\n    blockExplorer: \"https://blockscout.com/poa/xdai/\",\n  },\n  matic: {\n    name: \"matic\",\n    color: '#2bbdf7',\n    chainId: 137,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mainnet.maticvigil.com\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://explorer-mainnet.maticvigil.com//\",\n  },\n  mumbai: {\n    name: \"mumbai\",\n    color: '#92D9FA',\n    chainId: 80001,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://mumbai-explorer.matic.today/\",\n  },\n}\n","import { useEffect, useRef } from 'react'\n\nexport default (fn, delay, extraWatch) => {\n  const savedCallback = useRef()\n\n  useEffect(() => {\n    savedCallback.current = fn\n  }, [fn])\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    const tick = () => {\n      savedCallback.current()\n    }\n    if(delay !== null && delay > 0) {\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n  }, [delay])\n\n  useEffect(() => {\n    fn()\n  }, [extraWatch])\n}","import { useEffect, useRef } from 'react'\n\nexport default (provider, fn, args = []) => {\n  const savedCallback = useRef()\n\n  useEffect(() => {\n    savedCallback.current = fn\n  }, [fn])\n\n  useEffect(() => {\n    if(fn && provider) {\n      const listener = (blockNumber) => {\n        savedCallback.current(...args)\n      }\n\n      provider.on('block', listener)\n\n      return () => {\n        provider.off('block', listener)\n      }\n    }\n  }, [provider, fn, args])\n}","import React, { useState, useEffect } from 'react'\nimport { getAddress, isAddress } from '@ethersproject/address'\n\n/*\n  ~ What it does? ~\n\n  Gets ENS name from given address and provider\n\n  ~ How can I use? ~\n\n  const ensName = useLookupAddress(mainnetProvider, address);\n\n  ~ Features ~\n\n  - Provide address and get ENS name corresponding to given address\n*/\n\nconst lookupAddress = async (provider, address) => {\n  if(isAddress(address)) {\n    try {\n      // Accuracy of reverse resolution is not enforced.\n      // We then manually ensure that the reported ens name resolves to address\n      const reportedName = (\n        await provider.lookupAddress(address)\n      )\n      const resolvedAddress = (\n        await provider.resolveName(reportedName)\n      )\n\n      if(\n        getAddress(address)\n        === getAddress(resolvedAddress)\n      ) {\n        return reportedName\n      }\n      return getAddress(address)\n    } catch(e) {\n      return getAddress(address)\n    }\n  }\n  return <em>{address}</em>\n}\n\nconst useLookupAddress = (provider, address) => {\n  const [ensName, setEnsName] = useState(address)\n\n  useEffect(() => {\n    let cache = window.localStorage.getItem(\n      `ensCache_${address}`\n    )\n    cache = cache && JSON.parse(cache)\n    const cacheFor = 60 * 60 * 24 * 5 // 5 days\n\n    if(cache?.created_at + cacheFor > Date.now()) {\n      setEnsName(cache.name)\n    } else {\n      if(provider) {\n        lookupAddress(provider, address).then(\n          (name) => {\n            if(name) {\n              setEnsName(name)\n              window.localStorage.setItem(\n                `ensCache_${address}`,\n                JSON.stringify({\n                  created_at: Date.now(),\n                  name: name,\n                })\n              )\n            }\n          }\n        )\n      }\n    }\n  }, [provider, address, setEnsName])\n\n  return ensName\n}\n\nexport default useLookupAddress","import React from 'react'\nimport Blockies from 'react-blockies'\nimport {\n  Flex, Box, SkeletonText, SkeletonCircle,\n} from '@chakra-ui/react'\nimport { useLookupAddress } from '../hooks'\n\nconst blockExplorerLink = (\n  (address, blockExplorer) => (\n    `${blockExplorer ?? \"https://etherscan.io/\"}address/${address}`\n  )\n)\n\nexport default (props) => {\n  const { SecondLine = null } = props\n  const address = props.value ?? props.address\n  const ens = useLookupAddress(props.ensProvider, address)\n\n  if(!address) {\n    return (\n      <Flex>\n        <SkeletonCircle size={7} />\n        <SkeletonText w={20} mt={1} ml={1} noOfLines={2} spacing={1} />\n      </Flex>\n    )\n  }\n\n  let displayAddress = `${address.substr(0, 6)}…`\n\n  if(ens && !ens.startsWith(\"0x\")) {\n    displayAddress = ens\n  } else if(props.size === \"short\") {\n    displayAddress += address.substr(-4)\n  } else if(props.size === \"medium\") {\n    displayAddress += address.substr(-9)\n  } else if(props.size === \"long\") {\n    displayAddress = address\n  }\n\n  const etherscanLink = (\n    blockExplorerLink(address, props.blockExplorer)\n  )\n\n  const textProps = { copyable: { text: address } }\n  if(props.onChange) {\n    textProps.editable = { onChange: props.onChange }\n  }\n\n  return (\n    <Flex title={address}>\n      <Box onClick={() => props.blockieClick?.()}>\n        <Blockies\n          seed={address.toLowerCase()}\n          size={SecondLine ? 15 : 8}\n          scale={props.fontSize ? props.fontSize / 7 : 4}\n        />\n      </Box>\n      <Box ml={2} mr={2}>\n        <Box {...textProps}>\n          <a\n            href={etherscanLink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {displayAddress}\n          </a>\n        </Box>\n        {SecondLine}\n      </Box>\n    </Flex>\n  )\n}","import React from 'react'\nimport { formatEther } from '@ethersproject/units'\nimport { Flex, Image } from '@chakra-ui/react'\nimport { useBalance } from '../hooks'\nimport eth from '../eth.svg'\n\nexport default ({\n  provider, address, balance: input, value, size, ...props\n}) => {\n  const balance = useBalance(provider, address)\n  let floatBalance = 0\n  let usingBalance = balance\n\n  if(input !== undefined) {\n    usingBalance = input\n  }\n  if(value !== undefined) {\n    usingBalance = value\n  }\n\n  if(usingBalance) {\n    const etherBalance = formatEther(usingBalance)\n    floatBalance = parseFloat(etherBalance)\n  }\n\n  return (\n    <Flex title={`${floatBalance} ETH`} {...props}>\n      {floatBalance.toFixed(4)}\n      <Image src={eth} alt=\"ETH\" h=\"0.9em\" mt=\"4px\" ml=\"2px\"/>\n    </Flex>\n  )\n}","import { useState, useEffect, useCallback } from 'react'\nimport usePoller from './Poller'\nimport useOnBlock from './OnBlock'\n\nexport default (provider, address, pollTime = 0) => {\n  const [balance, setBalance] = useState()\n\n  const pollBalance = useCallback(\n    async (provider, address) => {\n      if(provider && address) {\n        const newBalance = (\n          await provider.getBalance(address)\n        )\n        if(!newBalance?.eq(balance ?? 0n)) {\n          setBalance(newBalance)\n        }\n      }\n    },\n    [balance],\n  )\n\n  useEffect(\n    () => { pollBalance(provider, address) },\n    [pollBalance, provider, address],\n  )\n\n  useOnBlock(\n    (pollTime === 0) && provider, // disable if poll time is 0\n    () => {\n      if(provider && address && pollTime === 0) {\n        pollBalance(provider, address)\n      }\n    }\n  )\n\n  usePoller(\n    async () => {\n      if(provider && address && pollTime > 0) {\n        pollBalance()\n      }\n    },\n    pollTime,\n    provider && address,\n  )\n\n  return balance\n}","import React from 'react'\nimport { Flex } from '@chakra-ui/react'\nimport Address from './Address'\nimport Balance from './Balance'\n\nexport default ({\n  address, minimized, blockExplorer,\n  injectedProvider, mainnetProvider,\n  localProvider, blockieClick, ...props\n}) => (\n  minimized ? null : (\n    <Flex {...props}>\n      {!address ? (\n        \"Connecting…\"\n      ) : (\n        <Address\n          {...{\n            address, blockExplorer,\n            blockieClick,\n          }}\n          ensProvider={mainnetProvider}\n          size=\"short\"\n          SecondLine={\n            <Balance\n              mt=\"-5px\" {...{ address }}\n              provider={injectedProvider}\n            />\n          }\n        />\n      )}\n    </Flex>\n  )\n)","export { default as Transactor } from \"./Transactor\";\n\nexport const httpURL = (uri) => {\n  if(!uri) return undefined\n  \n  const match = uri.match(/^(ip[nf]s):\\/\\/(.+)$/)\n  if(!match) {\n    return uri\n  } else {\n    return `https://ipfs.io/${match[1]}/${match[2]}`\n  }\n}\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from \"react\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { Row, Col, Input, Divider, Tooltip, Button } from \"antd\";\nimport { Transactor } from \"../../helpers\";\nimport tryToDisplay from \"./utils\";\nimport Blockies from \"react-blockies\";\nconst { utils } = require(\"ethers\");\n\n\nexport default function FunctionForm({ contractFunction, functionInfo, provider, gasPrice, triggerRefresh }) {\n  const [form, setForm] = useState({});\n  const [txValue, setTxValue] = useState();\n  const [returnValue, setReturnValue] = useState();\n\n  const tx = Transactor(provider, gasPrice);\n\n  let inputIndex = 0;\n  const inputs = functionInfo.inputs.map(input => {\n    const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + inputIndex++\n\n    let buttons = \"\"\n    if(input.type === \"bytes32\") {\n      buttons = (\n        <Tooltip placement=\"right\" title={\"to bytes32\"}>\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if(utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.parseBytes32String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.formatBytes32String(form[key]);\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n          </div>\n        </Tooltip>\n      )\n    } else if(input.type === \"bytes\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"to hex\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if(utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.toUtf8String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.hexlify(utils.toUtf8Bytes(form[key] ?? ''))\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n            </div>\n        </Tooltip>\n      )\n    } else if(input.type === \"uint256\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"⨯ 10¹⁸\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              const formUpdate = { ...form }\n              formUpdate[key] = utils.parseEther(form[key])\n              setForm(formUpdate)\n            }}\n          >\n            ✴️\n            </div>\n        </Tooltip>\n      )\n    } else if(input.type === \"address\") {\n      const possibleAddress = form[key]?.toLowerCase().trim()\n      if(possibleAddress && possibleAddress.length === 42) {\n        buttons = (\n          <Tooltip placement=\"right\" title=\"blockie\">\n            <Blockies seed={possibleAddress} scale={3} />\n          </Tooltip>\n        )\n      }\n    }\n\n    return (\n      <div style={{ margin: 2 }} key={key}>\n        <Input\n          size=\"large\"\n          placeholder={input.name ? input.type + \" \" + input.name : input.type}\n          autoComplete=\"off\"\n          value={form[key]}\n          name={key}\n          onChange={(event) => {\n            const formUpdate = { ...form };\n            formUpdate[event.target.name] = event.target.value;\n            setForm(formUpdate);\n          }}\n          suffix={buttons}\n        />\n      </div>\n    )\n  });\n\n  const txValueInput = (\n    <div style={{ margin: 2 }} key=\"txValueInput\">\n      <Input\n        placeholder=\"transaction value\"\n        onChange={(e) => setTxValue(e.target.value)}\n        value={txValue}\n        addonAfter={\n          <div>\n            <Row>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title={\" * 10^18 \"}>\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      let floatValue = parseFloat(txValue)\n                      if(floatValue) setTxValue(\"\" + floatValue * 10 ** 18);\n                    }}\n                  >\n                    ✳️\n                  </div>\n                </Tooltip>\n              </Col>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title=\"number to hex\">\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      setTxValue(BigNumber.from(txValue ?? 0).toHexString());\n                    }}\n                  >\n                    #️⃣\n                </div>\n                </Tooltip>\n              </Col>\n            </Row>\n          </div>\n        }\n      />\n    </div>\n  );\n\n  if (functionInfo.payable) {\n    inputs.push(txValueInput);\n  }\n\n  const buttonIcon = (\n    <Button style={{ marginLeft: -32 }}>\n      {functionInfo.type === 'call' ? (\n        'Read 📡'\n      ) : (\n        'Send 💸'\n      )}\n    </Button>\n  )\n  inputs.push(\n    <div style={{ cursor: \"pointer\", margin: 2 }} key=\"goButton\">\n      <Input\n        onChange={(e) => setReturnValue(e.target.value)}\n        defaultValue=\"\"\n        bordered={false}\n        disabled={true}\n        value={returnValue}\n        suffix={\n          <div\n            style={{ width: 50, height: 30, margin: 0 }}\n            type=\"default\"\n            onClick={async () => {\n              let innerIndex = 0\n              const args = functionInfo.inputs.map((input) => {\n                const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + innerIndex++\n                let value = form[key]\n                if(input.baseType === \"array\"){\n                  value = JSON.parse(value)\n                } else if(input.type === \"bool\"){\n                  if(value === 'true' || value === '1' || /^0x0*1$/.test(value)) {\n                    value = 1\n                  } else {\n                    value = 0\n                  }\n                } else if(!value && input.type === 'bytes') {\n                  value = []\n                }\n                return value\n              })\n\n              let result\n              if(['view', 'pure'].includes(\n                functionInfo.stateMutability\n              )) {\n                const returned = await contractFunction(...args)\n                result = tryToDisplay(returned)\n              } else {\n                const overrides = {}\n                if(txValue) {\n                  overrides.value = txValue // ethers.utils.parseEther()\n                }\n                // Uncomment this if you want to skip the gas estimation for each transaction\n                // overrides.gasLimit = hexlify(1200000);\n\n                // console.log(\"Running with extras\",extras)\n                const returned = await tx(contractFunction(...args, overrides))\n                result = tryToDisplay(returned)\n              }\n\n              console.log(\"SETTING RESULT:\", result);\n              setReturnValue(result);\n              triggerRefresh(true);\n            }}\n          >\n            {buttonIcon}\n          </div>\n        }\n      />\n    </div>,\n  );\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={16}>{inputs}</Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n}\n","import React, { useState } from \"react\"\nimport {\n  WalletOutlined, QrcodeOutlined, SendOutlined, KeyOutlined,\n} from \"@ant-design/icons\"\nimport { Tooltip, Spin, Modal, Button, Typography } from \"antd\"\nimport QR from \"qrcode.react\"\nimport { parseEther } from \"@ethersproject/units\"\nimport { useUserAddress } from \"eth-hooks\"\nimport { Transactor } from \"../helpers\"\nimport Address from \"./Address\"\nimport Balance from \"./Balance\"\nimport AddressInput from \"./AddressInput\"\nimport EtherInput from \"./EtherInput\"\nimport { ethers } from \"ethers\"\nconst { Text, Paragraph } = Typography\n\n/*\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n*/\n\nexport default function Wallet(props) {\n  const signerAddress = useUserAddress(props.provider);\n  const selectedAddress = props.address || signerAddress;\n\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState()\n\n  const providerSend = props.provider ? (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={() => {\n          setOpen((open) => !open)\n        }}\n        rotate={-90}\n        style={{\n          padding: 7,\n          color: props.color ? props.color : \"\",\n          cursor: \"pointer\",\n          fontSize: 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  ) : null\n\n  let display\n  let receiveButton\n  let privateKeyButton\n  if(qr) {\n    display = (\n      <div>\n        <div>\n          <Text copyable>{selectedAddress}</Text>\n        </div>\n        <QR\n          value={selectedAddress}\n          size={450}\n          level=\"H\"\n          includeMargin\n          renderAs=\"svg\"\n          imageSettings={{ excavate: false }}\n        />\n      </div>\n    )\n    receiveButton = (\n      <Button\n        key=\"hide-receive\"\n        onClick={() => {\n          setQr(\"\")\n        }}\n      >\n        <QrcodeOutlined /> Hide\n      </Button>\n    )\n    privateKeyButton = (\n      <Button key=\"hide-key\" onClick={() => {\n        setPK(selectedAddress)\n        setQr(\"\")\n      }}>\n        <KeyOutlined /> Private Key\n      </Button>\n    )\n  } else if(pk) {\n    let pk = localStorage.getItem(\"metaPrivateKey\")\n    let wallet = new ethers.Wallet(pk)\n\n    if(wallet.address !== selectedAddress){\n      display = (\n        <div>\n          <b>*<em>injected account</em>*, private key unknown</b>\n        </div>\n      )\n    } else {\n      let extraPkDisplayAdded = {}\n      let extraPkDisplay = []\n      extraPkDisplayAdded[wallet.address] = true\n      extraPkDisplay.push(\n        <div style={{fontSize:16,padding:2,backgroundStyle:\"#89e789\"}}>\n          <a href={`/pk#${pk}`}>\n            <Address\n              minimized={true}\n              address={wallet.address}\n              ensProvider={props.ensProvider}\n            />\n            {wallet.address.substr(0,6)}\n          </a>\n        </div>\n      )\n      for(var key in localStorage){\n        if(key.indexOf(\"metaPrivateKey_backup\") >= 0){\n          console.log(key)\n          let pastpk = localStorage.getItem(key)\n          let pastwallet = new ethers.Wallet(pastpk)\n          if(!extraPkDisplayAdded[pastwallet.address] /*&& selectedAddress!=pastwallet.address*/){\n            extraPkDisplayAdded[pastwallet.address] = true\n            extraPkDisplay.push(\n              <div style={{ fontSize: 16 }}>\n                <a href={`/pk#${pastpk}`}>\n                  <Address minimized={true} address={pastwallet.address} ensProvider={props.ensProvider} /> {pastwallet.address.substr(0,6)}\n                </a>\n              </div>\n            )\n          }\n        }\n      }\n\n      display = (\n        <div>\n          <b>Private Key:</b>\n\n          <div><Text copyable>{pk}</Text></div>\n\n          <hr/>\n\n          <i>Point your camera phone at QR code to open in\n            <a target=\"_blank\" href={`https://xdai.io/${pk}`} rel=\"noopener noreferrer\">burner wallet</a>:\n          </i>\n          <QR value={`https://xdai.io/${pk}`} size={450} level=\"H\" includeMargin={true} renderAs=\"svg\" imageSettings={{ excavate: false }}/>\n\n          <Paragraph style={{ fontSize: 16 }} copyable>{`https://xdai.io/${pk}`}</Paragraph>\n\n          {extraPkDisplay && (\n            <div>\n              <h3>Known Private Keys:</h3>\n              {extraPkDisplay}\n              <Button onClick={() => {\n                let currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\")\n                if(currentPrivateKey) {\n                  window.localStorage.setItem(\"metaPrivateKey_backup\"+Date.now(),currentPrivateKey);\n                }\n                const randomWallet = ethers.Wallet.createRandom()\n                const privateKey = randomWallet._signingKey().privateKey\n                window.localStorage.setItem(\"metaPrivateKey\",privateKey);\n                window.location.reload()\n              }}>\n                Generate\n              </Button>\n            </div>\n          )}\n        </div>\n      )\n    }\n\n    receiveButton = (\n      <Button key=\"receive\" onClick={() => {\n        setQr(selectedAddress)\n        setPK(\"\")\n      }}>\n        <QrcodeOutlined /> Receive\n      </Button>\n    )\n    privateKeyButton = (\n      <Button key=\"hide\" onClick={() => {\n        setPK(\"\")\n        setQr(\"\")\n      }}>\n        <KeyOutlined /> Hide\n      </Button>\n    )\n  } else {\n    const inputStyle = {\n      padding: 10,\n    }\n\n    display = (\n      <div>\n        <div style={inputStyle}>\n          <AddressInput\n            autoFocus\n            ensProvider={props.ensProvider}\n            placeholder=\"to address\"\n            address={toAddress}\n            onChange={setToAddress}\n          />\n        </div>\n        <div style={inputStyle}>\n          <EtherInput\n            price={props.price}\n            value={amount}\n            onChange={value => {\n              setAmount(value);\n            }}\n          />\n        </div>\n      </div>\n    )\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress)\n          setPK(\"\")\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    )\n    privateKeyButton = (\n      <Button key=\"hide\" onClick={() => {\n        setPK(selectedAddress)\n        setQr(\"\")\n      }}>\n        <KeyOutlined /> Private Key\n      </Button>\n    )\n  }\n\n  return (\n    <span>\n      {providerSend}\n      <Modal\n        visible={open}\n        title={\n          <div>\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\n            <div style={{ float: \"right\", paddingRight: 25 }}>\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\n            </div>\n          </div>\n        }\n        onOk={() => {\n          setQr()\n          setPK()\n          setOpen((open) => !open)\n        }}\n        onCancel={() => {\n          setQr()\n          setPK()\n          setOpen((open) => !open)\n        }}\n        footer={[\n          privateKeyButton,\n          receiveButton,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!amount || !toAddress || qr}\n            loading={false}\n            onClick={() => {\n              const tx = Transactor(props.provider)\n              let value\n              try {\n                value = parseEther(amount.toString())\n              } catch (e) {\n                // failed to parseEther, try something else\n                value = parseEther(parseFloat(amount).toFixed(8))\n              }\n\n              tx({\n                to: toAddress,\n                value,\n              })\n              setOpen((open) => !open)\n              setQr()\n            }}\n          >\n            <SendOutlined /> Send\n          </Button>,\n        ]}\n      >\n        {display}\n      </Modal>\n    </span>\n  )\n}\n","import {\n  Alert, AlertDescription, AlertIcon, AlertTitle, CloseButton,\n} from '@chakra-ui/react'\nimport React, { useState } from 'react'\n\nexport default ({ NETWORK, selectedChainId, localChainId, ...props }) => {\n  const [show, setShow] = useState(true)\n\n  if(!show) return null\n\n  return (\n    <Alert status=\"error\" maxW=\"20em\" flexDirection=\"column\" {...props}>\n      <AlertIcon />\n      <AlertTitle>Wrong Network</AlertTitle>\n      <AlertDescription align=\"center\">\n        You have <b>{NETWORK(selectedChainId)?.name ?? 'Unknown'}</b>{' '}\n        selected and you need to be on <b>{NETWORK(localChainId).name}</b>.\n      </AlertDescription>\n      <CloseButton\n        position=\"absolute\" right={2} top={2}\n        onClick={() => setShow(false)}\n      />\n    </Alert>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n  Box, Button, chakra, Flex, Image, Spacer, Stack, Text, Tooltip,\n  ButtonGroup, useColorMode, Wrap,\n} from '@chakra-ui/react'\nimport { LoginOutlined, LogoutOutlined } from '@ant-design/icons'\nimport { Link, useLocation } from 'react-router-dom'\nimport ChainAlert from './ChainAlert'\nimport Account from './Account'\nimport logo from '../logo.svg'\nimport '@fontsource/crimson-text/600.css'\n\nlet NetworkMismatch = ({\n  localChainId, selectedChainId, NETWORK,\n}) => {\n  if(\n    localChainId && selectedChainId\n    && localChainId !== selectedChainId\n  ) {\n    return (\n      <ChainAlert\n        {...{ NETWORK, selectedChainId, localChainId }}\n        position=\"absolute\" top={3} right={3} zIndex={2}\n      />\n    )\n  }\n  return null\n}\n\nconst ConnectionButton = ({\n  web3Modal, logoutOfWeb3Modal, loadWeb3Modal,\n}) => {\n  if(!web3Modal) return null\n\n  if(web3Modal.cachedProvider) {\n    return (\n      <Tooltip hasArrow key=\"logout\" placement=\"bottom\" label=\"Logout\">\n        <Button\n          onClick={logoutOfWeb3Modal}\n        >\n          <LogoutOutlined/>\n        </Button>\n      </Tooltip>\n    )\n  }\n  return (\n    <Tooltip hasArrow key=\"login\" placement=\"bottom\" label=\"Login\">\n      <Button\n        onClick={loadWeb3Modal}\n      >\n        <LoginOutlined/>\n      </Button>\n    </Tooltip>\n  )\n}\n\nconst NetworkDisplay = ({\n  injectedProvider, NETWORK, selectedChainId,\n}) => (\n  <Box mt=\"0 ! important\" w=\"100%\" textAlign=\"center\">\n    {!injectedProvider ? 'Disconnected' : (\n      NETWORK(selectedChainId)?.name\n      ?? `Unknown (${selectedChainId})`\n    )}\n  </Box>\n)\n\nconst paths = {\n  '/': 'List',\n  '/new': 'Create',\n  '/disburse': 'Distribute',\n  '/edit': 'Edit',\n  '/view': 'Display',\n}\nconst links = {\n  '/new': {\n    title: 'Create a New NFT', icon: '➕',\n  },\n  '/': {\n    title: 'List Existing NFTs', icon: '🗃️',\n  },\n  '/disburse': {\n    title: 'Distribute Existing NFTs', icon: '⛲',\n  },\n  '/view': {\n    title: 'View NFT', icon: '👁️',\n  },\n  '/edit': {\n    title: 'Edit NFT Metadata', icon: '✏️',\n  },\n}\n\nexport default ({\n  NETWORK, address, blockExplorer, targetNetwork,\n  localProvider, injectedProvider, mainnetProvider,\n  web3Modal, loadWeb3Modal, logoutOfWeb3Modal,\n  ...props\n}) => {\n  const location = useLocation()\n  const path = (\n    location.pathname\n    .replace(/^(\\/[^/]*)(\\/.+)?$/, (_, group) => group)\n  ) \n  const title = paths[path]\n  const { colorMode, toggleColorMode } = useColorMode()\n  const localChainId = localProvider?._network?.chainId\n  const [selectedChainId, setSelectedChainId] = useState(null)\n\n  useEffect(() => {\n    if(injectedProvider) {\n      (async () => {\n        setSelectedChainId(\n          (await injectedProvider.getNetwork()).chainId\n        )\n      })()\n    }\n  }, [injectedProvider])\n  \n  return (\n    <chakra.header\n      {...props} bg={colorMode === 'light' ? 'white' : 'gray.800'}\n      top={0} position={['inherit', 'sticky']} zIndex={2}\n    >\n      <Flex align=\"center\" direction={['column', 'row']}>\n        <Link to=\"/\">\n          <Flex>\n            <Image src={logo} h=\"2rem\"/>\n            <Text ml={3} fontFamily=\"Crimson Text\" fontSize={35}>\n              Wearables NFT Manager{title ? `: ${title}` : ''}\n            </Text>\n          </Flex>\n        </Link>\n        <Spacer grow={1}/>\n        <ButtonGroup isAttached variant=\"outline\">\n          <Wrap justify=\"center\">\n            {Object.entries(links).map(\n              ([link, { title, icon }]) => (\n                <Tooltip\n                  hasArrow key={link}\n                  placement=\"bottom\" label={title}\n                >\n                  <Link to={link} style={{ margin: 0 }}>\n                    <Button\n                      title={title}\n                      borderWidth={3}\n                      colorScheme={link === path ? 'blue' : 'gray'}\n                    >\n                      {icon}\n                    </Button>\n                  </Link>\n                </Tooltip>\n              )\n            )}\n          </Wrap>\n        </ButtonGroup>\n        <Spacer grow={1}/>\n        <Flex mt={[5, '-1rem']} ml={1.5}>\n          <Flex>\n            <Button onClick={toggleColorMode} mx={1} p={0}>\n              {colorMode !== 'light' ? '🔆' : '🌛'}\n            </Button>\n            {address && (\n              <Account {...{\n                address,\n                localProvider,\n                injectedProvider,\n                mainnetProvider,\n                blockExplorer,\n              }}/>\n            )}\n          </Flex>\n          <Stack mr={5}>\n            <ConnectionButton {...{\n              web3Modal, logoutOfWeb3Modal, loadWeb3Modal,\n            }}/>\n            <NetworkDisplay {...{\n              injectedProvider, NETWORK, selectedChainId,\n            }}/>\n          </Stack>\n        </Flex>\n        <NetworkMismatch {...{\n          localChainId, selectedChainId, NETWORK,\n        }}/>\n      </Flex>\n    </chakra.header>\n  )\n}","import React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Timeline, Typography } from \"antd\";\nimport { SendOutlined, DownloadOutlined, EditOutlined } from \"@ant-design/icons\";\n\nconst { Text } = Typography;\n\n// displays a timeline for scaffold-eth usage\n\nexport default function TimelineDisplay(props) {\n  return (\n    <Timeline mode=\"right\">\n      <Timeline.Item dot=\"💾\">\n        <Text delete>\n          Clone and Install from the{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/austintgriffith/scaffold-eth\">\n            github repo\n          </a>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⚛️\">\n        <Text delete>\n          Start your frontend app with: <Text strong>yarn start</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⛓\">\n        <Text delete={props.chainIsUp}>\n          Start your local blockchain with: <Text strong>yarn run chain</Text> (and refresh)\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📝\">\n        <Text delete={props.hasOwner}>\n          Compile and deploy your smart contract: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🤡\">\n        <Text delete={props.isNotSmoort}>\n          Fix error in <Text code>SmartContractWallet.sol</Text> then: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot={<SendOutlined style={{ fontSize: \"16px\" }} />} color={props.hasEther ? \"green\" : \"blue\"}>\n        <Text delete={props.hasEther}>\n          Send test ether to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address using\n          (bottom left) faucet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<DownloadOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.contractHasEther ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.contractHasEther}>\n          Deposit some funds into your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<EditOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.amOwnerOfContract ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.amOwnerOfContract}>\n          Set <b>owner</b> of your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"☢️\">\n        <Text>\n          Yikes, anyone can take ownership of <Text code>SmartContractWallet.sol</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🔬\">\n        <Text>\n          Test your contract with <Text code>buidler/test/myTest.js</Text> then:\n          <Text strong>yarn run test</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🚀\">\n        <Text>\n          Build something awesome with 🏗 <a href=\"https://github.com/austintgriffith/scaffold-eth\">scaffold-eth</a> and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/austingriffith\">\n            @ me\n          </a>\n          !\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📖\">\n        <Text>\n          Read more about{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/developers\">\n            Ethereum\n          </a>\n          ,{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://solidity.readthedocs.io/en/develop/contracts.html\">\n            Solidity\n          </a>\n          , and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://buidler.dev/tutorial\">\n            Buidler\n          </a>\n        </Text>\n      </Timeline.Item>\n    </Timeline>\n  );\n}\n","import React from 'react'\nimport { Button } from '@chakra-ui/react'\n\nexport default ({ price }) => (\n  <Button\n    onClick={() => {\n      window.open('https://ethgasstation.info/')\n    }}\n    size=\"lg\" leftIcon=\"⛽️\" borderRadius=\"50%\"\n    variant=\"outline\" colorScheme=\"orange\"\n    title=\"Fast Gas Price\"\n  >\n    {price === undefined ? 0 : parseInt(price, 10) / 10 ** 9}g\n  </Button>\n)","import React, { useState, useEffect } from \"react\"\nimport { Input } from \"antd\"\nconst { utils, constants } = require(\"ethers\")\n\n/*\n  ~ What it does? ~\n\n  Displays input field with options to convert between STRING and BYTES32\n\n  ~ How can I use? ~\n\n  <BytesStringInput\n    autofocus\n    value={\"scaffold-eth\"}\n    placeholder=\"Enter value...\"\n    onChange={value => {\n      setValue(value)\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide value={value} to specify initial string\n  - Provide placeholder=\"Enter value...\" value for the input\n  - Control input change by onChange={value => { setValue(value)}}\n\n*/\n\nexport default function BytesStringInput(props) {\n  const [mode, setMode] = useState(\"STRING\")\n  const [display, setDisplay] = useState()\n  const [value, setValue] = useState(constants.HashZero)\n\n  // current value is the value in bytes32\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value\n\n  const option = (title) => (\n    <div\n      style={{ cursor: \"pointer\" }}\n      onClick={() => {\n        if (mode === \"STRING\") {\n          setMode(\"BYTES32\")\n          if (!utils.isHexString(currentValue)) {\n              /* in case user enters invalid bytes32 number, \n                  it considers it as string and converts to bytes32 */\n              const changedValue = utils.formatBytes32String(currentValue)\n              setDisplay(changedValue)\n          } else {\n              setDisplay(currentValue)\n          }\n        } else {\n          setMode(\"STRING\")\n          if (currentValue && utils.isHexString(currentValue)) {\n            setDisplay(utils.parseBytes32String(currentValue))\n          } \n          else {\n            setDisplay(currentValue)\n          }\n        }\n      }}\n    >\n      {title}\n    </div>\n  )\n\n  let addonAfter\n  if (mode === \"STRING\") {\n    addonAfter = option(\"STRING 🔀\")\n  } else {\n    addonAfter = option(\"BYTES32 🔀\")\n  }\n\n  useEffect(\n    () => {\n      if(!currentValue){\n        setDisplay(\"\")\n      }\n    }\n  , [currentValue])\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"Enter value in \" + mode}\n      autoFocus={props.autoFocus}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async (e) => {\n        const newValue = e.target.value\n        if(mode === \"STRING\") {\n          //const ethValue = parseFloat(newValue) / props.price\n          //setValue(ethValue)\n          if(typeof props.onChange === \"function\") {\n            props.onChange(utils.formatBytes32String(newValue))\n          }\n          setValue(utils.formatBytes32String(newValue))\n          setDisplay(newValue)\n\n        } else {\n          if(typeof props.onChange === \"function\") {\n            props.onChange(newValue)\n          }\n          setValue(newValue)\n          setDisplay(newValue)\n        }\n      }}\n    />\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport {\n  Alert, AlertIcon, Button, Spinner, Image, Tooltip,\n  Table, Thead, Tbody, Tr, Th, Td, Container, Box, useColorMode,\n} from '@chakra-ui/react'\nimport { ExternalLinkIcon } from '@chakra-ui/icons'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useQuery, gql } from '@apollo/client'\nimport registryAddress from '../contracts/WearablesNFTs.address'\nimport { httpURL } from '../helpers'\n\nconst TOKENS = gql(`\n  query GetTokens {\n    tokenRegistry(id: \"${registryAddress.toLowerCase()}\") {\n      id\n      tokens {\n        id\n        URI\n        totalSupply\n      }\n    }\n  }\n`)\n\nexport default ({ action = null }) => {\n  const { loading, error, data } = useQuery(TOKENS)\n  const [tokens, setTokens] = useState(null)\n  const { colorMode } = useColorMode()\n  const history = useHistory()\n  const load = useCallback(async () => {\n    if(data) {\n      const tokenData = data?.tokenRegistry?.tokens\n      if(!tokenData) {\n        return setTokens([])\n      }\n\n      const tokens = tokenData.map((token) => ({\n        loading: true,\n        id: token.id,\n        supply: token.totalSupply,\n        metadata: token.URI,\n      }))\n      setTokens(tokens)\n      const uris = [...new Set([...tokens.map(t => t.metadata)])]\n      await Promise.all(uris.map(async (uri) => {\n        const response = await fetch(httpURL(uri))\n        if(response.ok) {\n          const meta = await response.json()\n          setTokens((tokens) => {\n            return tokens.map((tkn) => {\n              if(tkn.metadata !== uri) {\n                return tkn\n              } else {\n                return {\n                  ...tkn,\n                  loading: false,\n                  name: meta.name,\n                  description: meta.description,\n                  image: httpURL(meta.image),\n                }\n              }\n            })\n          })\n        }\n      }))\n    }\n  }, [data])\n\n  useEffect(() => { load() }, [load])\n\n  if(error) {\n    return (\n      <Container mt={10}><Alert status=\"error\">\n        <AlertIcon />\n        {error}\n      </Alert></Container>\n    )\n  }\n\n  if(!tokens || loading) {\n    return (\n      <Box align=\"center\" my={10}>\n        <Spinner/>\n      </Box>\n    )\n  }\n\n  if(tokens.length === 0) {\n    return (\n      <Container align=\"center\">\n        <h2>No Tokens Have Been Created Yet</h2>\n        <h2><em>(If you just minted a token, it may take several seconds for The Graph to add the new token to its index.)</em></h2>\n        <Link to=\"/new\"><Button>Create One</Button></Link>\n      </Container>\n    )\n  }\n\n  return (\n    <Table\n      sx={{ 'th, td': { textAlign: 'center' } }}\n    >\n      <Thead>\n        <Tr\n          position=\"sticky\" top={[0, 14]} zIndex={1}\n          bg={colorMode === 'dark' ? 'gray.800' : 'white'}\n        >\n          <Th>Name</Th>\n          <Th>Image</Th>\n          <Th display={['none', 'table-cell']}>Description</Th>\n          <Th display={['none', 'table-cell']}>Supply</Th>\n          <Th display={['none', 'table-cell']}>Metadata</Th>\n          {!action && <Th>Actions</Th>}\n        </Tr>\n      </Thead>\n      <Tbody>\n        {tokens.map((token, idx) => {\n          const redirect = () => {\n            if(action) {\n              history.push(`/${action}/${token.id}`)\n            }\n          }\n          return (\n            <Tr\n              key={idx} onClick={redirect}\n              _hover={{ bg: action ? '#F3FF0033' : '#0000FF11' }}\n            >\n              <Td>{token.loading ? <Spinner/> : (\n                token.name ?? <em>Unnamed</em>\n              )}</Td>\n              <Td>{token.loading ? <Spinner/> : (\n                <a\n                  href={token.image}\n                  target=\"_blank\" rel=\"noopener noreferrer\"\n                >\n                  <Image maxH=\"5rem\" m=\"auto\" src={token.image}/>\n                </a>\n                ?? <em>No Image</em>\n              )}</Td>\n              <Td display={['none', 'table-cell']}>\n                {token.loading ? <Spinner/> : (\n                  token.description ? (\n                    `${token.description.split('.')[0]}…`\n                  ) : (\n                    <em>No Description</em>\n                  )\n                )}\n              </Td>\n              <Td display={['none', 'table-cell']}>\n                {token.supply}\n              </Td>\n              <Td display={['none', 'table-cell']}>\n                <a href={token.metadata}>\n                  <ExternalLinkIcon/>\n                </a>\n              </Td>\n              {!action && (\n                <Td>\n                  {\n                    Object.entries({\n                      disburse: { title: 'Distribute', icon: '⛲' },\n                      view: { title: 'View', icon: '👁️' },\n                      edit: { title: 'Edit', icon: '✏️' },\n                    })\n                    .map(([action, { title, icon }]) => (\n                      <Tooltip\n                        label={title} key={action}\n                        hasArrow placement=\"left\"\n                      >\n                        <Link\n                          to={`/${action}/${token.id}`}\n                          {...{ title }}\n                        >\n                          <Button\n                            borderWidth={3} variant=\"outline\"\n                            _hover={{ bg: '#00FF0044' }}\n                          >\n                            <span role=\"img\" aria-label={title}>\n                              {icon}\n                            </span>\n                          </Button>\n                        </Link>\n                      </Tooltip>\n                    ))\n                  }\n                </Td>\n              )}\n            </Tr>\n          )\n        })}\n      </Tbody>\n    </Table>\n  )\n}\n","import { Container, FormControl, FormLabel, Input } from '@chakra-ui/react'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nexport default ({\n  contract, treasurer: treasurerParam, validNetwork\n}) => {\n  const [quantity, setQuantity] = useState(1)\n  const [treasurer, setTreasurer] = useState(treasurerParam)\n  const [metadata, setMetadata] = useState('')\n  const history = useHistory()\n\n  // ToDo: Fix this. The value is initially unset & later values are\n  // ignored as a default value\n  useEffect(() => {\n    if(treasurerParam && !treasurer) {\n      setTreasurer(treasurerParam)\n    }\n  }, [treasurerParam, treasurer])\n\n  const create = async (evt) => {\n    evt.preventDefault()\n    const enact = (\n      window.confirm(`¿Mint ${quantity} token${quantity === 1 ? '' : 's'} to ${treasurer}?`)\n    )\n    if(enact) {\n      await contract.mint(treasurer, quantity, metadata, [])\n      history.push('/')\n    }\n  }\n\n  if(!contract) {\n    return (\n      <Container align=\"center\">¡Missing Contract!</Container>\n    )\n  }\n\n  return (\n    <Container as=\"form\" onSubmit={create} mt={10}>\n      <FormControl isRequired>\n        <FormLabel>Quantity:</FormLabel>\n        <Input\n          type=\"number\"\n          value={quantity}\n          onChange={(evt) => {\n            const val = evt.target.value\n            setQuantity(val && parseInt(val))\n          }}\n          placeholder=\"¿How many tokens to mint?\"\n        />\n      </FormControl>\n      <FormControl isRequired>\n        <FormLabel>Treasurer:</FormLabel>\n        <Input\n          type=\"text\"\n          value={treasurer}\n          onChange={(evt) => setTreasurer(evt.target.value)}\n          placeholder=\"¿Who should receive the new tokens?\"\n        />\n      </FormControl>\n      <FormControl isRequired>\n        <FormLabel>Metadata:</FormLabel>\n        <Input\n          value={metadata}\n          onChange={(evt) => setMetadata(evt.target.value)}\n          placeholder=\"ToDo: Automatically generate this…\"\n        />\n      </FormControl>\n      <Input\n        mt={2} variant=\"filled\" type=\"submit\" value=\"Create\"\n        title={\n          validNetwork ? 'Create NFTs' : 'Connect to the correct network.'\n        }\n        isDisabled={!validNetwork}\n      />\n    </Container>\n  )\n}","import React, { useRef, useState } from 'react'\nimport {\n  Modal, ModalOverlay, ModalContent, ModalHeader,\n  ModalCloseButton, ModalBody, ModalFooter,\n  Button, Tabs, TabList, TabPanels, Tab, TabPanel,\n  FormControl, FormLabel, FormHelperText, Textarea,\n  OrderedList, ListItem,\n} from '@chakra-ui/react'\nimport Address from './Address'\n\nconst InputTabs = ({\n  text, raw, update, addresses, ensProvider,\n}) => (\n  <Tabs isFitted variant=\"enclosed\">\n    <TabList mb=\"1em\">\n      <Tab>CSV</Tab>\n      <Tab>Parsed</Tab>\n    </TabList>\n    <TabPanels>\n      <TabPanel>\n        <FormControl>\n          <FormLabel>Comma Separated ETH Addresses</FormLabel>\n          <Textarea\n            placeholder=\"Enter space, semicolon, or comma separated eth addresses.\"\n            ref={text} value={raw} minH=\"6em\"\n            onChange={(evt) => update(evt.target.value)}\n          />\n          <FormHelperText>Each address will get one token.</FormHelperText>\n        </FormControl>\n      </TabPanel>\n      <TabPanel>\n        <OrderedList>\n          {addresses.map((addr) => (\n            <ListItem key={addr} justifyContent=\"center\">\n              <Address\n                value={addr} size=\"medium\" {...{ ensProvider }}\n              />\n            </ListItem>\n          ))}\n        </OrderedList>\n      </TabPanel>\n    </TabPanels>\n  </Tabs>\n)\n\nexport default ({\n  isOpen = false, onClose, quantity, ensProvider,\n  distribute,\n}) => {\n  const [raw, setRaw] = useState('')\n  const [addresses, setAddresses] = useState([])\n  const text = useRef()\n  const update = (input) => {\n    setRaw(input)\n    setAddresses(\n      input.split(/\\s*([;,]|\\s)\\s*/)\n      .filter(addr => !(/^([;,]|\\s)?$/.test(addr)))\n    )\n  }\n  const cancel = () => {\n    update('')\n    onClose()\n  }\n  const process = async () => {\n    try {\n      await distribute(addresses)\n      onClose()\n    } catch(err) {\n      console.error('Distribution Error', err)\n    }\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} initialFocusRef={text}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          Distribute {addresses.length} / {quantity} Tokens\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <InputTabs {...{\n            text,\n            raw,\n            update,\n            addresses,\n            ensProvider,\n          }}/>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            colorScheme=\"blue\" mr={3}\n            onClick={process}\n          >\n            Distribute\n          </Button>\n          <Button variant=\"ghost\" onClick={cancel}>Cancel</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}","import React, { useEffect , useState} from 'react'\nimport {\n  Alert, AlertIcon, Spinner, Button, Tooltip,\n  Table, Thead, Tbody, Tr, Th, Td, useDisclosure,\n  Box, Image, Flex, Heading, useToast, useBreakpointValue, useColorMode,\n} from '@chakra-ui/react'\nimport { useQuery, gql } from '@apollo/client'\nimport { useParams } from 'react-router'\nimport Address from '../components/Address'\nimport Distribute from '../components/DistributeModal'\nimport { httpURL } from '../helpers'\nimport contractAddress from '../contracts/WearablesNFTs.address'\n\nconst TOKEN = gql(`\n  query GetToken($id: String!) {\n    token(id: $id) {\n      identifier\n      totalSupply\n      balances {\n        account { id }\n        value\n      }\n      URI\n    }\n  }\n`)\n\nexport default ({\n  ensProvider, address, contract, validNetwork,\n}) => {\n  const [balances, setBalances] = useState(null)\n  const [quantity, setQuantity] = useState(null)\n  const [tokenID, setTokenID] = useState(null)\n  const [total, setTotal] = useState(null)\n  const [meta, setMeta] = useState(<Spinner/>)\n  const { colorMode }= useColorMode()\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const toast = useToast()\n  const params = useParams()\n  const addrSize = (\n    useBreakpointValue(['shortest', 'medium'])\n  )\n\n  let id = params.id?.toLowerCase()\n  if(!id.includes('-')) {\n    if(!id.startsWith('0x')) id = `0x${id}`\n    id = `${contractAddress.toLowerCase()}-${id}`\n  }\n\n  let { loading, error, data } = useQuery(\n    TOKEN, { variables: { id } },\n  )\n  const config = () => {\n    if(!validNetwork) {\n      toast({\n        title: 'Connection Error',\n        description: 'Connect to the correct network to distribute.',\n        status: 'error',\n        duration: 7000,\n        isClosable: true,\n      })\n    } else {\n      setQuantity(balances[address.toLowerCase()])\n      onOpen()\n    }\n  }\n  const distribute = async (recipients) => {\n    try {\n      await contract.distributeSingles(\n        address, recipients, tokenID, []\n      )\n    } catch(err) {\n      const cause = err.error\n      console.error('Error Distributing', err)\n      toast({\n        title: \"Couldn't Distribute\",\n        description: cause.message,\n        status: 'error',\n        duration: null,\n        isClosable: true,\n      })\n      throw cause\n    }\n  }\n\n  useEffect(() => {\n    if(data?.token) {\n      const { balances, totalSupply, identifier, URI } = (\n        data.token\n      )\n      const quantities = Object.fromEntries(\n        balances.map((bal) => [\n          bal.account.id,\n          parseInt(bal.value, 10),\n        ])\n      )\n      setBalances(quantities)\n      setTotal(totalSupply)\n      setTokenID(identifier)\n\n      fetch(httpURL(URI))\n      .then(res => res.json())\n      .then((meta) => {\n        setMeta(\n          <Flex justify=\"center\" m={8}>\n            <Image\n              src={httpURL(meta.image)}\n              maxH=\"3rem\" mr={5} ml={5}\n            />\n            <Heading size=\"lg\">{meta.name}</Heading>\n          </Flex>\n        )\n      })\n    }\n  }, [data])\n\n  if(loading) {\n    return <Spinner/>\n  }\n\n  if(!balances || balances.length === 0) {\n    error = error ?? \"Couldn't find any balances.\"\n  }\n\n  if(error) {\n    return (\n      <Alert status=\"error\">\n        <AlertIcon />\n        {error}\n      </Alert>\n    )\n  }\n\n  return (\n    <Box>\n      <Distribute {...{ isOpen, onClose, quantity, distribute }}/>\n      {meta}\n      <Table sx={{ 'th, td': { textAlign: 'center' } }}>\n        <Thead\n          position=\"sticky\" top={[0, 14]} zIndex={1}\n          bg={colorMode === 'dark' ? 'gray.800' : 'white'}\n        >\n          <Tr>\n            <Th textAlign=\"center\">\n              Quantity {total && `(${total})`}\n            </Th>\n            <Th>Owner</Th>\n            <Th>Actions</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {Object.entries(balances).map(([account, amount]) => (\n            <Tr key={account}>\n              <Td>{amount}</Td>\n              <Td><Address\n                value={account} size={addrSize}\n                {...{ ensProvider }}\n              /></Td>\n              <Td>\n                {account?.localeCompare(\n                  address, undefined, { sensitivity: 'base' }\n                ) === 0 && (\n                  <Button onClick={config}>\n                    <span role=\"img\" aria-label=\"Distribute\">\n                      ⛲\n                    </span>\n                  </Button>\n                )}\n              </Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </Table>\n    </Box>\n  )\n}","import React from 'react'\nimport { Heading } from \"@chakra-ui/react\"\nimport { useParams } from \"react-router-dom\"\nimport DisburseNFTs from \"./DisburseNFTs\"\nimport ExistingNFTs from \"./ExistingNFTs\"\n\nexport default ({\n  address, ensProvider, contract, validNetwork,\n}) => {\n  const params = useParams()\n\n  if(params.id) {\n    return (\n      <DisburseNFTs\n        {...{ address, ensProvider, contract, validNetwork }}\n      />\n    )\n  } else {\n    return (\n      <>\n        <Heading align=\"center\" m={8}>\n          Select Which NFT To Distribute\n        </Heading>\n        <ExistingNFTs\n          {...{ ensProvider, validNetwork }}\n          action=\"disburse\"\n        />\n      </>\n    )\n  }\n}","import {\n  chakra, Button, Spinner, FormControl, Container, Input,\n  FormLabel, UnorderedList, ListItem, Box, Image, Tooltip,\n  Tabs, Tab, TabList, TabPanels, TabPanel, Textarea, Flex,\n  Alert, AlertIcon, IconButton, Text, useBreakpointValue,\n  ButtonGroup,\n} from '@chakra-ui/react'\nimport { useQuery, gql } from '@apollo/client'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport ReactMarkdown from 'react-markdown'\nimport { useLocation } from 'react-router-dom'\nimport { ExternalLinkIcon } from '@chakra-ui/icons'\nimport { SaveOutlined } from '@ant-design/icons'\nimport contractAddress from '../contracts/WearablesNFTs.address'\nimport { httpURL } from '../helpers'\nimport EditOrList from './EditOrList'\n\nconst TOKEN = gql(`\n  query GetToken($id: String!) {\n    token(id: $id) {\n      identifier\n      URI\n    }\n  }\n`)\n\nconst useQueryParams = () => (\n  new URLSearchParams(useLocation().search)\n)\n\nexport default ({ contract, validNetwork }) => {\n  const [metadata, setMetadata] = useState()\n  const [newMetadata, setNewMetadata] = useState('')\n  const [tokenId, setTokenId] = useState()\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const [homepage, setHomepage] = useState('')\n  const [wearables, setWearables] = useState({})\n  const query = useQueryParams()\n  const saveLabel = useBreakpointValue(['Save', ''])\n  \n  const [hide, setHide] = useState({})\n  const toggle = useCallback((prop) => {\n    setHide(h => ({ ...h, [prop]: !h[prop] }))\n  }, [])\n\n  const params = useParams()\n  let id = params.id?.toLowerCase()\n  if(!id.includes('-')) {\n    if(!id.startsWith('0x')) id = `0x${id}`\n    id = `${contractAddress.toLowerCase()}-${id}`\n  }\n\n  let { loading, error, data } = useQuery(\n    TOKEN, { variables: { id } },\n  )\n\n  useEffect(() => {\n    if(data?.token) {\n      setTokenId(data.token.identifier)\n\n      ;(async () => {\n        const res = await fetch(httpURL(data.token.URI))\n        if(res.ok) {\n          try {\n            const metadata = await res.json()\n            setMetadata(metadata)\n            setName(metadata.name ?? '')\n            setDescription(metadata.description ?? '')\n            setHomepage(metadata.external_url ?? '')\n            setWearables(metadata.properties?.wearables ?? {})\n          } catch(err) { // invalid JSON\n            setMetadata(null)\n          }\n        } else {\n          console.error('Metadata Response', res)\n        }\n      })()\n    }\n  }, [data])\n\n  if(id === undefined) {\n    return (\n      <EditOrList {...{ contract, validNetwork }}/>\n    )\n  }\n\n  if(error) {\n    return (\n      <Container mt={10}><Alert status=\"error\">\n        <AlertIcon />\n        {error}\n      </Alert></Container>\n    )\n  }\n\n  if(metadata === undefined || loading) {\n    return (\n      <Box align=\"center\" mt={10}>\n        <Spinner size=\"lg\"/>\n      </Box>\n    )\n  }\n\n  const overwrite = async (evt) => {\n    evt.preventDefault()\n    const res = await fetch(httpURL(newMetadata))\n    const metadata = res.json()\n    await contract.setURI(newMetadata, tokenId)\n    setMetadata(metadata)\n  }\n\n  if(metadata === null || query.get('overwrite')) {\n    return (\n      <Container as=\"form\" onSubmit={overwrite} mt={10}>\n        <FormControl isRequired>\n          <FormLabel>New Metadata</FormLabel>\n          <Input\n            value={newMetadata}\n            onChange={(evt) => (\n              setNewMetadata(evt.target.value)\n            )}\n            placeholder={(() => {\n              let msg = ((metadata === null) ? (\n                \"Metadata is corrupt.\"\n              ) : (\n                \"Metadata override specified.\"\n              ))\n              return `${msg} Provide a replacement.`\n            })}\n          />\n        </FormControl>\n        <Button\n          type=\"submit\" isDisabled={!validNetwork} mt={5}\n          title={validNetwork ? 'Replace Metadata' : (\n            'Connect to the correct network.'\n          )}\n        >\n          Overwrite Metadata\n        </Button>\n      </Container>\n    )\n  }\n\n  const save = () => {\n    console.info(\"Saving…\")\n  }\n\n  return (\n    <Flex\n      direction={['column-reverse', 'row-reverse']}\n      align=\"center\" justify=\"center\" mt={10}\n    >\n      <Tooltip hasArrow placement=\"top\" label=\"Save\">\n        <ButtonGroup\n          isAttached variant=\"outline\" mt={5} onClick={save}\n        >\n          <IconButton\n            aria-label=\"Save\" title=\"Save\" icon={<SaveOutlined/>}\n          />\n          {saveLabel && <Button>{saveLabel}</Button>}\n        </ButtonGroup>\n      </Tooltip>\n      <Container m={0} sx={{ a: { textDecoration: 'underline' } }}>\n        <UnorderedList>\n          <ListItem listStyleType=\"square\">\n            <FormControl>\n              <Flex align=\"center\">\n                <FormLabel>Name:</FormLabel>\n                <Input\n                  value={name}\n                  onChange={evt => setName(evt.target.value)}\n                />\n              </Flex>\n            </FormControl>\n          </ListItem>\n          <ListItem\n            listStyleType={\n              `disclosure-${hide['desc'] ? 'closed' : 'open'}`\n            }\n          >\n            <Text onClick={() => toggle('desc')}>\n              Description:\n            </Text>\n            {!hide['desc'] && (\n              <Tabs ml={5} isFitted variant=\"enclosed\"  minH=\"15em\">\n                <TabList mb=\"1em\">\n                  <Tab>Markdown</Tab>\n                  <Tab>Preview</Tab>\n                </TabList>\n                <TabPanels>\n                  <TabPanel>\n                    <Textarea\n                      placeholder=\"Enter a markdown formatted description.\"\n                      value={description} minH=\"8em\"\n                      onChange={evt => setDescription(evt.target.value)}\n                    />\n                  </TabPanel>\n                  <TabPanel>\n                    <ReactMarkdown>\n                      {description}\n                    </ReactMarkdown>\n                  </TabPanel>\n                </TabPanels>\n              </Tabs>\n            )}\n          </ListItem>\n          <ListItem listStyleType=\"square\">\n            <FormControl>\n              <Flex align=\"center\">\n                <FormLabel>Homepage:</FormLabel>\n                <Input\n                  value={homepage}\n                  onChange={evt => setHomepage(evt.target.value)}\n                />\n                {homepage.length > 0 && (\n                  <chakra.a ml={3} href={homepage} target=\"_blank\">\n                    <ExternalLinkIcon/>\n                  </chakra.a>\n                )}\n              </Flex>\n            </FormControl>\n          </ListItem>\n          <ListItem\n            listStyleType={\n              `disclosure-${hide['img'] ? 'closed' : 'open'}`\n            }\n          >\n            <Text onClick={() => toggle('img')}>\n              Image:\n            </Text>\n            {!hide['img'] && (\n              <Image src={httpURL(metadata.image)} maxH={60}/>\n            )}\n          </ListItem>\n          <ListItem>Models:{' '}\n            {Object.keys(wearables).length === 0 ? (\n              <em>None</em>\n            ) : (\n              <UnorderedList>\n                {Object.entries(wearables).map(\n                  ([mimetype, model]) => (\n                    <ListItem>\n                      <a href={httpURL(model)}>{mimetype}</a>\n                    </ListItem>\n                  )\n                )}\n              </UnorderedList>\n            )}\n          </ListItem>\n        </UnorderedList>\n      </Container>\n    </Flex>\n  )\n}","import React from 'react'\nimport { Heading } from '@chakra-ui/react'\nimport { useParams } from 'react-router-dom'\nimport UpdateNFT from './UpdateNFT'\nimport ExistingNFTs from './ExistingNFTs'\n\nexport default ({ contract, validNetwork }) => {\n  const params = useParams()\n\n  if(params.id) {\n    return (\n      <UpdateNFT\n        {...{ contract, validNetwork }}\n      />\n    )\n  } else {\n    return (\n      <>\n        <Heading align=\"center\" m={8}>\n          Select Which NFT To Edit\n        </Heading>\n        <ExistingNFTs action=\"edit\"/>\n      </>\n    )\n  }\n}","import {\n  Spinner, Container, UnorderedList, ListItem, Box,\n  Image, Heading, Alert, AlertIcon, useToast,\n} from '@chakra-ui/react'\nimport { useQuery, gql } from '@apollo/client'\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport ReactMarkdown from 'react-markdown'\nimport contractAddress from '../contracts/WearablesNFTs.address'\nimport { httpURL } from '../helpers'\nimport EditOrList from './EditOrList'\nimport { useHistory } from 'react-router-dom'\n\nconst TOKEN = gql(`\n  query GetToken($id: String!) {\n    token(id: $id) {\n      identifier\n      URI\n    }\n  }\n`)\n\nexport default ({ contract, validNetwork }) => {\n  const [metadata, setMetadata] = useState()\n  const [tokenId, setTokenId] = useState()\n  const homepage = metadata?.external_url\n  const wearables = metadata?.properties?.wearables ?? {}\n  const history = useHistory()\n  const params = useParams()\n  const toast = useToast()\n\n  let id = params.id?.toLowerCase()\n  if(!id.includes('-')) {\n    if(!id.startsWith('0x')) id = `0x${id}`\n    id = `${contractAddress.toLowerCase()}-${id}`\n  }\n\n  let { loading, error: qError, data } = useQuery(\n    TOKEN, { variables: { id } },\n  )\n  const [error, setError] = useState(qError)\n\n  useEffect(() => {\n    if(data) {\n      if(!data.token) {\n        let msg = `No data returned for the token ${id}.`\n        if(!validNetwork) {\n          msg += ' You are not connected to the right network…'\n        }\n        setError(msg)\n      } else {\n        setError(null)\n        setTokenId(data.token.identifier)\n\n        ;(async () => {\n          const res = await fetch(httpURL(data.token.URI))\n          if(res.ok) {\n            try {\n              const metadata = await res.json()\n              setMetadata(metadata)\n            } catch(err) { // invalid JSON\n              setMetadata(null)\n            }\n          } else {\n            console.error('Metadata Response', res)\n            toast({\n              title: 'Query Error',\n              description: res.error,\n              status: 'error',\n              duration: null,\n              isClosable: true,\n            })\n          }\n        })()\n      }\n    }\n  }, [data])\n\n  if(id === undefined) {\n    return (\n      <EditOrList {...{ contract, validNetwork }}/>\n    )\n  }\n\n  if(error) {\n    return (\n      <Container mt={10}><Alert status=\"error\">\n        <AlertIcon />\n        {error}\n      </Alert></Container>\n    )\n  }\n\n  if(metadata === undefined || loading) {\n    return (\n      <Box align=\"center\" my={10}>\n        <Spinner size=\"lg\"/>\n      </Box>\n    )\n  }\n\n  if(metadata === null) {\n    history.push(`/edit/${id}`)\n  }\n\n  return (\n    <Container sx={{ a: { textDecoration: 'underline' } }}>\n      <Heading size=\"md\" my={5} align=\"center\">\n        {metadata.name}\n      </Heading>\n      <UnorderedList>\n        <ListItem>Token ID: {tokenId}</ListItem>\n        <ListItem>Description:\n          <Box ml={5}>\n            <ReactMarkdown linkTarget=\"_blank\">\n              {metadata.description}\n            </ReactMarkdown>\n          </Box>\n        </ListItem>\n        <ListItem>Homepage:{' '}\n          {homepage ? (\n            <a href={homepage} target=\"_blank\">\n              {homepage}\n            </a>\n          ) : <em>None</em>}\n        </ListItem>\n        <ListItem>Image:\n          <Image src={httpURL(metadata.image)} maxH=\"15em\"/>\n        </ListItem>\n        <ListItem>Models:{' '}\n          {Object.keys(wearables).length === 0 ? (\n            <em>None</em>\n          ) : (\n            <UnorderedList>\n              {Object.entries(wearables).map(\n                ([mimetype, model]) => (\n                  <ListItem>\n                    <a href={httpURL(model)}>{mimetype}</a>\n                  </ListItem>\n                )\n              )}\n            </UnorderedList>\n          )}\n        </ListItem>\n      </UnorderedList>\n    </Container>\n  )\n}","import React from 'react'\nimport { Heading } from '@chakra-ui/react'\nimport { useParams } from 'react-router-dom'\nimport NFTDetails from './NFTDetails'\nimport ExistingNFTs from './ExistingNFTs'\n\nexport default ({ validNetwork }) => {\n  const params = useParams()\n\n  if(params.id) {\n    return (\n      <NFTDetails {...{ validNetwork }}/>\n    )\n  } else {\n    return (\n      <>\n        <Heading align=\"center\" m={8}>\n          Select Which NFT To View\n        </Heading>\n        <ExistingNFTs action=\"view\"/>\n      </>\n    )\n  }\n}","import React, { useCallback, useEffect, useState } from 'react'\nimport {\n  HashRouter as Router, Switch, Route,\n} from 'react-router-dom'\nimport {\n  StaticJsonRpcProvider, Web3Provider,\n} from '@ethersproject/providers'\nimport { Box } from '@chakra-ui/react'\nimport Web3Modal from 'web3modal'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { useUserAddress } from 'eth-hooks'\nimport { useContractLoader } from './hooks'\nimport { Header } from './components'\nimport { INFURA_ID, NETWORK, NETWORKS } from './constants'\nimport ExistingNFTs from './views/ExistingNFTs'\nimport CreateNFT from './views/CreateNFT'\nimport DisburseOrList from './views/DisburseOrList'\nimport EditOrList from './views/EditOrList'\nimport ViewOrList from './views/ViewOrList'\n\nconst targetNetwork = NETWORKS['rinkeby'] // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\nconst mainnetInfura = (\n  new StaticJsonRpcProvider(`https://mainnet.infura.io/v3/${INFURA_ID}`)\n)\nconst mainnetProvider = mainnetInfura\n\nlet localProviderUrl = targetNetwork.rpcUrl\nlocalProviderUrl = (\n  process.env.REACT_APP_PROVIDER ?? localProviderUrl\n)\nconst localProvider = new StaticJsonRpcProvider(localProviderUrl)\nconst blockExplorer = targetNetwork.blockExplorer\n\nexport default (props) => {\n  const [injectedProvider, setInjectedProvider] = useState()\n  const address = useUserAddress(injectedProvider)\n  const writeContracts = useContractLoader(injectedProvider)\n  const [validNetwork, setValidNetwork] = useState(false)\n\n  useEffect(() => {\n    (async () => {\n      if(injectedProvider) {\n        const chainId = (await injectedProvider.getNetwork()).chainId\n        setValidNetwork(chainId === targetNetwork.chainId)\n      }\n    })()\n  }, [injectedProvider])\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect()\n    setInjectedProvider(new Web3Provider(provider))\n  }, [setInjectedProvider])\n\n  useEffect(() => {\n    if(web3Modal.cachedProvider) {\n      loadWeb3Modal()\n    }\n  }, [loadWeb3Modal])\n\n  return (\n    <Box className=\"App\">\n      <Router>\n        <Header\n          minH=\"4em\" pl={10} pt={5}\n          {...{\n            NETWORK,\n            targetNetwork,\n            address,\n            localProvider,\n            injectedProvider,\n            mainnetProvider,\n            web3Modal,\n            loadWeb3Modal,\n            logoutOfWeb3Modal,\n            blockExplorer,\n          }}\n        />\n\n        <Switch>\n          <Route path='/new'>\n            <CreateNFT\n              contract={writeContracts?.WearablesNFTs}\n              treasurer={address}\n              {...{ validNetwork }}\n            />\n          </Route>\n          <Route path='/edit/:id?'>\n            <EditOrList\n              {...{ validNetwork }}\n              contract={writeContracts?.WearablesNFTs}\n            />\n          </Route>\n          <Route path='/view/:id?'>\n            <ViewOrList {...{ validNetwork }}/>\n          </Route>\n          <Route path='/disburse/:id?'>\n            <DisburseOrList\n              {...{ address, validNetwork }}\n              ensProvider={mainnetProvider}\n              contract={writeContracts?.WearablesNFTs}\n            />\n          </Route>\n          <Route path='/'>\n            <ExistingNFTs ensProvider={mainnetProvider}/>\n          </Route>\n        </Switch>\n      </Router>\n    </Box>\n  )\n}\n\nconst web3Modal = new Web3Modal({\n  // network: 'mainnet', // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID,\n      },\n    },\n  },\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider()\n  setTimeout(() => window.location.reload(), 1)\n}\n\nlet _ = window?.ethereum?.on('chainChanged', (chainId) => (\n  web3Modal.cachedProvider && (\n    setTimeout(() => window.location.reload(), 1)\n  )\n))\n\n_ = window?.ethereum?.on('accountsChanged', (accounts) => (\n  web3Modal.cachedProvider && (\n    setTimeout(() => window.location.reload(), 1)\n  )\n))\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  ApolloClient, ApolloProvider, InMemoryCache,\n} from '@apollo/client'\nimport {\n  ChakraProvider, extendTheme, ColorModeScript,\n} from '@chakra-ui/react'\nimport App from './App'\n\nconst subgraphUri = (\n  'https://api.thegraph.com/subgraphs/name/0xorg/eip1155-subgraph-rinkeby'\n)\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache(),\n})\n\nconst config = {\n  useSystemColorMode: false,\n  initialColorMode: 'dark',\n}\n\n\nconst theme = extendTheme({ config })\n  // styles: {\n  //   global: {\n  //     // body: {\n  //     //   bg: 'red',\n  //     //   color: \"white\",\n  //     // },\n  //   },\n  // },\n// })\n\nconsole.info('ICM', theme.config.initialColorMode)\n\nReactDOM.render(\n  <ApolloProvider {...{ client }}>\n    <ChakraProvider {...{ theme }}>\n      <ColorModeScript\n        initialColorMode={theme.config.initialColorMode}\n      />\n      <App/>\n    </ChakraProvider>\n  </ApolloProvider>,\n  document.getElementById('root'),\n)","module.exports = \"0x7C4D30d4346dDddA53fcEF805EAbA1a524fe5BC7\";","var map = {\n\t\"./WearablesNFTs.abi.js\": 1142\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 586;","var map = {\n\t\"./WearablesNFTs.bytecode.js\": 1143\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 587;","module.exports = __webpack_public_path__ + \"static/media/eth.ec81052f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.25a43f77.svg\";"],"sourceRoot":""}