{"version":3,"sources":["hooks/ContractLoader.js","hooks/ContractExistsAtAddress.js","constants.js","hooks/UserProvider.js","hooks/Poller.js","hooks/OnBlock.js","hooks/Balance.js","hooks/EventListener.js","hooks/LookupAddress.js","components/Address.jsx","components/Balance.jsx","helpers/Transactor.js","components/Blockie.jsx","components/AddressInput.jsx","components/EtherInput.jsx","components/Wallet.jsx","components/Account.jsx","components/Contract/utils.js","components/Contract/DisplayVariable.jsx","components/Contract/FunctionForm.jsx","components/Contract/index.jsx","components/Header.jsx","components/Timeline.jsx","components/GasGauge.jsx","components/BytesStringInput.jsx","components/Swap.jsx","components/ThemeSwitch.jsx","views/NFTCreator.jsx","views/NewNFT.jsx","views/EditNFT.jsx","App.jsx","hooks/GasPrice.js","hooks/ContractReader.js","index.jsx","contracts sync /^/.//.*/.abi/.js$","contracts sync /^/.//.*/.bytecode/.js$","contracts sync /^/.//.*/.address/.js$","contracts/WearablesNFTs.address.js","contracts/YourContract.address.js","contracts/WearablesNFTs.abi.js","contracts/YourContract.abi.js","contracts/WearablesNFTs.bytecode.js","contracts/YourContract.bytecode.js","contracts/contracts.js"],"names":["loadContract","contractName","signer","newContract","Contract","require","bytecode","e","console","log","useContractLoader","providerOrSigner","useState","contracts","setContracts","useEffect","a","listAccounts","accounts","length","getSigner","contractList","newContracts","reduce","accumulator","loadContracts","useContractExistsAtAddress","provider","contractAddress","contractIsDeployed","setContractIsDeployed","checkDeployment","isAddress","getCode","INFURA_ID","NETWORK","chainId","Object","values","NETWORKS","props","localhost","name","color","blockExplorer","rpcUrl","window","location","hostname","mainnet","kovan","faucet","rinkeby","ropsten","goerli","xdai","price","gasPrice","matic","mumbai","useUserProvider","injectedProvider","localProvider","useMemo","burnerConfig","pathname","indexOf","rawPK","incomingPK","hash","replace","privateKey","history","pushState","currentPrivateKey","localStorage","getItem","setItem","Date","now","connection","url","Web3Provider","BurnerProvider","networkName","_network","usePoller","fn","delay","extraWatch","savedCallback","useRef","current","id","setInterval","clearInterval","args","listener","blockNumber","on","off","address","pollTime","balance","setBalance","pollBalance","useCallback","getBalance","newBalance","useOnBlock","event","startBlock","updates","setUpdates","undefined","resetEventsBlock","messages","assign","pop","removeListener","error","lookupAddress","reportedName","resolveName","resolvedAddress","info","getAddress","useLookupAddress","ensName","setEnsName","cache","JSON","parse","created_at","then","stringify","Text","Typography","value","ens","ensProvider","currentTheme","useThemeSwitcher","avatar","paragraph","rows","displayAddress","substr","startsWith","size","etherscanLink","blockExplorerLink","minimized","style","verticalAlign","href","target","rel","seed","toLowerCase","scale","textProps","copyable","text","onChange","editable","fontSize","paddingLeft","input","floatBalance","usingBalance","useBalance","etherBalance","formatEther","parseFloat","toFixed","displayBalance","toExponential","padding","cursor","Transactor","etherscan","tx","getNetwork","network","options","dappId","system","networkId","transactionHandler","txInformation","notify","Notify","etherscanNetwork","etherscanTxUrl","Promise","result","parseUnits","gasLimit","hexlify","sendTransaction","includes","emitter","transaction","onclick","open","notification","message","description","placement","Blockie","AddressInput","setValue","scan","setScan","currentValue","scannerButton","marginTop","onClick","count","CameraOutlined","QrcodeOutlined","updateAddress","newValue","possibleAddress","scanner","zIndex","position","left","top","width","resolution","onError","onScan","possibleNewValue","lastIndexOf","autoComplete","autoFocus","placeholder","prefix","addonAfter","EtherInput","mode","setMode","display","setDisplay","option","title","usdValue","ethValue","Paragraph","Wallet","receiveButton","privateKeyButton","signerAddress","useUserAddress","selectedAddress","setOpen","qr","setQr","amount","setAmount","toAddress","setToAddress","pk","setPK","providerSend","WalletOutlined","rotate","level","includeMargin","renderAs","imageSettings","excavate","key","KeyOutlined","wallet","ethers","extraPkDisplayAdded","extraPkDisplay","push","backgroundStyle","Address","pastpk","pastwallet","createRandom","_signingKey","reload","inputStyle","visible","float","paddingRight","dollarMultiplier","onOk","onCancel","footer","type","disabled","loading","parseEther","toString","to","SendOutlined","userProvider","mainnetProvider","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","modalButtons","cachedProvider","marginLeft","shape","LogoutOutlined","tryToDisplay","thing","toNumber","formatUnits","DisplayVariable","contractFunction","functionInfo","refreshRequired","triggerRefresh","variable","setVariable","refresh","funcResponse","span","textAlign","opacity","utils","FunctionForm","form","setForm","txValue","setTxValue","returnValue","setReturnValue","inputIndex","inputs","map","buttons","isHexString","formUpdate","parseBytes32String","formatBytes32String","toUtf8String","toUtf8Bytes","trim","margin","suffix","txValueInput","floatValue","BigNumber","from","toHexString","payable","buttonIcon","defaultValue","bordered","height","innerIndex","baseType","test","stateMutability","returned","overrides","noContractDisplay","marginRight","role","aria-label","customContract","account","show","contract","displayedContractFunctions","interface","functions","filter","contractDisplay","isQueryable","connect","Account","Header","subTitle","GasGauge","parseInt","constants","Select","Option","Swap","ThemeSwitcher","theme","isDarkMode","setIsDarkMode","switcher","themes","status","className","right","bottom","checked","isChecked","dark","light","singleEvents","batchEvents","Math","max","data","setData","columns","dataIndex","render","_","record","forEach","evt","creator","operator","created_at_block","quantity","treasurer","dataSource","treasurerParam","setQuantity","setTreasurer","maxWidth","onFinish","confirm","mint","toISOString","Item","label","rules","required","val","metadata","setMetadata","params","useParams","uri","targetNetwork","scaffoldEthProvider","StaticJsonRpcProvider","mainnetInfura","localProviderUrl","process","REACT_APP_PROVIDER","networkDisplay","setInjectedProvider","speed","setGasPrice","loadGasPrice","axios","get","response","newGasPrice","catch","useGasPrice","localChainId","selectedChainId","yourLocalBalance","readContracts","writeContracts","faucetTx","functionName","formatter","adjustPollTime","setTimeout","bind","updateValue","useContractReader","useEventListener","closable","route","setRoute","faucetHint","faucetClicked","setFaucetClicked","selectedKeys","exact","path","NFTCreator","WearablesNFTs","NewNFT","EditNFT","align","gutter","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","clearCachedProvider","ethereum","prevTheme","subgraphUri","client","ApolloClient","InMemoryCache","ReactDOM","themeMap","defaultTheme","document","getElementById","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.ed9d6600.chunk.js","sourcesContent":["/* eslint-disable import/no-dynamic-require */\n/* eslint-disable global-require */\nimport { Contract } from \"@ethersproject/contracts\";\nimport { useState, useEffect } from \"react\";\n\n/*\n  ~ What it does? ~\n\n  Loads your local contracts and gives options to read values from contracts \n                                              or write transactions into them\n\n  ~ How can I use? ~\n\n  const readContracts = useContractLoader(localProvider) // or\n  const writeContracts = useContractLoader(userProvider)\n\n  ~ Features ~\n\n  - localProvider enables reading values from contracts\n  - userProvider enables writing transactions into contracts\n  - Example of keeping track of \"purpose\" variable by loading contracts into readContracts \n    and using ContractReader.js hook:\n    const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\n  - Example of using setPurpose function from our contract and writing transactions by Transactor.js helper:\n    tx( writeContracts.YourContract.setPurpose(newPurpose) )\n*/\n\nconst loadContract = (contractName, signer) => {\n  const newContract = new Contract(\n    require(`../contracts/${contractName}.address.js`),\n    require(`../contracts/${contractName}.abi.js`),\n    signer,\n  );\n  try {\n    newContract.bytecode = require(`../contracts/${contractName}.bytecode.js`);\n  } catch (e) {\n    console.log(e);\n  }\n  return newContract;\n};\n\nexport default function useContractLoader(providerOrSigner) {\n  const [contracts, setContracts] = useState();\n  useEffect(() => {\n    async function loadContracts() {\n      if (typeof providerOrSigner !== \"undefined\") {\n        try {\n          // we need to check to see if this providerOrSigner has a signer or not\n          let signer;\n          let accounts;\n          if (providerOrSigner && typeof providerOrSigner.listAccounts === \"function\") {\n            accounts = await providerOrSigner.listAccounts();\n          }\n\n          if (accounts && accounts.length > 0) {\n            signer = providerOrSigner.getSigner();\n          } else {\n            signer = providerOrSigner;\n          }\n\n          const contractList = require(\"../contracts/contracts.js\");\n\n          const newContracts = contractList.reduce((accumulator, contractName) => {\n            accumulator[contractName] = loadContract(contractName, signer);\n            return accumulator;\n          }, {});\n          setContracts(newContracts);\n        } catch (e) {\n          console.log(\"ERROR LOADING CONTRACTS!!\", e);\n        }\n      }\n    }\n    loadContracts();\n  }, [providerOrSigner]);\n  return contracts;\n}\n","import { useEffect, useState } from \"react\";\nimport { isAddress } from \"@ethersproject/address\";\n\n/*\n  ~ What it does? ~\n\n  Checks whether a contract exists on the blockchain, returns true if it exists, otherwise false\n\n  ~ How can I use? ~\n\n  const contractIsDeployed = useContractExistsAtAddress(localProvider, contractAddress);\n\n  ~ Features ~\n\n  - Provide contractAddress to check if the contract is deployed\n  - Change provider to check contract address on different chains (ex. mainnetProvider)\n*/\n\nconst useContractExistsAtAddress = (provider, contractAddress) => {\n  const [contractIsDeployed, setContractIsDeployed] = useState(false);\n\n  // We can look at the blockchain and see what's stored at `contractAddress`\n  // If we find code then we know that a contract exists there.\n  // If we find nothing (0x0) then there is no contract deployed to that address\n  useEffect(() => {\n    // eslint-disable-next-line consistent-return\n    const checkDeployment = async () => {\n      if (!isAddress(contractAddress)) return false;\n      const bytecode = await provider.getCode(contractAddress);\n      setContractIsDeployed(bytecode !== \"0x0\");\n    };\n    if (provider) checkDeployment();\n  }, [provider, contractAddress]);\n\n  return contractIsDeployed;\n};\n\nexport default useContractExistsAtAddress;\n","// From: https://infura.io/dashboard/ethereum\nexport const INFURA_ID = \"79a107f3e7784d31bcedd6fba13d93e9\"\n\n// From: https://etherscan.io/myapikey\nexport const ETHERSCAN_KEY = \"5T6PH4NAY5SDI9MQY8K7PW9CKIS2EBYGMX\"\n\n//BLOCKNATIVE ID FOR Notify.js:\nexport const BLOCKNATIVE_DAPPID = \"0b58206a-f3c0-4701-a62f-73c7243e8c77\"\n\n// EXTERNAL CONTRACTS\n\nexport const DAI_ADDRESS = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n\nexport const DAI_ABI = [{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg1\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\n\nexport const NETWORK = (chainId) => {\n  for(let props of Object.values(NETWORKS)) {\n    if(props.chainId === chainId) {\n      return props\n    }\n  }\n}\n\nexport const NETWORKS = {\n  localhost: {\n    name: \"localhost\",\n    color: '#666666',\n    chainId: 31337,\n    blockExplorer: '',\n    rpcUrl: `http://${window.location.hostname}:8545`,\n  },\n  mainnet: {\n    name: \"mainnet\",\n    color: '#ff8b9e',\n    chainId: 1,\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://etherscan.io/\",\n  },\n  kovan: {\n    name: \"kovan\",\n    color: '#7003DD',\n    chainId: 42,\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://kovan.etherscan.io/\",\n    faucet: \"https://gitter.im/kovan-testnet/faucet\",//https://faucet.kovan.network/\n  },\n  rinkeby: {\n    name: \"rinkeby\",\n    color: '#e0d068',\n    chainId: 4,\n    rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\n    faucet: \"https://faucet.rinkeby.io/\",\n    blockExplorer: \"https://rinkeby.etherscan.io/\",\n  },\n  ropsten: {\n    name: \"ropsten\",\n    color: '#F60D09',\n    chainId: 3,\n    faucet: \"https://faucet.ropsten.be/\",\n    blockExplorer: \"https://ropsten.etherscan.io/\",\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\n  },\n  goerli: {\n    name: \"goerli\",\n    color: '#0975F6',\n    chainId: 5,\n    faucet: \"https://goerli-faucet.slock.it/\",\n    blockExplorer: \"https://goerli.etherscan.io/\",\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\n  },\n  xdai: {\n    name: \"xdai\",\n    color: '#48a9a6',\n    chainId: 100,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://dai.poa.network\",\n    faucet: \"https://xdai-faucet.top/\",\n    blockExplorer: \"https://blockscout.com/poa/xdai/\",\n  },\n  matic: {\n    name: \"matic\",\n    color: '#2bbdf7',\n    chainId: 137,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mainnet.maticvigil.com\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://explorer-mainnet.maticvigil.com//\",\n  },\n  mumbai: {\n    name: \"mumbai\",\n    color: '#92D9FA',\n    chainId: 80001,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://mumbai-explorer.matic.today/\",\n  },\n}\n","import { useMemo } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport BurnerProvider from \"burner-provider\";\nimport { INFURA_ID } from \"../constants\";\n\n/*\n  ~ What it does? ~\n\n  Gets user provider\n\n  ~ How can I use? ~\n\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n\n  ~ Features ~\n\n  - Specify the injected provider from Metamask\n  - Specify the local provider\n  - Usage examples:\n    const address = useUserAddress(userProvider);\n    const tx = Transactor(userProvider, gasPrice)\n*/\n\nconst useUserProvider = (injectedProvider, localProvider) =>\nuseMemo(() => {\n  if (injectedProvider) {\n    console.log(\"🦊 Using injected provider\");\n    return injectedProvider;\n  }\n  if (!localProvider) return undefined;\n\n  let burnerConfig = {}\n\n  if(window.location.pathname){\n    if(window.location.pathname.indexOf(\"/pk\")>=0){\n      let incomingPK = window.location.hash.replace(\"#\",\"\")\n      let rawPK\n      if(incomingPK.length===64||incomingPK.length===66){\n        console.log(\"🔑 Incoming Private Key...\");\n        rawPK=incomingPK\n        burnerConfig.privateKey = rawPK\n        window.history.pushState({},\"\", \"/\");\n        let currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n        if(currentPrivateKey && currentPrivateKey!==rawPK){\n          window.localStorage.setItem(\"metaPrivateKey_backup\"+Date.now(),currentPrivateKey);\n        }\n        window.localStorage.setItem(\"metaPrivateKey\",rawPK);\n      }\n    }\n  }\n\n  console.log(\"🔥 Using burner provider\",burnerConfig);\n  if (localProvider.connection && localProvider.connection.url) {\n    burnerConfig.rpcUrl = localProvider.connection.url\n    return new Web3Provider(new BurnerProvider(burnerConfig));\n  }else{\n    // eslint-disable-next-line no-underscore-dangle\n    const networkName = localProvider._network && localProvider._network.name;\n    burnerConfig.rpcUrl = `https://${networkName || \"mainnet\"}.infura.io/v3/${INFURA_ID}`\n    return new Web3Provider(new BurnerProvider(burnerConfig));\n  }\n}, [injectedProvider, localProvider]);\n\nexport default useUserProvider;\n","import { useEffect, useRef } from \"react\";\n\n// helper hook to call a function regularly in time intervals\n\nexport default function usePoller(fn, delay, extraWatch) {\n  const savedCallback = useRef();\n  // Remember the latest fn.\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [fn]);\n  // Set up the interval.\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n  // run at start too\n  useEffect(() => {\n    fn();\n  },[ extraWatch ]);\n}\n","import { useEffect, useRef } from \"react\"\n\n// helper hook to call a function regularly in time intervals\nlet DEBUG = false\n\nexport default (provider, fn, args = []) => {\n  const savedCallback = useRef()\n\n  // Remember the latest fn.\n  useEffect(() => {\n    savedCallback.current = fn\n  }, [fn])\n\n  // Turn on the listener if we have a function & a provider\n  useEffect(() => {\n    if(fn && provider) {\n      const listener = (blockNumber) => {\n        if(DEBUG) console.log(blockNumber, fn, args, provider.listeners())\n        savedCallback.current(...args)\n      }\n\n      provider.on(\"block\", listener)\n\n      return () => {\n        provider.off(\"block\", listener)\n      }\n    }\n  }, [provider])\n}","import { useState, useEffect, useCallback } from \"react\";\nimport usePoller from \"./Poller\";\nimport useOnBlock from \"./OnBlock\";\n\n/*\n  ~ What it does? ~\n\n  Gets your balance in ETH from given address and provider\n\n  ~ How can I use? ~\n\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  ~ Features ~\n\n  - Provide address and get balance corresponding to given address\n  - Change provider to access balance on different chains (ex. mainnetProvider)\n  - If no pollTime is passed, the balance will update on every new block\n*/\n\nlet DEBUG = true\n\nexport default (provider, address, pollTime = 0) => {\n  const [balance, setBalance] = useState()\n\n  const pollBalance = useCallback(\n    async (provider, address) => {\n      if(provider && address) {\n        const newBalance = (\n          await provider.getBalance(address)\n        )\n        if(newBalance !== balance) {\n          setBalance(newBalance)\n        }\n      }\n    },\n    [provider, address],\n  )\n\n  useEffect(\n    () => { pollBalance(provider, address) },\n    [pollBalance]\n  )\n\n  // Only pass a provider to watch on a block if there is no pollTime\n  useOnBlock((pollTime === 0) && provider, () => {\n    if(provider && address && pollTime === 0) {\n      pollBalance(provider, address)\n    }\n  })\n\n  // Use a poller if a pollTime is provided\n  usePoller(async () => {\n    if(provider && address && pollTime > 0) {\n      if(DEBUG) console.log('polling!', address)\n      pollBalance()\n    }\n  }, pollTime, provider && address)\n\n  return balance\n}","import { useState, useEffect } from \"react\";\n\nexport default ({\n  contracts, name, event, provider, startBlock,\n}) => {\n  const [updates, setUpdates] = useState([])\n\n  useEffect(() => {\n    if(provider && startBlock !== undefined) {\n      provider.resetEventsBlock(startBlock)\n    }\n    if(contracts?.[name]) {\n      try {\n        contracts[name].on(event, (...args) => {\n          let blockNumber = args[args.length - 1].blockNumber\n          setUpdates((messages) => ([\n            Object.assign({ blockNumber }, args.pop().args),\n            ...messages,\n          ]))\n        })\n        return () => {\n          contracts[name].removeListener(event)\n        }\n      } catch (e) {\n        console.error(e)\n      }\n    }\n  }, [\n    provider, startBlock, contracts, name, event,\n  ])\n\n  return updates\n}","import { useState, useEffect } from \"react\"\nimport { getAddress, isAddress } from \"@ethersproject/address\"\nimport { useLocalStorage } from \".\"\n\n// resolved if(name){} to not save \"\" into cache\n\n/*\n  ~ What it does? ~\n\n  Gets ENS name from given address and provider\n\n  ~ How can I use? ~\n\n  const ensName = useLookupAddress(mainnetProvider, address);\n\n  ~ Features ~\n\n  - Provide address and get ENS name corresponding to given address\n*/\n\nconst lookupAddress = async (provider, address) => {\n  if(isAddress(address)) {\n    try {\n      // Accuracy of reverse resolution is not enforced.\n      // We then manually ensure that the reported ens name resolves to address\n      const reportedName = (\n        await provider.lookupAddress(address)\n      )\n      const resolvedAddress = (\n        await provider.resolveName(reportedName)\n      )\n\n      console.info('RR', reportedName, resolvedAddress)\n\n      if(\n        getAddress(address)\n        === getAddress(resolvedAddress)\n      ) {\n        return reportedName\n      }\n      return getAddress(address)\n    } catch(e) {\n      return getAddress(address)\n    }\n  }\n  return 0\n}\n\nconst useLookupAddress = (provider, address) => {\n  const [ensName, setEnsName] = useState(address)\n\n  useEffect(() => {\n    let cache = window.localStorage.getItem(\n      `ensCache_${address}`\n    )\n    cache = cache && JSON.parse(cache)\n    const cacheFor = 60 * 60 * 24 * 5 // 5 days\n\n    if(cache?.created_at + cacheFor > Date.now()) {\n      setEnsName(cache.name)\n    } else {\n      if(provider) {\n        lookupAddress(provider, address).then(\n          (name) => {\n            if(name) {\n              setEnsName(name)\n              window.localStorage.setItem(\n                `ensCache_${address}`,\n                JSON.stringify({\n                  created_at: Date.now(),\n                  name: name,\n                })\n              )\n            }\n          }\n        )\n      }\n    }\n  }, [provider, address, setEnsName])\n\n  return ensName\n}\n\nexport default useLookupAddress","import React from \"react\"\nimport Blockies from \"react-blockies\"\nimport { Typography, Skeleton } from \"antd\"\nimport { useLookupAddress } from \"../hooks\"\nimport { useThemeSwitcher } from \"react-css-theme-switcher\"\n\nconst { Text } = Typography;\n\nconst blockExplorerLink = (\n  (address, blockExplorer) => (\n    `${blockExplorer ?? \"https://etherscan.io/\"}address/${address}`\n  )\n)\n\nexport default (props) => {\n  const address = props.value ?? props.address\n  const ens = useLookupAddress(props.ensProvider, address)\n  const { currentTheme } = useThemeSwitcher()\n\n  if(!address) {\n    return (\n      <span>\n        <Skeleton avatar paragraph={{ rows: 1 }} />\n      </span>\n    )\n  }\n\n  let displayAddress = address.substr(0, 6)\n\n  if(ens && !ens.startsWith(\"0x\")) {\n    displayAddress = ens\n  } else if(props.size === \"short\") {\n    displayAddress += `…${address.substr(-4)}`\n  } else if(props.size === \"long\") {\n    displayAddress = address\n  }\n\n  const etherscanLink = (\n    blockExplorerLink(address, props.blockExplorer)\n  )\n  if(props.minimized) {\n    return (\n      <span style={{ verticalAlign: \"middle\" }}>\n        <a\n          style={{\n            color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\"\n          }}\n          href={etherscanLink}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Blockies\n            seed={address.toLowerCase()}\n            size={8}\n            scale={2}\n          />\n        </a>\n      </span>\n    )\n  }\n\n  const textProps = { copyable: { text: address } }\n  if(props.onChange) {\n    textProps.editable = { onChange: props.onChange }\n  }\n\n  return (\n    <span>\n      <span style={{ verticalAlign: \"middle\" }}>\n        <Blockies\n          seed={address.toLowerCase()}\n          size={8}\n          scale={props.fontSize ? props.fontSize / 7 : 4}\n        />\n      </span>\n      <span style={{\n        verticalAlign: \"middle\",\n        paddingLeft: 5,\n        fontSize: props.fontSize ?? 28\n      }}>\n        <Text {...textProps}>\n          <a\n            style={{\n              color: currentTheme === \"light\" ? \"#222\" : \"#DDD\"\n            }}\n            href={etherscanLink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {displayAddress}\n          </a>\n        </Text>\n      </span>\n    </span>\n  )\n}","import React, { useState } from \"react\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { usePoller } from \"eth-hooks\";\nimport { useBalance } from \"../hooks\"\n\n/*\n  ~ What it does? ~\n\n  Displays a balance of given address in ether & dollar\n\n  ~ How can I use? ~\n\n  <Balance\n    address={address}\n    provider={mainnetProvider}\n    price={price}\n  />\n\n  ~ If you already have the balance as a bignumber ~\n  <Balance\n    balance={balance}\n    price={price}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to given address\n  - Provide provider={mainnetProvider} to access balance on mainnet or any other network (ex. localProvider)\n  - Provide price={price} of ether and get your balance converted to dollars\n*/\n\nexport default ({\n  provider, address, balance: input, value, size,\n}) => {\n  const balance = useBalance(provider, address)\n  let floatBalance = 0\n  let usingBalance = balance\n\n  if(input !== undefined) {\n    usingBalance = input\n  }\n  if(value !== undefined) {\n    usingBalance = value\n  }\n\n  if(usingBalance) {\n    const etherBalance = formatEther(usingBalance)\n    parseFloat(etherBalance).toFixed(2)\n    floatBalance = parseFloat(etherBalance)\n  }\n\n  let displayBalance = floatBalance.toExponential()\n\n  return (\n    <span\n      style={{\n        verticalAlign: \"middle\",\n        fontSize: size ? size : 24,\n        padding: 8,\n        cursor: \"pointer\",\n      }}\n    >\n      {displayBalance}\n    </span>\n  )\n}","import { hexlify } from \"@ethersproject/bytes\";\nimport { parseUnits } from \"@ethersproject/units\";\nimport { notification } from \"antd\";\nimport { BLOCKNATIVE_DAPPID } from \"../constants\";\n\nimport Notify from \"bnc-notify\";\n\n// this should probably just be renamed to \"notifier\"\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\n// https://docs.blocknative.com/notify\n\nexport default function Transactor(provider, gasPrice, etherscan) {\n  if(typeof provider !== \"undefined\") {\n    // eslint-disable-next-line consistent-return\n    return async (tx) => {\n      const signer = provider.getSigner()\n      const network = await provider.getNetwork()\n      console.log(\"network\", network)\n      const options = {\n        dappId: BLOCKNATIVE_DAPPID, // GET YOUR OWN KEY AT https://account.blocknative.com\n        system: \"ethereum\",\n        networkId: network.chainId,\n        // darkMode: Boolean, // (default: false)\n        transactionHandler: txInformation => {\n          console.log(\"HANDLE TX\", txInformation)\n        },\n      };\n      const notify = Notify(options);\n\n      let etherscanNetwork = \"\";\n      if (network.name && network.chainId > 1) {\n        etherscanNetwork = network.name + \".\";\n      }\n\n      let etherscanTxUrl = \"https://\" + etherscanNetwork + \"etherscan.io/tx/\";\n      if (network.chainId === 100) {\n        etherscanTxUrl = \"https://blockscout.com/poa/xdai/tx/\";\n      }\n\n      try {\n        let result;\n        if(tx instanceof Promise) {\n          console.log(\"AWAITING TX\", tx)\n          result = await tx\n        } else {\n          if(!tx.gasPrice) {\n            tx.gasPrice = gasPrice || parseUnits(\"4.1\", \"gwei\");\n          }\n          if(!tx.gasLimit) {\n            tx.gasLimit = hexlify(120000);\n          }\n          console.log(\"RUNNING TX\", tx);\n          result = await signer.sendTransaction(tx);\n        }\n        console.log(\"RESULT:\", result);\n        // console.log(\"Notify\", notify);\n\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\n        if ([1, 3, 4, 5, 42, 100].includes(network.chainId)) {\n          const { emitter } = notify.hash(result.hash);\n          emitter.on(\"all\", transaction => ({\n            onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\n          }))\n        } else {\n          notification.info({\n            message: \"Local Transaction Sent\",\n            description: result.hash,\n            placement: \"bottomRight\",\n          })\n        }\n\n        return result;\n      } catch (e) {\n        console.error(e);\n        console.log(\"Transaction Error:\", e.message);\n        notification.error({\n          message: \"Transaction Error\",\n          description: e.message,\n        })\n      }\n    }\n  }\n}","import React from \"react\";\nimport Blockies from \"react-blockies\";\n\n// provides a blockie image for the address using \"react-blockies\" library\n\nexport default function Blockie(props) {\n  if (!props.address || typeof props.address.toLowerCase !== \"function\") {\n    return <span />;\n  }\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Blockies seed={props.address.toLowerCase()} {...props} />;\n}\n","import React, { useState, useCallback } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport { CameraOutlined, QrcodeOutlined } from \"@ant-design/icons\";\nimport { Input, Badge } from \"antd\";\nimport { useLookupAddress } from \"eth-hooks\";\nimport Blockie from \"./Blockie\";\n\n// probably we need to change value={toAddress} to address={toAddress}\n\n/*\n  ~ What it does? ~\n\n  Displays an address input with QR scan option\n\n  ~ How can I use? ~\n\n  <AddressInput\n    autoFocus\n    ensProvider={mainnetProvider}\n    placeholder=\"Enter address\"\n    value={toAddress}\n    onChange={setToAddress}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide placeholder=\"Enter address\" value for the input\n  - Value of the address input is stored in value={toAddress}\n  - Control input change by onChange={setToAddress} \n                          or onChange={address => { setToAddress(address);}}\n*/\n\nexport default function AddressInput(props) {\n  const [value, setValue] = useState(props.value);\n  const [scan, setScan] = useState(false);\n\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n  const ens = useLookupAddress(props.ensProvider, currentValue);\n\n  const scannerButton = (\n    <div\n      style={{ marginTop: 4, cursor: \"pointer\" }}\n      onClick={() => {\n        setScan(!scan);\n      }}\n    >\n      <Badge count={<CameraOutlined style={{ fontSize: 9 }} />}>\n        <QrcodeOutlined style={{ fontSize: 18 }} />\n      </Badge>{\" \"}\n      Scan\n    </div>\n  );\n\n  const {ensProvider, onChange} = props;\n  const updateAddress = useCallback(\n    async newValue => {\n      if (typeof newValue !== \"undefined\") {\n        let address = newValue;\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\n          try {\n            const possibleAddress = await ensProvider.resolveName(address);\n            if (possibleAddress) {\n              address = possibleAddress;\n            }\n            // eslint-disable-next-line no-empty\n          } catch (e) {}\n        }\n        setValue(address);\n        if (typeof onChange === \"function\") {\n          onChange(address);\n        }\n      }\n    },\n    [ensProvider, onChange],\n  );\n\n  const scanner = scan ? (\n    <div\n      style={{\n        zIndex: 256,\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: \"100%\",\n      }}\n      onClick={() => {\n        setScan(false);\n      }}\n    >\n      <QrReader\n        delay={250}\n        resolution={1200}\n        onError={e => {\n          console.log(\"SCAN ERROR\", e);\n          setScan(false);\n        }}\n        onScan={newValue => {\n          if (newValue) {\n            console.log(\"SCAN VALUE\", newValue);\n            let possibleNewValue = newValue;\n            if (possibleNewValue.indexOf(\"/\") >= 0) {\n              possibleNewValue = possibleNewValue.substr(possibleNewValue.lastIndexOf(\"0x\"));\n              console.log(\"CLEANED VALUE\", possibleNewValue);\n            }\n            setScan(false);\n            updateAddress(possibleNewValue);\n          }\n        }}\n        style={{ width: \"100%\" }}\n      />\n    </div>\n  ) : (\n    \"\"\n  );\n\n  return (\n    <div>\n      {scanner}\n      <Input\n        id={\"0xAddress\"}//name it something other than address for auto fill doxxing\n        name={\"0xAddress\"}//name it something other than address for auto fill doxxing\n        autoComplete=\"off\"\n        autoFocus={props.autoFocus}\n        placeholder={props.placeholder ? props.placeholder : \"address\"}\n        prefix={<Blockie address={currentValue} size={8} scale={3} />}\n        value={ens || currentValue}\n        addonAfter={scannerButton}\n        onChange={e => {\n          updateAddress(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Input } from \"antd\";\n\n// small change in useEffect, display currentValue if it's provided by user\n\n/*\n  ~ What it does? ~\n\n  Displays input field for ETH/USD amount, with an option to convert between ETH and USD\n\n  ~ How can I use? ~\n\n  <EtherInput\n    autofocus\n    price={price}\n    value=100\n    placeholder=\"Enter amount\"\n    onChange={value => {\n      setAmount(value);\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide value={value} to specify initial amount of ether\n  - Provide placeholder=\"Enter amount\" value for the input\n  - Control input change by onChange={value => { setAmount(value);}}\n*/\n\nexport default function EtherInput(props) {\n  const [mode, setMode] = useState(props.price ? \"USD\" : \"ETH\");\n  const [display, setDisplay] = useState();\n  const [value, setValue] = useState();\n\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n\n  const option = title => {\n    if (!props.price) return \"\";\n    return (\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          if (mode === \"USD\") {\n            setMode(\"ETH\");\n            setDisplay(currentValue);\n          } else {\n            setMode(\"USD\");\n            if (currentValue) {\n              const usdValue = \"\" + (parseFloat(currentValue) * props.price).toFixed(2);\n              setDisplay(usdValue);\n            } else {\n              setDisplay(currentValue);\n            }\n          }\n        }}\n      >\n        {title}\n      </div>\n    );\n  };\n\n  let prefix;\n  let addonAfter;\n  if (mode === \"USD\") {\n    prefix = \"$\";\n    addonAfter = option(\"USD 🔀\");\n  } else {\n    prefix = \"Ξ\";\n    addonAfter = option(\"ETH 🔀\");\n  }\n\n  useEffect(\n    ()=>{\n      if(!currentValue){\n        setDisplay(\"\");\n      }\n    }\n  ,[ currentValue ])\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"amount in \" + mode}\n      autoFocus={props.autoFocus}\n      prefix={prefix}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async e => {\n        const newValue = e.target.value;\n        if (mode === \"USD\") {\n          const possibleNewValue = parseFloat(newValue)\n          if(possibleNewValue){\n            const ethValue = possibleNewValue / props.price;\n            setValue(ethValue);\n            if (typeof props.onChange === \"function\") {\n              props.onChange(ethValue);\n            }\n            setDisplay(newValue);\n          }else{\n            setDisplay(newValue);\n          }\n        } else {\n          setValue(newValue);\n          if (typeof props.onChange === \"function\") {\n            props.onChange(newValue);\n          }\n          setDisplay(newValue);\n        }\n      }}\n    />\n  );\n}\n","import React, { useState } from \"react\"\nimport {\n  WalletOutlined, QrcodeOutlined, SendOutlined, KeyOutlined,\n} from \"@ant-design/icons\"\nimport { Tooltip, Spin, Modal, Button, Typography } from \"antd\"\nimport QR from \"qrcode.react\"\nimport { parseEther } from \"@ethersproject/units\"\nimport { useUserAddress } from \"eth-hooks\"\nimport { Transactor } from \"../helpers\"\nimport Address from \"./Address\"\nimport Balance from \"./Balance\"\nimport AddressInput from \"./AddressInput\"\nimport EtherInput from \"./EtherInput\"\nimport { ethers } from \"ethers\"\nconst { Text, Paragraph } = Typography\n\n/*\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n*/\n\nexport default function Wallet(props) {\n  const signerAddress = useUserAddress(props.provider);\n  const selectedAddress = props.address || signerAddress;\n\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState()\n\n  const providerSend = props.provider ? (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={() => {\n          setOpen((open) => !open)\n        }}\n        rotate={-90}\n        style={{\n          padding: 7,\n          color: props.color ? props.color : \"\",\n          cursor: \"pointer\",\n          fontSize: 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  ) : null\n\n  let display\n  let receiveButton\n  let privateKeyButton\n  if(qr) {\n    display = (\n      <div>\n        <div>\n          <Text copyable>{selectedAddress}</Text>\n        </div>\n        <QR\n          value={selectedAddress}\n          size={450}\n          level=\"H\"\n          includeMargin\n          renderAs=\"svg\"\n          imageSettings={{ excavate: false }}\n        />\n      </div>\n    )\n    receiveButton = (\n      <Button\n        key=\"hide-receive\"\n        onClick={() => {\n          setQr(\"\")\n        }}\n      >\n        <QrcodeOutlined /> Hide\n      </Button>\n    )\n    privateKeyButton = (\n      <Button key=\"hide-key\" onClick={() => {\n        setPK(selectedAddress)\n        setQr(\"\")\n      }}>\n        <KeyOutlined /> Private Key\n      </Button>\n    )\n  } else if(pk) {\n    let pk = localStorage.getItem(\"metaPrivateKey\")\n    let wallet = new ethers.Wallet(pk)\n\n    if(wallet.address !== selectedAddress){\n      display = (\n        <div>\n          <b>*<em>injected account</em>*, private key unknown</b>\n        </div>\n      )\n    } else {\n      let extraPkDisplayAdded = {}\n      let extraPkDisplay = []\n      extraPkDisplayAdded[wallet.address] = true\n      extraPkDisplay.push(\n        <div style={{fontSize:16,padding:2,backgroundStyle:\"#89e789\"}}>\n          <a href={`/pk#${pk}`}>\n            <Address\n              minimized={true}\n              address={wallet.address}\n              ensProvider={props.ensProvider}\n            />\n            {wallet.address.substr(0,6)}\n          </a>\n        </div>\n      )\n      for(var key in localStorage){\n        if(key.indexOf(\"metaPrivateKey_backup\") >= 0){\n          console.log(key)\n          let pastpk = localStorage.getItem(key)\n          let pastwallet = new ethers.Wallet(pastpk)\n          if(!extraPkDisplayAdded[pastwallet.address] /*&& selectedAddress!=pastwallet.address*/){\n            extraPkDisplayAdded[pastwallet.address] = true\n            extraPkDisplay.push(\n              <div style={{ fontSize: 16 }}>\n                <a href={`/pk#${pastpk}`}>\n                  <Address minimized={true} address={pastwallet.address} ensProvider={props.ensProvider} /> {pastwallet.address.substr(0,6)}\n                </a>\n              </div>\n            )\n          }\n        }\n      }\n\n      display = (\n        <div>\n          <b>Private Key:</b>\n\n          <div><Text copyable>{pk}</Text></div>\n\n          <hr/>\n\n          <i>Point your camera phone at QR code to open in\n            <a target=\"_blank\" href={`https://xdai.io/${pk}`} rel=\"noopener noreferrer\">burner wallet</a>:\n          </i>\n          <QR value={`https://xdai.io/${pk}`} size={450} level=\"H\" includeMargin={true} renderAs=\"svg\" imageSettings={{ excavate: false }}/>\n\n          <Paragraph style={{ fontSize: 16 }} copyable>{`https://xdai.io/${pk}`}</Paragraph>\n\n          {extraPkDisplay && (\n            <div>\n              <h3>Known Private Keys:</h3>\n              {extraPkDisplay}\n              <Button onClick={() => {\n                let currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\")\n                if(currentPrivateKey) {\n                  window.localStorage.setItem(\"metaPrivateKey_backup\"+Date.now(),currentPrivateKey);\n                }\n                const randomWallet = ethers.Wallet.createRandom()\n                const privateKey = randomWallet._signingKey().privateKey\n                window.localStorage.setItem(\"metaPrivateKey\",privateKey);\n                window.location.reload()\n              }}>\n                Generate\n              </Button>\n            </div>\n          )}\n        </div>\n      )\n    }\n\n    receiveButton = (\n      <Button key=\"receive\" onClick={() => {\n        setQr(selectedAddress)\n        setPK(\"\")\n      }}>\n        <QrcodeOutlined /> Receive\n      </Button>\n    )\n    privateKeyButton = (\n      <Button key=\"hide\" onClick={() => {\n        setPK(\"\")\n        setQr(\"\")\n      }}>\n        <KeyOutlined /> Hide\n      </Button>\n    )\n  } else {\n    const inputStyle = {\n      padding: 10,\n    }\n\n    display = (\n      <div>\n        <div style={inputStyle}>\n          <AddressInput\n            autoFocus\n            ensProvider={props.ensProvider}\n            placeholder=\"to address\"\n            address={toAddress}\n            onChange={setToAddress}\n          />\n        </div>\n        <div style={inputStyle}>\n          <EtherInput\n            price={props.price}\n            value={amount}\n            onChange={value => {\n              setAmount(value);\n            }}\n          />\n        </div>\n      </div>\n    )\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress)\n          setPK(\"\")\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    )\n    privateKeyButton = (\n      <Button key=\"hide\" onClick={() => {\n        setPK(selectedAddress)\n        setQr(\"\")\n      }}>\n        <KeyOutlined /> Private Key\n      </Button>\n    )\n  }\n\n  return (\n    <span>\n      {providerSend}\n      <Modal\n        visible={open}\n        title={\n          <div>\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\n            <div style={{ float: \"right\", paddingRight: 25 }}>\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\n            </div>\n          </div>\n        }\n        onOk={() => {\n          setQr()\n          setPK()\n          setOpen((open) => !open)\n        }}\n        onCancel={() => {\n          setQr()\n          setPK()\n          setOpen((open) => !open)\n        }}\n        footer={[\n          privateKeyButton,\n          receiveButton,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!amount || !toAddress || qr}\n            loading={false}\n            onClick={() => {\n              const tx = Transactor(props.provider)\n              let value\n              try {\n                value = parseEther(amount.toString())\n              } catch (e) {\n                // failed to parseEther, try something else\n                value = parseEther(parseFloat(amount).toFixed(8))\n              }\n\n              tx({\n                to: toAddress,\n                value,\n              })\n              setOpen((open) => !open)\n              setQr()\n            }}\n          >\n            <SendOutlined /> Send\n          </Button>,\n        ]}\n      >\n        {display}\n      </Modal>\n    </span>\n  )\n}\n","import React from \"react\"\nimport { Button, Tooltip } from \"antd\"\nimport { LogoutOutlined } from \"@ant-design/icons\"\nimport { useThemeSwitcher } from \"react-css-theme-switcher\"\nimport Address from \"./Address\"\nimport Balance from \"./Balance\"\nimport Wallet from \"./Wallet\"\n\n/*\n  ~ What it does? ~\n\n  Displays an Address, Balance, and Wallet as one Account component,\n  also allows users to log in to existing accounts and log out\n\n  ~ How can I use? ~\n\n  <Account\n    address={address}\n    localProvider={localProvider}\n    userProvider={userProvider}\n    mainnetProvider={mainnetProvider}\n    web3Modal={web3Modal}\n    loadWeb3Modal={loadWeb3Modal}\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\n    blockExplorer={blockExplorer}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to the given address\n  - Provide localProvider={localProvider} to access balance on local network\n  - Provide userProvider={userProvider} to display a wallet\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\n              to be able to log in/log out to/from existing accounts\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n*/\n\nexport default ({\n  address,\n  userProvider,\n  localProvider,\n  mainnetProvider,\n  minimized,\n  web3Modal,\n  loadWeb3Modal,\n  logoutOfWeb3Modal,\n  blockExplorer,\n}) => {\n  const modalButtons = []\n  \n  if(web3Modal) {\n    if(web3Modal.cachedProvider) {\n      modalButtons.push(\n        <Tooltip key=\"logoutbutton\" placement=\"bottom\" title=\"Logout\">\n          <Button\n            style={{\n              verticalAlign: \"top\",\n              marginLeft: 8,\n              marginTop: 4,\n            }}\n            shape=\"round\"\n            size=\"large\"\n            onClick={logoutOfWeb3Modal}\n          >\n            <LogoutOutlined />\n          </Button>\n        </Tooltip>\n      )\n    } else {\n      modalButtons.push(\n        <Button\n          key=\"loginbutton\"\n          style={{\n            verticalAlign: \"top\",\n            marginLeft: 8,\n            marginTop: 4,\n          }}\n          shape=\"round\"\n          size=\"large\"\n          onClick={loadWeb3Modal}\n        >\n          connect\n        </Button>\n      )\n    }\n  }\n\n  const { currentTheme } = useThemeSwitcher()\n\n  const display = minimized ? null : (\n    <span>\n      {address ? (\n        <Address\n          address={address}\n          ensProvider={mainnetProvider}\n          blockExplorer={blockExplorer}\n          size=\"short\"\n        />\n      ) : (\n        \"Connecting…\"\n      )}\n      <Balance address={address} provider={localProvider}/>\n      <Wallet\n        address={address}\n        provider={userProvider}\n        ensProvider={mainnetProvider}\n        color={currentTheme === \"light\" ? \"#1890ff\" : \"#2caad9\"}\n      />\n    </span>\n  )\n\n  return (\n    <div>\n      {display}\n      {modalButtons}\n    </div>\n  )\n}\n","import React from \"react\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { isAddress } from \"@ethersproject/address\";\nimport { Address } from \"../../components\";\n\nconst tryToDisplay = (thing) => {\n  if(thing && thing.toNumber) {\n    try {\n      return thing.toNumber();\n    } catch (e) {\n      return \"Ξ\" + formatUnits(thing, \"ether\");\n    }\n  }\n  if(thing && thing.startsWith && thing.startsWith(\"0x\") && thing.length === 42){\n    return (\n      <Address\n        address={thing}\n        fontSize={22}\n      />\n    )\n  }\n  return JSON.stringify(thing);\n};\n\nexport default tryToDisplay;\n","/* eslint-disable jsx-a11y/accessible-emoji */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Row, Col, Divider } from \"antd\";\nimport tryToDisplay from \"./utils\";\n\nconst DisplayVariable = ({ contractFunction, functionInfo, refreshRequired, triggerRefresh}) => {\n  const [variable, setVariable] = useState(\"\");\n\n  const refresh = useCallback(async () => {\n    try {\n      const funcResponse = await contractFunction();\n      setVariable(funcResponse);\n      triggerRefresh(false);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [setVariable, contractFunction, triggerRefresh]);\n\n  useEffect(() => {\n    refresh();\n  }, [refresh, refreshRequired, contractFunction]);\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={14}>\n          <h2>{tryToDisplay(variable)}</h2>\n        </Col>\n        <Col span={2}>\n          <h2>\n            <a href=\"#\" onClick={refresh}>\n              🔄\n            </a>\n          </h2>\n        </Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n};\n\nexport default DisplayVariable;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from \"react\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { Row, Col, Input, Divider, Tooltip, Button } from \"antd\";\nimport { Transactor } from \"../../helpers\";\nimport tryToDisplay from \"./utils\";\nimport Blockies from \"react-blockies\";\nconst { utils } = require(\"ethers\");\n\n\nexport default function FunctionForm({ contractFunction, functionInfo, provider, gasPrice, triggerRefresh }) {\n  const [form, setForm] = useState({});\n  const [txValue, setTxValue] = useState();\n  const [returnValue, setReturnValue] = useState();\n\n  const tx = Transactor(provider, gasPrice);\n\n  let inputIndex = 0;\n  const inputs = functionInfo.inputs.map(input => {\n    const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + inputIndex++\n\n    let buttons = \"\"\n    if(input.type === \"bytes32\") {\n      buttons = (\n        <Tooltip placement=\"right\" title={\"to bytes32\"}>\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if(utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.parseBytes32String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.formatBytes32String(form[key]);\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n          </div>\n        </Tooltip>\n      )\n    } else if(input.type === \"bytes\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"to hex\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if(utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.toUtf8String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.hexlify(utils.toUtf8Bytes(form[key] ?? ''))\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n            </div>\n        </Tooltip>\n      )\n    } else if(input.type === \"uint256\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"⨯ 10¹⁸\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              const formUpdate = { ...form }\n              formUpdate[key] = utils.parseEther(form[key])\n              setForm(formUpdate)\n            }}\n          >\n            ✴️\n            </div>\n        </Tooltip>\n      )\n    } else if(input.type === \"address\") {\n      const possibleAddress = form[key]?.toLowerCase().trim()\n      if(possibleAddress && possibleAddress.length === 42) {\n        buttons = (\n          <Tooltip placement=\"right\" title=\"blockie\">\n            <Blockies seed={possibleAddress} scale={3} />\n          </Tooltip>\n        )\n      }\n    }\n\n    return (\n      <div style={{ margin: 2 }} key={key}>\n        <Input\n          size=\"large\"\n          placeholder={input.name ? input.type + \" \" + input.name : input.type}\n          autoComplete=\"off\"\n          value={form[key]}\n          name={key}\n          onChange={(event) => {\n            const formUpdate = { ...form };\n            formUpdate[event.target.name] = event.target.value;\n            setForm(formUpdate);\n          }}\n          suffix={buttons}\n        />\n      </div>\n    )\n  });\n\n  const txValueInput = (\n    <div style={{ margin: 2 }} key=\"txValueInput\">\n      <Input\n        placeholder=\"transaction value\"\n        onChange={(e) => setTxValue(e.target.value)}\n        value={txValue}\n        addonAfter={\n          <div>\n            <Row>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title={\" * 10^18 \"}>\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      let floatValue = parseFloat(txValue)\n                      if(floatValue) setTxValue(\"\" + floatValue * 10 ** 18);\n                    }}\n                  >\n                    ✳️\n                  </div>\n                </Tooltip>\n              </Col>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title=\"number to hex\">\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      setTxValue(BigNumber.from(txValue ?? 0).toHexString());\n                    }}\n                  >\n                    #️⃣\n                </div>\n                </Tooltip>\n              </Col>\n            </Row>\n          </div>\n        }\n      />\n    </div>\n  );\n\n  if (functionInfo.payable) {\n    inputs.push(txValueInput);\n  }\n\n  const buttonIcon = (\n    <Button style={{ marginLeft: -32 }}>\n      {functionInfo.type === 'call' ? (\n        'Read 📡'\n      ) : (\n        'Send 💸'\n      )}\n    </Button>\n  )\n  inputs.push(\n    <div style={{ cursor: \"pointer\", margin: 2 }} key=\"goButton\">\n      <Input\n        onChange={(e) => setReturnValue(e.target.value)}\n        defaultValue=\"\"\n        bordered={false}\n        disabled={true}\n        value={returnValue}\n        suffix={\n          <div\n            style={{ width: 50, height: 30, margin: 0 }}\n            type=\"default\"\n            onClick={async () => {\n              let innerIndex = 0\n              const args = functionInfo.inputs.map((input) => {\n                const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + innerIndex++\n                let value = form[key]\n                if(input.baseType === \"array\"){\n                  value = JSON.parse(value)\n                } else if(input.type === \"bool\"){\n                  if(value === 'true' || value === '1' || /^0x0*1$/.test(value)) {\n                    value = 1\n                  } else {\n                    value = 0\n                  }\n                } else if(!value && input.type === 'bytes') {\n                  value = []\n                }\n                return value\n              })\n\n              let result\n              if(['view', 'pure'].includes(\n                functionInfo.stateMutability\n              )) {\n                const returned = await contractFunction(...args)\n                result = tryToDisplay(returned)\n              } else {\n                const overrides = {}\n                if(txValue) {\n                  overrides.value = txValue // ethers.utils.parseEther()\n                }\n                // Uncomment this if you want to skip the gas estimation for each transaction\n                // overrides.gasLimit = hexlify(1200000);\n\n                // console.log(\"Running with extras\",extras)\n                const returned = await tx(contractFunction(...args, overrides))\n                result = tryToDisplay(returned)\n              }\n\n              console.log(\"SETTING RESULT:\", result);\n              setReturnValue(result);\n              triggerRefresh(true);\n            }}\n          >\n            {buttonIcon}\n          </div>\n        }\n      />\n    </div>,\n  );\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={16}>{inputs}</Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n}\n","import React, { useMemo, useState } from \"react\"\nimport { Card } from \"antd\"\nimport { useContractLoader, useContractExistsAtAddress } from \"../../hooks\"\nimport Account from \"../Account\"\nimport DisplayVariable from \"./DisplayVariable\"\nimport FunctionForm from \"./FunctionForm\"\n\nconst noContractDisplay = (\n  <div>\n    Loading…{\" \"}\n    <div style={{ padding: 32 }}>\n      You need to run{\" \"}\n      <code>yarn run chain</code>\n      {\" \"}and{\" \"}\n      <code>yarn run deploy</code>\n      {\" \"}to see your contract here.\n    </div>\n    <div style={{ padding: 32 }}>\n      <span style={{ marginRight: 4 }} role=\"img\" aria-label=\"warning\">\n        ☢️\n      </span>\n      Warning: You might need to run\n      <code>yarn run deploy</code>\n      {\" \"}<em>again</em> after the frontend comes up!\n    </div>\n  </div>\n);\n\nconst isQueryable = fn => (\n  [\"view\", \"pure\"].includes(fn.stateMutability)\n  && fn.inputs.length === 0\n)\n\nexport default ({\n  customContract, account, gasPrice, signer,\n  provider, name, show, price, blockExplorer,\n}) => {\n  const contracts = useContractLoader(provider)\n  const contract = customContract ?? contracts?.[name] ?? null\n  const address = contract?.address ?? null\n  const contractIsDeployed = (\n    useContractExistsAtAddress(provider, address)\n  )\n\n  const displayedContractFunctions = useMemo(\n    () => (\n      contract ? (\n        Object.values(contract.interface.functions).filter(\n          (fn) => (\n            fn.type === \"function\"\n            && (!show || show?.includes(fn.name))\n          )\n        )\n      ) : ([])\n    ),\n    [contract, show],\n  )\n\n  const [refreshRequired, triggerRefresh] = useState(false)\n  const contractDisplay = displayedContractFunctions.map(\n    (fn) => {\n      if(isQueryable(fn)) {\n        return (\n          <DisplayVariable\n            key={fn.name}\n            contractFunction={contract[fn.name]}\n            functionInfo={fn}\n            refreshRequired={refreshRequired}\n            triggerRefresh={triggerRefresh}\n          />\n        )\n      }\n      return (\n        <FunctionForm\n          key={\"FF\" + fn.name}\n          contractFunction={\n            [\"view\", \"pure\"].includes(fn.stateMutability) ? (\n              contract[fn.name]\n            ) : (\n              contract.connect(signer)[fn.name]\n            )\n          }\n          functionInfo={fn}\n          provider={provider}\n          gasPrice={gasPrice}\n          triggerRefresh={triggerRefresh}\n        />\n      )\n    }\n  )\n\n  return (\n    <div style={{ margin: \"auto\", width: \"70vw\" }}>\n      <Card\n        title={\n          <div>\n            {name}\n            <div style={{ float: \"right\" }}>\n              <Account\n                address={address}\n                localProvider={provider}\n                injectedProvider={provider}\n                mainnetProvider={provider}\n                price={price}\n                blockExplorer={blockExplorer}\n              />\n              {account}\n            </div>\n          </div>\n        }\n        size=\"large\"\n        style={{ marginTop: 25, width: \"100%\" }}\n        loading={contractDisplay?.length <= 0}\n      >\n        {contractIsDeployed ? contractDisplay : noContractDisplay}\n      </Card>\n    </div>\n  );\n}\n","import React from \"react\"\nimport { PageHeader } from \"antd\"\n\nexport default function Header() {\n  return (\n    <a href=\"https://github.com/dysbulic/nft-wearable\" target=\"_blank\" rel=\"noopener noreferrer\">\n      <PageHeader\n        title=\"Wearable NFTs\"\n        subTitle=\"Ceramic-updatable ERC-1155 creating a virtual analogue of MetaMerch\"\n        style={{ cursor: \"pointer\" }}\n      />\n    </a>\n  );\n}\n","import React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Timeline, Typography } from \"antd\";\nimport { SendOutlined, DownloadOutlined, EditOutlined } from \"@ant-design/icons\";\n\nconst { Text } = Typography;\n\n// displays a timeline for scaffold-eth usage\n\nexport default function TimelineDisplay(props) {\n  return (\n    <Timeline mode=\"right\">\n      <Timeline.Item dot=\"💾\">\n        <Text delete>\n          Clone and Install from the{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/austintgriffith/scaffold-eth\">\n            github repo\n          </a>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⚛️\">\n        <Text delete>\n          Start your frontend app with: <Text strong>yarn start</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⛓\">\n        <Text delete={props.chainIsUp}>\n          Start your local blockchain with: <Text strong>yarn run chain</Text> (and refresh)\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📝\">\n        <Text delete={props.hasOwner}>\n          Compile and deploy your smart contract: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🤡\">\n        <Text delete={props.isNotSmoort}>\n          Fix error in <Text code>SmartContractWallet.sol</Text> then: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot={<SendOutlined style={{ fontSize: \"16px\" }} />} color={props.hasEther ? \"green\" : \"blue\"}>\n        <Text delete={props.hasEther}>\n          Send test ether to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address using\n          (bottom left) faucet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<DownloadOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.contractHasEther ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.contractHasEther}>\n          Deposit some funds into your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<EditOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.amOwnerOfContract ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.amOwnerOfContract}>\n          Set <b>owner</b> of your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"☢️\">\n        <Text>\n          Yikes, anyone can take ownership of <Text code>SmartContractWallet.sol</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🔬\">\n        <Text>\n          Test your contract with <Text code>buidler/test/myTest.js</Text> then:\n          <Text strong>yarn run test</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🚀\">\n        <Text>\n          Build something awesome with 🏗 <a href=\"https://github.com/austintgriffith/scaffold-eth\">scaffold-eth</a> and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/austingriffith\">\n            @ me\n          </a>\n          !\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📖\">\n        <Text>\n          Read more about{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/developers\">\n            Ethereum\n          </a>\n          ,{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://solidity.readthedocs.io/en/develop/contracts.html\">\n            Solidity\n          </a>\n          , and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://buidler.dev/tutorial\">\n            Buidler\n          </a>\n        </Text>\n      </Timeline.Item>\n    </Timeline>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"antd\";\n\n// added display of 0 instead of NaN if gas price is not provided\n\n/*\n  ~ What it does? ~\n\n  Displays gas gauge \n\n  ~ How can I use? ~\n\n  <GasGauge \n    gasPrice={gasPrice}\n  />\n\n  ~ Features ~\n\n  - Provide gasPrice={gasPrice} and get current gas gauge\n*/\n\nexport default function GasGauge(props) {\n  \n  return (\n    <Button\n      onClick={() => {\n        window.open(\"https://ethgasstation.info/\");\n      }}\n      size=\"large\"\n      shape=\"round\"\n    >\n      <span style={{ marginRight: 8 }}><span role=\"img\" aria-label=\"fuelpump\">⛽️</span></span>\n      {typeof props.gasPrice == \"undefined\" ? 0 : parseInt(props.gasPrice, 10) / 10 ** 9}g\n    </Button>\n  );\n}\n","import React, { useState, useEffect } from \"react\"\nimport { Input } from \"antd\"\nconst { utils, constants } = require(\"ethers\")\n\n/*\n  ~ What it does? ~\n\n  Displays input field with options to convert between STRING and BYTES32\n\n  ~ How can I use? ~\n\n  <BytesStringInput\n    autofocus\n    value={\"scaffold-eth\"}\n    placeholder=\"Enter value...\"\n    onChange={value => {\n      setValue(value)\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide value={value} to specify initial string\n  - Provide placeholder=\"Enter value...\" value for the input\n  - Control input change by onChange={value => { setValue(value)}}\n\n*/\n\nexport default function BytesStringInput(props) {\n  const [mode, setMode] = useState(\"STRING\")\n  const [display, setDisplay] = useState()\n  const [value, setValue] = useState(constants.HashZero)\n\n  // current value is the value in bytes32\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value\n\n  const option = (title) => (\n    <div\n      style={{ cursor: \"pointer\" }}\n      onClick={() => {\n        if (mode === \"STRING\") {\n          setMode(\"BYTES32\")\n          if (!utils.isHexString(currentValue)) {\n              /* in case user enters invalid bytes32 number, \n                  it considers it as string and converts to bytes32 */\n              const changedValue = utils.formatBytes32String(currentValue)\n              setDisplay(changedValue)\n          } else {\n              setDisplay(currentValue)\n          }\n        } else {\n          setMode(\"STRING\")\n          if (currentValue && utils.isHexString(currentValue)) {\n            setDisplay(utils.parseBytes32String(currentValue))\n          } \n          else {\n            setDisplay(currentValue)\n          }\n        }\n      }}\n    >\n      {title}\n    </div>\n  )\n\n  let addonAfter\n  if (mode === \"STRING\") {\n    addonAfter = option(\"STRING 🔀\")\n  } else {\n    addonAfter = option(\"BYTES32 🔀\")\n  }\n\n  useEffect(\n    () => {\n      if(!currentValue){\n        setDisplay(\"\")\n      }\n    }\n  , [currentValue])\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"Enter value in \" + mode}\n      autoFocus={props.autoFocus}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async (e) => {\n        const newValue = e.target.value\n        if(mode === \"STRING\") {\n          //const ethValue = parseFloat(newValue) / props.price\n          //setValue(ethValue)\n          if(typeof props.onChange === \"function\") {\n            props.onChange(utils.formatBytes32String(newValue))\n          }\n          setValue(utils.formatBytes32String(newValue))\n          setDisplay(newValue)\n\n        } else {\n          if(typeof props.onChange === \"function\") {\n            props.onChange(newValue)\n          }\n          setValue(newValue)\n          setDisplay(newValue)\n        }\n      }}\n    />\n  )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Space, Row, InputNumber, Card, notification, Select, Descriptions, Typography, Button, Divider, Tooltip, Drawer, Modal } from \"antd\";\nimport { SettingOutlined, RetweetOutlined } from '@ant-design/icons';\nimport { ChainId, Token, WETH, Fetcher, Trade, TokenAmount, Percent } from '@uniswap/sdk'\nimport { parseUnits, formatUnits } from \"@ethersproject/units\";\nimport { ethers } from \"ethers\";\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { useDebounce } from \"../hooks\";\n\nconst { Option } = Select;\nconst { Text } = Typography;\n\nexport const ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nconst erc20Abi = [\n    \"function balanceOf(address owner) view returns (uint256)\",\n    \"function approve(address _spender, uint256 _value) public returns (bool success)\",\n    \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\"\n];\n\nconst makeCall = async (callName, contract, args, metadata={}) => {\n  if(contract[callName]) {\n    let result\n    if(args) {\n      result = await contract[callName](...args, metadata)\n    } else {\n      result = await contract[callName]()\n    }\n    return result\n  } else {\n    console.log('no call of that name!')\n  }\n}\n\nlet defaultToken = 'ETH'\nlet defaultTokenOut = 'DAI'\nlet defaultSlippage = '0.5'\nlet defaultTimeLimit = 60 * 10\n\nconst tokenListToObject = (array) =>\n   array.reduce((obj, item) => {\n     obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name)\n     return obj\n   }, {})\n\nfunction Swap({ selectedProvider, tokenListURI }) {\n\n  const [tokenIn, setTokenIn] = useState(defaultToken)\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut)\n  const [exact, setExact] = useState()\n  const [amountIn, setAmountIn] = useState()\n  const [amountInMax, setAmountInMax] = useState()\n  const [amountOut, setAmountOut] = useState()\n  const [amountOutMin, setAmountOutMin] = useState()\n  const [trades, setTrades] = useState()\n  const [routerAllowance, setRouterAllowance] = useState()\n  const [balanceIn, setBalanceIn] = useState()\n  const [balanceOut, setBalanceOut] = useState()\n  const [slippageTolerance, setSlippageTolerance] = useState(new Percent(Math.round(defaultSlippage*100).toString(), \"10000\"))\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit)\n  const [swapping, setSwapping] = useState(false)\n  const [approving, setApproving] = useState(false)\n  const [settingsVisible, setSettingsVisible] = useState(false)\n  const [swapModalVisible, setSwapModalVisible] = useState(false)\n\n  const [tokenList, setTokenList] = useState([])\n\n  const [tokens, setTokens] = useState()\n\n  const [invertPrice, setInvertPrice] = useState(false)\n\n  let blockNumber = useBlockNumber(selectedProvider, 3000)\n\n  let signer = selectedProvider.getSigner()\n  let routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\n\n  let _tokenListUri = tokenListURI ? tokenListURI : 'https://gateway.ipfs.io/ipns/tokens.uniswap.org'\n\n  const debouncedAmountIn = useDebounce(amountIn, 500);\n  const debouncedAmountOut = useDebounce(amountOut, 500);\n\n  const activeChainId = (process.env.REACT_APP_NETWORK === 'kovan' ? ChainId.KOVAN : ChainId.MAINNET)\n\n  useEffect(() => {\n    const getTokenList = async () => {\n      console.log(_tokenListUri)\n      try {\n      let tokenList = await fetch(_tokenListUri)\n      let tokenListJson = await tokenList.json()\n      let filteredTokens = tokenListJson.tokens.filter(function (t) {\n        return t.chainId === activeChainId\n      })\n      let ethToken = WETH[activeChainId]\n      ethToken.name = 'Ethereum'\n      ethToken.symbol = 'ETH'\n      ethToken.logoURI = \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\"\n      let _tokenList = [ethToken, ...filteredTokens]\n      setTokenList(_tokenList)\n      let _tokens = tokenListToObject(_tokenList)\n      setTokens(_tokens)\n    } catch (e) {\n      console.log(e)\n    }\n    }\n    getTokenList()\n  },[tokenListURI])\n\n  const getTrades = async () => {\n    if(tokenIn && tokenOut && (amountIn || amountOut)) {\n\n    let pairs = (arr) => arr.map( (v, i) => arr.slice(i + 1).map(w => [v,w]) ).flat();\n\n    let baseTokens = tokenList.filter(function (t) {\n      return ['DAI', 'USDC', 'USDT', 'COMP', 'ETH', 'MKR', 'LINK', tokenIn, tokenOut].includes(t.symbol)\n    }).map((el) => {\n      return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name)\n    })\n\n    let listOfPairwiseTokens = pairs(baseTokens)\n\n    const getPairs = async (list) => {\n\n      let listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider))\n      return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\n    }\n\n    let listOfPairs = await getPairs(listOfPairwiseTokens)\n\n    let bestTrade\n\n    if(exact === 'in') {\n      setAmountInMax()\n      bestTrade = Trade.bestTradeExactIn(\n      listOfPairs.filter(item => item),\n      new TokenAmount(tokens[tokenIn], parseUnits(amountIn.toString(), tokens[tokenIn].decimals)),\n      tokens[tokenOut], { maxNumResults: 3, maxHops: 1 })\n      if(bestTrade[0]) {\n        setAmountOut(bestTrade[0].outputAmount.toSignificant(6))\n      } else { setAmountOut() }\n    } else if (exact === 'out') {\n      setAmountOutMin()\n      bestTrade = Trade.bestTradeExactOut(\n      listOfPairs.filter(item => item),\n      tokens[tokenIn],\n      new TokenAmount(tokens[tokenOut], parseUnits(amountOut.toString(), tokens[tokenOut].decimals)),\n     { maxNumResults: 3, maxHops: 1 })\n      if(bestTrade[0]) {\n        setAmountIn(bestTrade[0].inputAmount.toSignificant(6))\n      } else { setAmountIn() }\n    }\n\n    setTrades(bestTrade)\n\n    console.log(bestTrade)\n\n  }\n  }\n\n  useEffect(() => {\n      getTrades()\n  },[tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider])\n\n  useEffect(() => {\n    if(trades && trades[0]) {\n      if(exact === 'in') {\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance))\n      } else if (exact === 'out') {\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance))\n      }\n    }\n  }, [slippageTolerance, amountIn, amountOut, trades])\n\n  const getBalance = async (_token, _account, _contract) => {\n\n    let newBalance\n    if(_token === 'ETH') {\n      newBalance = await selectedProvider.getBalance(_account)\n    } else {\n      newBalance = await makeCall('balanceOf', _contract, [_account])\n    }\n    return newBalance\n  }\n\n  const getAccountInfo = async () => {\n\n    if(tokens) {\n\n      let accountList = await selectedProvider.listAccounts()\n\n      if(tokenIn) {\n        let tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\n        let newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn)\n        setBalanceIn(newBalanceIn)\n\n        let allowance\n\n        if(tokenIn === 'ETH') {\n          setRouterAllowance()\n        } else {\n          allowance = await makeCall('allowance',tempContractIn,[accountList[0],ROUTER_ADDRESS])\n          setRouterAllowance(allowance)\n        }\n        }\n\n      if(tokenOut) {\n        let tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\n        let newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut)\n        setBalanceOut(newBalanceOut)\n      }\n    }\n  }\n\n  usePoller(getAccountInfo, 6000)\n\n  let route = trades ? (trades.length > 0 ? trades[0].route.path.map(function(item) {\n    return item['symbol'];\n  }) : []) : []\n\n  const updateRouterAllowance = async (newAllowance) => {\n    setApproving(true)\n    try {\n    let tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\n    let result = await makeCall('approve', tempContract, [ROUTER_ADDRESS, newAllowance])\n    console.log(result)\n    setApproving(false)\n    return true\n  } catch(e) {\n      notification.open({\n        message: 'Approval unsuccessful',\n        description:\n        `Error: ${e.message}`,\n      });\n    }\n  }\n\n  const approveRouter = async () => {\n    let approvalAmount = exact === 'in' ? ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals)) : amountInMax.raw.toString()\n    console.log(approvalAmount)\n    let approval = updateRouterAllowance(approvalAmount)\n    if(approval) {\n      notification.open({\n        message: 'Token transfer approved',\n        description:\n        `You can now swap up to ${amountIn} ${tokenIn}`,\n      });\n    }\n  }\n\n  const removeRouterAllowance = async () => {\n    let approvalAmount = ethers.utils.hexlify(0)\n    console.log(approvalAmount)\n    let removal = updateRouterAllowance(approvalAmount)\n    if(removal) {\n      notification.open({\n        message: 'Token approval removed',\n        description:\n        `The router is no longer approved for ${tokenIn}`,\n      });\n    }\n  }\n\n  const executeSwap = async () => {\n    setSwapping(true)\n    try {\n      let args\n      let metadata = {}\n\n      let call\n      let deadline = Math.floor(Date.now() / 1000) + timeLimit\n      let path = trades[0].route.path.map(function(item) {\n        return item['address'];\n      })\n      console.log(path)\n      let accountList = await selectedProvider.listAccounts()\n      let address = accountList[0]\n\n      if (exact === 'in') {\n        let _amountIn = ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals))\n        let _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()))\n        if (tokenIn === 'ETH') {\n          call = 'swapExactETHForTokens'\n          args = [_amountOutMin, path, address, deadline]\n          metadata['value'] = _amountIn\n        } else {\n          call = tokenOut === 'ETH' ? 'swapExactTokensForETH' : 'swapExactTokensForTokens'\n          args = [_amountIn, _amountOutMin, path, address, deadline]\n        }\n      } else if (exact === 'out') {\n        let _amountOut = ethers.utils.hexlify(parseUnits(amountOut.toString(), tokens[tokenOut].decimals))\n        let _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()))\n        if (tokenIn === 'ETH') {\n          call = 'swapETHForExactTokens'\n          args = [_amountOut, path, address, deadline]\n          metadata['value'] = _amountInMax\n        } else {\n          call = tokenOut === 'ETH' ? 'swapTokensForExactETH' : 'swapTokensForExactTokens'\n          args = [_amountOut, _amountInMax, path, address, deadline]\n        }\n      }\n      console.log(call, args, metadata)\n      let result = await makeCall(call, routerContract, args, metadata)\n      console.log(result)\n      notification.open({\n        message: 'Swap complete 🦄',\n        description:\n        <><Text>{`Swapped ${tokenIn} for ${tokenOut}, transaction: `}</Text><Text copyable>{result.hash}</Text></>,\n      });\n      setSwapping(false)\n  } catch (e) {\n    console.log(e)\n    setSwapping(false)\n    notification.open({\n      message: 'Swap unsuccessful',\n      description:\n      `Error: ${e.message}`,\n    });\n  }\n  }\n\n  const showSwapModal = () => {\n    setSwapModalVisible(true);\n  };\n\n  const handleSwapModalOk = () => {\n    setSwapModalVisible(false);\n    executeSwap()\n  };\n\n  const handleSwapModalCancel = () => {\n    setSwapModalVisible(false);\n  };\n\n  let insufficientBalance = balanceIn ? parseFloat(formatUnits(balanceIn,tokens[tokenIn].decimals)) < amountIn : null\n  let inputIsToken = tokenIn !== 'ETH'\n  let insufficientAllowance = !inputIsToken ? false : routerAllowance ? parseFloat(formatUnits(routerAllowance,tokens[tokenIn].decimals)) < amountIn : null\n  let formattedBalanceIn = balanceIn?parseFloat(formatUnits(balanceIn,tokens[tokenIn].decimals)).toPrecision(6):null\n  let formattedBalanceOut = balanceOut?parseFloat(formatUnits(balanceOut,tokens[tokenOut].decimals)).toPrecision(6):null\n\n  let metaIn = tokens && tokenList && tokenIn ? tokenList.filter(function (t) {\n    return t.address === tokens[tokenIn].address\n  })[0] : null\n  let metaOut = tokens && tokenList && tokenOut ? tokenList.filter(function (t) {\n    return t.address === tokens[tokenOut].address\n    })[0] : null\n\n  const cleanIpfsURI = (uri) => {\n    try {\n    return (uri).replace('ipfs://','https://ipfs.io/ipfs/')\n  } catch(e) {\n    console.log(e, uri)\n    return uri\n  }\n  }\n\n  let logoIn = metaIn?cleanIpfsURI(metaIn.logoURI):null\n  let logoOut = metaOut?cleanIpfsURI(metaOut.logoURI):null\n\n  let rawPrice = trades&&trades[0]?trades[0].executionPrice:null\n  let price = rawPrice?rawPrice.toSignificant(7):null\n  let priceDescription = rawPrice ? (invertPrice ? `${(rawPrice.invert()).toSignificant(7)} ${tokenIn} per ${tokenOut}` : `${price} ${tokenOut} per ${tokenIn}`) : null\n\n  let priceWidget = (\n    <Space>\n    <Text type=\"secondary\">{priceDescription}</Text>\n    <Button type=\"text\" onClick={() => {setInvertPrice(!invertPrice)}}><RetweetOutlined /></Button>\n    </Space>\n  )\n\n  let swapModal = (\n    <Modal title=\"Confirm swap\" visible={swapModalVisible} onOk={handleSwapModalOk} onCancel={handleSwapModalCancel}>\n      <Row><Space><img src={logoIn} alt={tokenIn} width='30'/>{amountIn}{tokenIn}</Space></Row>\n      <Row justify='center' align='middle' style={{width:30}}><span>↓</span></Row>\n      <Row><Space><img src={logoOut} alt={tokenOut} width='30'/>{amountOut}{tokenOut}</Space></Row>\n      <Divider/>\n      <Row>{priceWidget}</Row>\n      <Row>{trades&&((amountOutMin && exact==='in') || (amountInMax && exact==='out'))?(exact==='in'?`Output is estimated. You will receive at least ${amountOutMin.toSignificant(6)} ${tokenOut} or the transaction will revert.`:`Input is estimated. You will sell at most ${amountInMax.toSignificant(6)} ${tokenIn} or the transaction will revert.`):null}</Row>\n    </Modal>\n  )\n\n  return (\n    <Card title={<Space><img src=\"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\" width='40' alt='uniswapLogo'/><Typography>Uniswapper</Typography></Space>} extra={<Button type=\"text\" onClick={() => {setSettingsVisible(true)}}><SettingOutlined /></Button>}>\n    <Space direction=\"vertical\">\n    <Row justify=\"center\" align=\"middle\">\n    <Card size=\"small\" type=\"inner\" title={`From${exact==='out' && tokenIn && tokenOut?' (estimate)':''}`} extra={<><img src={logoIn} alt={tokenIn} width='30'/><Button type=\"link\" onClick={() => {\n      setAmountOut()\n      setAmountIn(formatUnits(balanceIn,tokens[tokenIn].decimals))\n      setAmountOutMin()\n      setAmountInMax()\n      setExact('in')\n    }}>{formattedBalanceIn}</Button></>} style={{ width: 400, textAlign: 'left' }}>\n      <InputNumber style={{width: '160px'}} min={0} size={'large'} value={amountIn} onChange={(e) => {\n        setAmountOut()\n        setTrades()\n        setAmountIn(e)\n        setExact('in')\n      }}/>\n      <Select showSearch value={tokenIn} style={{width: '120px'}} size={'large'} bordered={false} defaultValue={defaultToken} onChange={(value) => {\n        console.log(value)\n        if(value===tokenOut) {\n          console.log('switch!', tokenIn)\n          setTokenOut(tokenIn)\n          setAmountOut(amountIn)\n          setBalanceOut(balanceIn)\n        }\n        setTokenIn(value)\n        setTrades()\n        setAmountIn()\n        setExact('out')\n        setBalanceIn()\n      }} filterOption={(input, option) =>\n      option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      } optionFilterProp=\"children\">\n      {tokenList.map(token => (\n        <Option key={token.symbol} value={token.symbol}>{token.symbol}</Option>\n      ))}\n      </Select>\n    </Card>\n    </Row>\n    <Row justify=\"center\" align=\"middle\">\n      <Tooltip title={route.join(\"->\")}><span>↓</span></Tooltip>\n    </Row>\n    <Row justify=\"center\" align=\"middle\">\n    <Card size=\"small\" type=\"inner\" title={`To${exact==='in' && tokenIn && tokenOut?' (estimate)':''}`} extra={<><img src={logoOut} width='30' alt={tokenOut}/><Button type=\"text\">{formattedBalanceOut}</Button></>} style={{ width: 400, textAlign: 'left' }}>\n      <InputNumber style={{width: '160px'}} size={'large'} min={0} value={amountOut} onChange={(e) => {\n        setAmountOut(e)\n        setAmountIn()\n        setTrades()\n        setExact('out')\n      }}/>\n      <Select showSearch value={tokenOut} style={{width: '120px'}} size={'large'} bordered={false} onChange={(value) => {\n        console.log(value, tokenIn, tokenOut)\n        if(value===tokenIn) {\n          console.log('switch!', tokenOut)\n          setTokenIn(tokenOut)\n          setAmountIn(amountOut)\n          setBalanceIn(balanceOut)\n        }\n        setTokenOut(value)\n        setExact('in')\n        setAmountOut()\n        setTrades()\n        setBalanceOut()\n      }} filterOption={(input, option) =>\n      option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      } optionFilterProp=\"children\">\n      {tokenList.map(token => (\n        <Option key={token.symbol} value={token.symbol}>{token.symbol}</Option>\n      ))}\n      </Select>\n    </Card>\n    </Row>\n    <Row justify=\"center\" align=\"middle\">\n      {priceDescription?priceWidget:null}\n    </Row>\n    <Row justify=\"center\" align=\"middle\">\n    <Space>\n      {inputIsToken?<Button size=\"large\" loading={approving} disabled={!insufficientAllowance} onClick={approveRouter}>{(!insufficientAllowance&&amountIn&&amountOut)?'Approved':'Approve'}</Button>:null}\n      <Button size=\"large\" loading={swapping} disabled={insufficientAllowance || insufficientBalance || !amountIn || !amountOut} onClick={showSwapModal}>{insufficientBalance?'Insufficient balance':'Swap!'}</Button>\n      {swapModal}\n    </Space>\n    </Row>\n    </Space>\n    <Drawer visible={settingsVisible} onClose={() => { setSettingsVisible(false) }} width={500}>\n    <Descriptions title=\"Details\" column={1} style={{textAlign: 'left'}}>\n      <Descriptions.Item label=\"blockNumber\">{blockNumber}</Descriptions.Item>\n      <Descriptions.Item label=\"routerAllowance\"><Space>{routerAllowance?formatUnits(routerAllowance,tokens[tokenIn].decimals):null}{routerAllowance>0?<Button onClick={removeRouterAllowance}>Remove Allowance</Button>:null}</Space></Descriptions.Item>\n      <Descriptions.Item label=\"route\">{route.join(\"->\")}</Descriptions.Item>\n      <Descriptions.Item label=\"exact\">{exact}</Descriptions.Item>\n      <Descriptions.Item label=\"bestPrice\">{trades ? (trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null) : null}</Descriptions.Item>\n      <Descriptions.Item label=\"nextMidPrice\">{trades ? (trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null) : null}</Descriptions.Item>\n      <Descriptions.Item label=\"priceImpact\">{trades ? (trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null) : null}</Descriptions.Item>\n      <Descriptions.Item label=\"slippageTolerance\">{<InputNumber\n        defaultValue={defaultSlippage}\n        min={0}\n        max={100}\n        precision={2}\n        formatter={value => `${value}%`}\n        parser={value => value.replace('%', '')}\n        onChange={(value) => {\n          console.log(value)\n\n         let slippagePercent = new Percent(Math.round(value*100).toString(), \"10000\")\n         setSlippageTolerance(slippagePercent)\n       }}\n      />}</Descriptions.Item>\n      <Descriptions.Item label=\"amountInMax\">{amountInMax?amountInMax.toExact():null}</Descriptions.Item>\n      <Descriptions.Item label=\"amountOutMin\">{amountOutMin?amountOutMin.toExact():null}</Descriptions.Item>\n      <Descriptions.Item label=\"timeLimitInSeconds\">{<InputNumber\n              min={0}\n              max={3600}\n              defaultValue={defaultTimeLimit}\n              onChange={(value) => {\n              console.log(value)\n              setTimeLimit(value)\n             }}\n            />}</Descriptions.Item>\n    </Descriptions>\n    </Drawer>\n    </Card>\n  )\n\n}\n\nexport default Swap;\n","import React, { useEffect, useState } from \"react\";\nimport { Switch } from \"antd\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\n\nexport default function ThemeSwitcher() {\n\n  const theme = window.localStorage.getItem(\"theme\");\n  const [isDarkMode, setIsDarkMode] = useState(!theme || theme === \"light\" ? false : true);\n  const { switcher, currentTheme, status, themes } = useThemeSwitcher();\n\n  useEffect(() => {\n    window.localStorage.setItem(\"theme\", currentTheme);\n  }, [currentTheme])\n\n  const toggleTheme = (isChecked) => {\n    setIsDarkMode(isChecked);\n    switcher({ theme: isChecked ? themes.dark : themes.light });\n  }\n\n  // Avoid theme change flicker\n  // if (status === \"loading\") {\n  //   return null;\n  // }\n\n  return (\n    <div className=\"main fade-in\" style={{ position: \"fixed\", right: 8, bottom: 8 }}>\n      <span style={{ padding: 8 }}>{currentTheme === \"light\" ? \"☀️\" : \"🌜\"}</span>\n      <Switch checked={isDarkMode} onChange={toggleTheme} />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\"\nimport { Button, List, Divider, Input, Card, DatePicker, Slider, Switch, Progress, Spin, Table } from \"antd\"\nimport { SyncOutlined } from '@ant-design/icons'\nimport { Address, Balance } from \"../components\"\nimport { parseEther, formatEther } from \"@ethersproject/units\"\nimport { Link } from \"react-router-dom\"\nimport { useLookupAddress } from \"../hooks\"\n\n\nexport default ({\n  singleEvents, batchEvents, ensProvider\n}) => {\n  // <List\n  //   bordered\n  //   dataSource={setPurposeEvents}\n  //   renderItem={(item) => {\n  //     return (\n  //       <List.Item key={item.blockNumber + \"_\" + item.sender + \"_\" + item.purpose}>\n  //         <Address\n  //           address={item[0]}\n  //           ensProvider={mainnetProvider}\n  //           fontSize={16}\n  //         /> →\n  //         {item[1]}\n  //       </List.Item>\n  //     )\n  //   }}\n  // />\n\n  if(Math.max(singleEvents?.length, batchEvents?.length) === 0) {\n    return (\n      <>\n        <h2>No Tokens Have Been Created Yet</h2>\n        <Link to=\"/new\">Create One</Link>\n      </>\n    )\n  }\n\n  const [data, setData] = useState([])\n  const columns = [\n    {\n      title: 'ID',\n      dataIndex: 'id',\n      key: 'id',\n    },\n    {\n      title: 'Creator',\n      dataIndex: 'creator',\n      key: 'creator',\n      render: (address) => (\n        <Address\n          {...{ address, ensProvider }}\n          size=\"short\"\n        />\n      ),\n    },\n    {\n      title: 'Block Created',\n      dataIndex: 'created_at_block',\n      key: 'created_at_block',\n    },\n    {\n      title: 'Quantity',\n      dataIndex: 'quantity',\n      key: 'quantity',\n    },\n    {\n      title: 'Treasurer',\n      dataIndex: 'treasurer',\n      key: 'treasurer',\n      render: (address) => (\n        <Address\n          {...{ address, ensProvider }}\n          size=\"short\"\n        />\n      ),\n    },\n    {\n      title: 'Actions',\n      dataIndex: 'actions',\n      key: 'actions',\n      render: (_, record) => (\n        <Link to={`/edit/${record.id}`}>Edit</Link>\n      ),\n    },\n  ]\n\n  useEffect(() => {\n    const data = []\n    singleEvents.forEach((evt) => {\n      if(/^0x0+$/.test(evt.from)) { // minting event\n        data.push({\n          id: evt.id.toString(),\n          creator: evt.operator,\n          created_at_block: evt.blockNumber,\n          quantity: evt.value.toString(),\n          treasurer: evt.to,\n        })\n      }\n    })\n    setData(data)\n  }, [singleEvents])\n\n  return (\n    <Table dataSource={data} {...{ columns }}/>\n  )\n}\n","import React, { useState } from 'react'\nimport { Form, Input, Layout } from 'antd'\n\nexport default ({ contract, treasurer: treasurerParam }) => {\n  const [quantity, setQuantity] = useState(1)\n  const [treasurer, setTreasurer] = useState(treasurerParam)\n\n  const create = (evt) => {\n    //evt.preventDefault()\n    const enact = (\n      window.confirm(`¿Mint ${quantity} token${quantity === 1 ? '' : 's'} to ${treasurer}?`)\n    )\n    if(enact) {\n      contract.mint(treasurer, quantity, `http://test.com/${(new Date()).toISOString()}`, [])\n    }\n  }\n\n  return (\n    <Layout style={{ maxWidth: '40rem', margin: 'auto' }}>\n      <Form onFinish={create}>\n        <Form.Item\n          label=\"Quantity\"\n          rules={[{ required: true, message: 'Specify a quantity to create.' }]}\n        >\n          <Input\n            type=\"number\"\n            value={quantity}\n            onChange={(evt) => {\n              const val = evt.target.value\n              setQuantity(val && parseInt(val))\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          label=\"Treasurer\"\n          rules={[{ required: true, message: 'Specify the recipient of the new tokens.' }]}\n        >\n          <Input\n            type=\"text\"\n            value={treasurer}\n            onChange={(evt) => {\n              const val = evt.target.value\n              setTreasurer(val)\n            }}\n          />\n        </Form.Item>\n        <Input type=\"submit\" value=\"Create\"/>\n      </Form>\n    </Layout>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\n\nexport default ({ contract }) => {\n  const [metadata, setMetadata] = useState(null)\n  const params = useParams()\n  let id = params.id\n\n  if(id === undefined) {\n    return <p>Missing <code>id</code> of the NFT to edit.</p>\n  }\n\n  useEffect(() => {\n    (async () => {\n      setMetadata(await contract?.uri(id) ?? null)\n    })()\n  }, [contract, id])\n\n  if(metadata) {\n    return (\n      <ul>\n        <li>ID: {id.toString()}</li>\n        <li>Metadata: {metadata}</li>\n      </ul>\n    )\n  } else {\n    return JSON.stringify(params)\n  }\n}","import React, { useCallback, useEffect, useState } from \"react\"\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\"\nimport \"antd/dist/antd.css\"\nimport {\n  StaticJsonRpcProvider, JsonRpcProvider, Web3Provider,\n} from \"@ethersproject/providers\"\nimport \"./App.css\"\nimport { Row, Col, Button, Menu, Alert, Switch as SwitchD } from \"antd\"\nimport Web3Modal from \"web3modal\"\nimport WalletConnectProvider from \"@walletconnect/web3-provider\"\nimport { useUserAddress } from \"eth-hooks\"\nimport {\n  useGasPrice, useUserProvider, useContractLoader,\n  useContractReader, useEventListener, useBalance,\n} from \"./hooks\"\nimport {\n  Header, Account, Contract, GasGauge, ThemeSwitch,\n} from \"./components\"\nimport { Transactor } from \"./helpers\"\nimport { formatEther, parseEther } from \"@ethersproject/units\"\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\"\nimport NFTCreator from \"./views/NFTCreator\"\nimport NewNFT from \"./views/NewNFT\"\nimport EditNFT from \"./views/EditNFT\"\n\n/// 📡 What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS['localhost'] // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// 😬 Sorry for all the console logging\nconst DEBUG = true\n\n// 🛰 providers\nif(DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\")\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\nconst scaffoldEthProvider = (\n  new StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\n)\nconst mainnetInfura = (\n  new StaticJsonRpcProvider(`https://mainnet.infura.io/v3/${INFURA_ID}`)\n)\n\nlet localProviderUrl = targetNetwork.rpcUrl\nlocalProviderUrl = (\n  process.env.REACT_APP_PROVIDER ?? localProviderUrl\n)\nif(DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrl)\nconst localProvider = new StaticJsonRpcProvider(localProviderUrl)\n\n// 🔭 block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer\n\nexport default (props) => {\n  const mainnetProvider = (\n    (scaffoldEthProvider && scaffoldEthProvider._network) ? (\n      scaffoldEthProvider\n    ) : (\n      mainnetInfura\n    )\n  )\n  const [injectedProvider, setInjectedProvider] = useState()\n  const gasPrice = useGasPrice(targetNetwork, \"fast\") // EtherGasStation\n  const userProvider = useUserProvider(injectedProvider, localProvider)\n  const address = useUserAddress(userProvider)\n  let localChainId = localProvider?._network?.chainId\n  let selectedChainId = userProvider?._network?.chainId\n  const tx = Transactor(userProvider, gasPrice)\n  const yourLocalBalance = useBalance(localProvider, address)\n  const readContracts = useContractLoader(localProvider)\n  const writeContracts = useContractLoader(userProvider)\n  const faucetTx = Transactor(localProvider, gasPrice)\n\n  // // If you want to call a function on a new block\n  // useOnBlock(mainnetProvider, () => {\n  //   console.log(`⛓ A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`)\n  // })\n\n  // keep track of a variable from the contract in the local React state:\n  const purpose = useContractReader(readContracts, \"WearablesNFTs\", \"purpose\")\n\n  const singleEvents = useEventListener({\n    contracts: readContracts,\n    name: \"WearablesNFTs\",\n    event: \"TransferSingle\",\n    provider: localProvider,\n    startBlock: 1\n  })\n  const batchEvents = useEventListener({\n    contracts: readContracts,\n    name: \"WearablesNFTs\",\n    event: \"TransferBatch\",\n    provider: localProvider,\n    startBlock: 1\n  })\n\n  useEffect(() => {\n    if(DEBUG) {\n      console.log(\"_____________________________________ 🏗 scaffold-eth _____________________________________\")\n      console.log(\"🌎 mainnetProvider\", mainnetProvider)\n      console.log(\"🏠 localChainId\", localChainId)\n      console.log(\"👩‍💼 selected address:\", address)\n      console.log(\"🕵🏻‍♂️ selectedChainId:\", selectedChainId)\n      console.log(\n        \"💵 yourLocalBalance\",\n        yourLocalBalance ? formatEther(yourLocalBalance) : \"…\"\n      )\n      console.log(\"📝 readContracts\", readContracts)\n      console.log(\"🔐 writeContracts\", writeContracts)\n    }\n  }, [\n    mainnetProvider, address, selectedChainId,\n    yourLocalBalance, readContracts, writeContracts\n  ])\n\n  let networkDisplay\n  if(localChainId && selectedChainId && localChainId != selectedChainId) {\n    networkDisplay = (\n      <div style={{\n        zIndex: 2, position: 'absolute', right: 0, top: 60, padding: 16,\n      }}>\n        <Alert\n          message=\"⚠️ Wrong Network\"\n          description={(\n            <div>\n              You have <b>{NETWORK(selectedChainId)?.name ?? \"Unknown\"}</b> selected and you need to be on <b>{NETWORK(localChainId).name}</b>.\n            </div>\n          )}\n          type=\"error\"\n          closable={false}\n        />\n      </div>\n    )\n  } else {\n    networkDisplay = (\n      <div style={{\n        zIndex: -1, position: 'absolute', right: 154, top: 28, padding: 16, color: targetNetwork.color\n      }}>\n        {targetNetwork.name}\n      </div>\n    )\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect()\n    setInjectedProvider(new Web3Provider(provider))\n  }, [setInjectedProvider])\n\n  useEffect(() => {\n    if(web3Modal.cachedProvider) {\n      loadWeb3Modal()\n    }\n  }, [loadWeb3Modal])\n\n  const [route, setRoute] = useState()\n  useEffect(() => {\n    setRoute(window.location.pathname)\n  }, [setRoute])\n\n  let faucetHint = null\n  const [faucetClicked, setFaucetClicked] = useState(false)\n  if(!faucetClicked && localProvider?._network?.chainId === 31337 && yourLocalBalance && formatEther(yourLocalBalance) <= 0) {\n    faucetHint = (\n      <div style={{ padding: 16 }}>\n        <Button type=\"primary\" onClick={() => {\n          faucetTx({\n            to: address,\n            value: parseEther(\"0.01\"),\n          })\n          setFaucetClicked(true)\n        }}>\n          💰 Grab funds from the faucet ⛽️\n        </Button>\n      </div>\n    )\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      {networkDisplay}\n      <BrowserRouter>\n        <Menu\n          style={{ textAlign: \"center\" }}\n          selectedKeys={[route]}\n          mode=\"horizontal\"\n        >\n          <Menu.Item key=\"/\">\n            <Link onClick={() => setRoute(\"/\")} to=\"/\">\n              📺 Consumers\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/create\">\n            <Link onClick={() => setRoute(\"/create\")} to=\"/create\">\n              🎨 Creators\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/new\">\n            <Link onClick={() => setRoute(\"/new\")} to=\"/new\">\n              ➕ New\n            </Link>\n          </Menu.Item>\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            {writeContracts ? (\n              <NFTCreator\n                {...{ singleEvents, batchEvents }}\n                ensProvider={mainnetProvider}\n                contract={writeContracts?.WearablesNFTs}\n              />\n            ) : (\n              <p>Unable to retrieve contracts. ¿Have they been created?</p>\n            )}\n          </Route>\n          <Route exact path=\"/create\">\n            <Contract\n              name=\"WearablesNFTs\"\n              signer={userProvider.getSigner()}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            />\n          </Route>\n          <Route exact path=\"/new\">\n            {writeContracts ? (\n              <NewNFT\n                contract={writeContracts?.WearablesNFTs}\n                treasurer={address}\n              />\n            ) : (\n              <p>Unable to retrieve contracts. ¿Have they been created?</p>\n            )}\n          </Route>\n          <Route exact path=\"/edit/:id?\">\n            {readContracts ? (\n              <EditNFT\n                {...{ tx }}\n                contract={readContracts?.WearablesNFTs}\n              />\n            ) : (\n              <p>Unable to retrieve contracts. ¿Have they been created?</p>\n            )}\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      <ThemeSwitch />\n\n      {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\n      <div style={{\n        position: \"fixed\",\n        textAlign: \"right\",\n        right: 0,\n        top: 0,\n        padding: 10,\n      }}>\n        <Account\n          address={address}\n          localProvider={localProvider}\n          userProvider={userProvider}\n          mainnetProvider={mainnetProvider}\n          web3Modal={web3Modal}\n          loadWeb3Modal={loadWeb3Modal}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          blockExplorer={blockExplorer}\n        />\n        {faucetHint}\n      </div>\n\n      <div style={{\n        position: \"fixed\", textAlign: \"left\",\n        left: 0, bottom: 20, padding: 10,\n      }}>\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n            <GasGauge gasPrice={gasPrice} />\n          </Col>\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID,\n      },\n    },\n  },\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider()\n  setTimeout(() => window.location.reload(), 1)\n}\n\nlet _ = window?.ethereum?.on('chainChanged', (chainId) => (\n  web3Modal.cachedProvider && (\n    setTimeout(() => window.location.reload(), 1)\n  )\n))\n\n_ = window?.ethereum?.on('accountsChanged', (accounts) => (\n  web3Modal.cachedProvider && (\n   setTimeout(() => window.location.reload(), 1)\n  )\n))\n","import { useState } from \"react\";\nimport { usePoller } from \"eth-hooks\";\nimport axios from \"axios\";\n\nexport default function useGasPrice(targetNetwork,speed) {\n  const [gasPrice, setGasPrice] = useState();\n  const loadGasPrice = async () => {\n    if(targetNetwork.gasPrice){\n      setGasPrice(targetNetwork.gasPrice);\n    }else{\n      axios\n        .get(\"https://ethgasstation.info/json/ethgasAPI.json\")\n        .then(response => {\n          const newGasPrice = response.data[speed || \"fast\"] * 100000000;\n          if (newGasPrice !== gasPrice) {\n            setGasPrice(newGasPrice);\n          }\n        })\n        .catch(error => console.log(error));\n    }\n  };\n\n  usePoller(loadGasPrice, 39999);\n  return gasPrice;\n}\n","import { useState, useEffect } from \"react\";\nimport usePoller from \"./Poller\";\nimport useOnBlock from \"./OnBlock\";\nimport { Provider } from \"@ethersproject/providers\";\n\nconst DEBUG = false;\n\n/*\n  ~ What it does? ~\n\n  Enables you to read values from contracts and keep track of them in the local React states\n\n  ~ How can I use? ~\n\n  const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\n\n  ~ Features ~\n\n  - Provide readContracts by loading contracts (see more on ContractLoader.js)\n  - Specify the name of the contract, in this case it is \"YourContract\"\n  - Specify the name of the variable in the contract, in this case we keep track of \"purpose\" variable\n  - Pass an args array if the function requires\n  - Pass pollTime - if no pollTime is specified, the function will update on every new block\n*/\n\nexport default function useContractReader(contracts, contractName, functionName, args, pollTime, formatter, onChange) {\n  let adjustPollTime = 0;\n  if (pollTime) {\n    adjustPollTime = pollTime;\n  } else if (!pollTime && typeof args === \"number\") {\n    // it's okay to pass poll time as last argument without args for the call\n    adjustPollTime = args;\n  }\n\n  const [value, setValue] = useState();\n  useEffect(() => {\n    if (typeof onChange === \"function\") {\n      setTimeout(onChange.bind(this, value), 1);\n    }\n  }, [value, onChange]);\n\n  const updateValue = async () => {\n    try {\n      let newValue;\n      if (DEBUG) console.log(\"CALLING \", contractName, functionName, \"with args\", args);\n      if (args && args.length > 0) {\n        newValue = await contracts[contractName][functionName](...args);\n        if (DEBUG)\n          console.log(\"contractName\", contractName, \"functionName\", functionName, \"args\", args, \"RESULT:\", newValue);\n      } else {\n        newValue = await contracts[contractName][functionName]();\n      }\n      if (formatter && typeof formatter === \"function\") {\n        newValue = formatter(newValue);\n      }\n      // console.log(\"GOT VALUE\",newValue)\n      if (newValue !== value) {\n        setValue(newValue);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n// Only pass a provider to watch on a block if we have a contract and no PollTime\n  useOnBlock(\n    (contracts && contracts[contractName] && adjustPollTime === 0)&&contracts[contractName].provider,\n    () => {\n    if (contracts && contracts[contractName] && adjustPollTime === 0) {\n      updateValue()\n  }\n  })\n\n// Use a poller if a pollTime is provided\nusePoller(async () => {\n  if (contracts && contracts[contractName] && adjustPollTime > 0) {\n    if (DEBUG) console.log('polling!', contractName, functionName)\n    updateValue()\n  }\n}, adjustPollTime, contracts && contracts[contractName])\n\n  return value;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nconst prevTheme = window.localStorage.getItem(\"theme\");\n\nlet subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\"\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={prevTheme ? prevTheme : \"light\"}>\n      <App subgraphUri={subgraphUri}/>\n    </ThemeSwitcherProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n","var map = {\n\t\"./WearablesNFTs.abi.js\": 991,\n\t\"./YourContract.abi.js\": 992\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 518;","var map = {\n\t\"./WearablesNFTs.bytecode.js\": 993,\n\t\"./YourContract.bytecode.js\": 994\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 519;","var map = {\n\t\"./WearablesNFTs.address.js\": 989,\n\t\"./YourContract.address.js\": 990\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 988;","module.exports = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";","module.exports = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";","module.exports = [\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"ApprovalForAll\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"purpose\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"SetPurpose\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256[]\",\n        \"name\": \"values\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"name\": \"TransferBatch\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"TransferSingle\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"value\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"URI\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"accounts\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"name\": \"balanceOfBatch\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isApprovedForAll\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"metadata\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"purpose\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"amounts\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeBatchTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"setApprovalForAll\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"newPurpose\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"setPurpose\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"name\": \"supportsInterface\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"tokenCount\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"uri\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];","module.exports = [\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"purpose\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"SetPurpose\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"purpose\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"newPurpose\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"setPurpose\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];","module.exports = \"0x60c0604052601960808190527f4275696c64696e6720556e73746f707061626c6520417070730000000000000060a0908152620000409160039190620000b3565b5060006005553480156200005357600080fd5b5060408051808201909152601f81527f53696e676c65204d6574616461746120555249204973204e6f74205573656400602082015262000093816200009a565b5062000196565b8051620000af906002906020840190620000b3565b5050565b828054620000c19062000159565b90600052602060002090601f016020900481019282620000e5576000855562000130565b82601f106200010057805160ff191683800117855562000130565b8280016001018555821562000130579182015b828111156200013057825182559160200191906001019062000113565b506200013e92915062000142565b5090565b5b808211156200013e576000815560010162000143565b600181811c908216806200016e57607f821691505b602082108114156200019057634e487b7160e01b600052602260045260246000fd5b50919050565b611ac980620001a66000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80639f181b5e116100715780639f181b5e1461015e578063a22cb46514610166578063d2b04fd614610179578063e985e9c51461018c578063eb68757f146101c8578063f242432a146101db576100b3565b8062fdd58e146100b857806301ffc9a7146100de5780630e89341c146101015780632eb2c2d6146101215780634e1273f41461013657806370740aab14610156575b600080fd5b6100cb6100c6366004611384565b6101ee565b6040519081526020015b60405180910390f35b6100f16100ec3660046114f3565b610285565b60405190151581526020016100d5565b61011461010f36600461156d565b6102d9565b6040516100d591906117e5565b61013461012f366004611241565b61037b565b005b610149610144366004611428565b610412565b6040516100d591906117a4565b610114610574565b6100cb610602565b61013461017436600461134a565b610609565b6101346101873660046113ad565b6106ed565b6100f161019a36600461120f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101346101d6366004611532565b61071e565b6101346101e93660046112e7565b61082a565b60006001600160a01b03831661025f5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102b657506001600160e01b031982166303a24d0760e21b145b806102d157506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b60008181526004602052604090208054606091906102f690611922565b80601f016020809104026020016040519081016040528092919081815260200182805461032290611922565b801561036f5780601f106103445761010080835404028352916020019161036f565b820191906000526020600020905b81548152906001019060200180831161035257829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103975750610397853361019a565b6103fe5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610256565b61040b85858585856108b1565b5050505050565b606081518351146104775760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610256565b6000835167ffffffffffffffff8111156104a157634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156104ca578160200160208202803683370190505b50905060005b845181101561056c576105318582815181106104fc57634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061052457634e487b7160e01b600052603260045260246000fd5b60200260200101516101ee565b82828151811061055157634e487b7160e01b600052603260045260246000fd5b60209081029190910101526105658161198a565b90506104d0565b509392505050565b6003805461058190611922565b80601f01602080910402602001604051908101604052809291908181526020018280546105ad90611922565b80156105fa5780601f106105cf576101008083540402835291602001916105fa565b820191906000526020600020905b8154815290600101906020018083116105dd57829003601f168201915b505050505081565b6005545b90565b336001600160a01b03831614156106745760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610256565b3360008181526001602090815260408083206001600160a01b0387168085529252909120805460ff1916841515179055906001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516106e1911515815260200190565b60405180910390a35050565b60016005600082825461070091906118f3565b909155505060055461071485828685610af5565b61040b8382610bff565b805161073190600390602084019061107c565b506107ed336040518060400160405280600e81526020016d73657420707572706f736520746f60901b8152506003805461076a90611922565b80601f016020809104026020016040519081016040528092919081815260200182805461079690611922565b80156107e35780601f106107b8576101008083540402835291602001916107e3565b820191906000526020600020905b8154815290600101906020018083116107c657829003601f168201915b5050505050610c5b565b7f6ea5d6383a120235c7728a9a6751672a8ac068e4ed34dcca2ee444182c1812de33600360405161081f9291906116ed565b60405180910390a150565b6001600160a01b0385163314806108465750610846853361019a565b6108a45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610256565b61040b8585858585610ca7565b81518351146109135760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610256565b6001600160a01b0384166109395760405162461bcd60e51b815260040161025690611840565b3360005b8451811015610a8757600085828151811061096857634e487b7160e01b600052603260045260246000fd5b60200260200101519050600085838151811061099457634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156109e45760405162461bcd60e51b815260040161025690611885565b6109ee828261190b565b60008085815260200190815260200160002060008c6001600160a01b03166001600160a01b03168152602001908152602001600020819055508160008085815260200190815260200160002060008b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610a6c91906118f3565b9250508190555050505080610a809061198a565b905061093d565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610ad79291906117b7565b60405180910390a4610aed818787878787610dcd565b505050505050565b6001600160a01b038416610b555760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610256565b33610b6f81600087610b6688610f38565b61040b88610f38565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610b9f9084906118f3565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461040b81600087878787610f91565b60008181526004602090815260409091208351610c1e9285019061107c565b50807f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b83604051610c4f91906117e5565b60405180910390a25050565b610ca2838383604051602401610c73939291906116ad565b60408051601f198184030181529190526020810180516001600160e01b031663fb77226560e01b17905261105b565b505050565b6001600160a01b038416610ccd5760405162461bcd60e51b815260040161025690611840565b33610cdd818787610b6688610f38565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610d1e5760405162461bcd60e51b815260040161025690611885565b610d28848261190b565b6000868152602081815260408083206001600160a01b038c81168552925280832093909355881681529081208054869290610d649084906118f3565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610dc4828888888888610f91565b50505050505050565b6001600160a01b0384163b15610aed5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610e11908990899088908890889060040161160a565b602060405180830381600087803b158015610e2b57600080fd5b505af1925050508015610e5b575060408051601f3d908101601f19168201909252610e5891810190611516565b60015b610f0857610e676119d1565b806308c379a01415610ea15750610e7c6119e8565b80610e875750610ea3565b8060405162461bcd60e51b815260040161025691906117e5565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610256565b6001600160e01b0319811663bc197c8160e01b14610dc45760405162461bcd60e51b8152600401610256906117f8565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610f8057634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b15610aed5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610fd59089908990889088908890600401611668565b602060405180830381600087803b158015610fef57600080fd5b505af192505050801561101f575060408051601f3d908101601f1916820190925261101c91810190611516565b60015b61102b57610e676119d1565b6001600160e01b0319811663f23a6e6160e01b14610dc45760405162461bcd60e51b8152600401610256906117f8565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805461108890611922565b90600052602060002090601f0160209004810192826110aa57600085556110f0565b82601f106110c357805160ff19168380011785556110f0565b828001600101855582156110f0579182015b828111156110f05782518255916020019190600101906110d5565b506110fc929150611100565b5090565b5b808211156110fc5760008155600101611101565b80356001600160a01b03811681146102d457600080fd5b600082601f83011261113c578081fd5b81356020611149826118cf565b604051611156828261195d565b8381528281019150858301600585901b87018401881015611175578586fd5b855b8581101561119357813584529284019290840190600101611177565b5090979650505050505050565b600082601f8301126111b0578081fd5b813567ffffffffffffffff8111156111ca576111ca6119bb565b6040516111e1601f8301601f19166020018261195d565b8181528460208386010111156111f5578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215611221578182fd5b61122a83611115565b915061123860208401611115565b90509250929050565b600080600080600060a08688031215611258578081fd5b61126186611115565b945061126f60208701611115565b9350604086013567ffffffffffffffff8082111561128b578283fd5b61129789838a0161112c565b945060608801359150808211156112ac578283fd5b6112b889838a0161112c565b935060808801359150808211156112cd578283fd5b506112da888289016111a0565b9150509295509295909350565b600080600080600060a086880312156112fe578081fd5b61130786611115565b945061131560208701611115565b93506040860135925060608601359150608086013567ffffffffffffffff81111561133e578182fd5b6112da888289016111a0565b6000806040838503121561135c578182fd5b61136583611115565b915060208301358015158114611379578182fd5b809150509250929050565b60008060408385031215611396578182fd5b61139f83611115565b946020939093013593505050565b600080600080608085870312156113c2578384fd5b6113cb85611115565b935060208501359250604085013567ffffffffffffffff808211156113ee578384fd5b6113fa888389016111a0565b9350606087013591508082111561140f578283fd5b5061141c878288016111a0565b91505092959194509250565b6000806040838503121561143a578182fd5b823567ffffffffffffffff80821115611451578384fd5b818501915085601f830112611464578384fd5b81356020611471826118cf565b60405161147e828261195d565b8381528281019150858301600585901b870184018b101561149d578889fd5b8896505b848710156114c6576114b281611115565b8352600196909601959183019183016114a1565b50965050860135925050808211156114dc578283fd5b506114e98582860161112c565b9150509250929050565b600060208284031215611504578081fd5b813561150f81611a7a565b9392505050565b600060208284031215611527578081fd5b815161150f81611a7a565b600060208284031215611543578081fd5b813567ffffffffffffffff811115611559578182fd5b611565848285016111a0565b949350505050565b60006020828403121561157e578081fd5b5035919050565b6000815180845260208085019450808401835b838110156115b457815187529582019590820190600101611598565b509495945050505050565b60008151808452815b818110156115e4576020818501810151868301820152016115c8565b818111156115f55782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a06040820181905260009061163690830186611585565b82810360608401526116488186611585565b9050828103608084015261165c81856115bf565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906116a2908301846115bf565b979650505050505050565b6001600160a01b03841681526060602082018190526000906116d1908301856115bf565b82810360408401526116e381856115bf565b9695505050505050565b600060018060a01b0384168252602060408184015281845483600182811c91508083168061171c57607f831692505b85831081141561173a57634e487b7160e01b87526022600452602487fd5b6040880183905260608801818015611759576001811461176a57611794565b60ff19861682528782019650611794565b60008b815260209020895b8681101561178e57815484820152908501908901611775565b83019750505b50949a9950505050505050505050565b60006020825261150f6020830184611585565b6000604082526117ca6040830185611585565b82810360208401526117dc8185611585565b95945050505050565b60006020825261150f60208301846115bf565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff8211156118e9576118e96119bb565b5060051b60200190565b60008219821115611906576119066119a5565b500190565b60008282101561191d5761191d6119a5565b500390565b600181811c9082168061193657607f821691505b6020821081141561195757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611983576119836119bb565b6040525050565b600060001982141561199e5761199e6119a5565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561060657600481823e5160e01c90565b600060443d10156119f857610606565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611a2a575050505050610606565b8285019150815181811115611a4457505050505050610606565b843d8701016020828501011115611a6057505050505050610606565b611a6f6020828601018761195d565b509094505050505090565b6001600160e01b031981168114611a9057600080fd5b5056fea2646970667358221220948b62a69bfc68778d25d9efabd6fa281a19092dac10df92e8dcd8bdcd829a1764736f6c63430008030033\";","module.exports = \"0x60c0604052601960808190527f4275696c64696e6720556e73746f707061626c6520417070730000000000000060a090815261003e9160009190610051565b5034801561004b57600080fd5b506100f2565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261008757600085556100cd565b82601f106100a057805160ff19168380011785556100cd565b828001600101855582156100cd579182015b828111156100cd5782518255916020019190600101906100b2565b506100d99291506100dd565b5090565b5b808211156100d957600081556001016100de565b610594806101016000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806370740aab1461003b578063eb68757f146100b8575b600080fd5b610043610160565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561007d578181015183820152602001610065565b50505050905090810190601f1680156100aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61015e600480360360208110156100ce57600080fd5b8101906020810181356401000000008111156100e957600080fd5b8201836020820111156100fb57600080fd5b8035906020019184600183028401116401000000008311171561011d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506101ee945050505050565b005b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156101e65780601f106101bb576101008083540402835291602001916101e6565b820191906000526020600020905b8154815290600101906020018083116101c957829003601f168201915b505050505081565b80516102019060009060208401906104bd565b50604080518082018252600e81526d73657420707572706f736520746f60901b60208083019190915260008054845160026001831615610100026000190190921691909104601f81018490048402820184019095528481526102be943394939192918301828280156102b45780601f10610289576101008083540402835291602001916102b4565b820191906000526020600020905b81548152906001019060200180831161029757829003601f168201915b5050505050610379565b60408051338082526020820183815260008054600260001961010060018416150201909116049484018590527f6ea5d6383a120235c7728a9a6751672a8ac068e4ed34dcca2ee444182c1812de94929390929091906060830190849080156103675780601f1061033c57610100808354040283529160200191610367565b820191906000526020600020905b81548152906001019060200180831161034a57829003601f168201915b5050935050505060405180910390a150565b61049783838360405160240180846001600160a01b031681526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156103d25781810151838201526020016103ba565b50505050905090810190601f1680156103ff5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561043257818101518382015260200161041a565b50505050905090810190601f16801561045f5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663fb77226560e01b179052955061049c945050505050565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826104f35760008555610539565b82601f1061050c57805160ff1916838001178555610539565b82800160010185558215610539579182015b8281111561053957825182559160200191906001019061051e565b50610545929150610549565b5090565b5b80821115610545576000815560010161054a56fea26469706673582212201b84b84181728d755463d939805c7fafe17f98b875a7e7477a419adb003c6f9a64736f6c63430007060033\";","module.exports = [\"WearablesNFTs\"];"],"sourceRoot":""}