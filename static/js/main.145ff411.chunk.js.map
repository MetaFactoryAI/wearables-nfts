{"version":3,"sources":["contracts sync /^/.//.*/.address/.js$","contracts/WearablesNFTs.abi.js","contracts/WearablesNFTs.bytecode.js","contracts/contracts.js","hooks/ContractLoader.js","hooks/ContractExistsAtAddress.js","constants.js","hooks/UserProvider.js","hooks/Poller.js","hooks/OnBlock.js","hooks/LookupAddress.js","components/Address.jsx","components/Balance.jsx","hooks/Balance.js","helpers/Transactor.js","components/Wallet.jsx","components/Account.jsx","components/Contract/utils.js","components/Contract/DisplayVariable.jsx","components/Contract/FunctionForm.jsx","components/Contract/index.jsx","components/Header.jsx","components/Timeline.jsx","components/GasGauge.jsx","components/BytesStringInput.jsx","components/Swap.jsx","components/ThemeSwitch.jsx","views/NFTCreator.jsx","views/NewNFT.jsx","views/EditNFT.jsx","views/Distribute.jsx","views/Token.jsx","App.jsx","hooks/GasPrice.js","index.jsx","contracts/WearablesNFTs.address.js","contracts sync /^/.//.*/.abi/.js$","contracts sync /^/.//.*/.bytecode/.js$","eth.svg"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","loadContract","contractName","signer","newContract","Contract","require","bytecode","console","log","useContractLoader","providerOrSigner","useState","contracts","setContracts","useEffect","a","listAccounts","accounts","length","getSigner","contractList","newContracts","reduce","accumulator","loadContracts","useContractExistsAtAddress","provider","contractAddress","contractIsDeployed","setContractIsDeployed","checkDeployment","isAddress","getCode","INFURA_ID","NETWORK","chainId","values","NETWORKS","props","localhost","name","color","blockExplorer","rpcUrl","window","location","hostname","mainnet","kovan","faucet","rinkeby","ropsten","goerli","xdai","price","gasPrice","matic","mumbai","useUserProvider","injectedProvider","localProvider","useMemo","burnerConfig","pathname","indexOf","rawPK","incomingPK","hash","replace","privateKey","history","pushState","currentPrivateKey","localStorage","getItem","setItem","Date","now","connection","url","Web3Provider","BurnerProvider","networkName","_network","usePoller","fn","delay","extraWatch","savedCallback","useRef","current","setInterval","clearInterval","args","listener","blockNumber","on","off","lookupAddress","address","reportedName","resolveName","resolvedAddress","getAddress","useLookupAddress","ensName","setEnsName","cache","JSON","parse","created_at","then","stringify","SecondLine","value","ens","ensProvider","size","w","mt","ml","noOfLines","spacing","displayAddress","substr","startsWith","etherscanLink","blockExplorerLink","textProps","copyable","text","onChange","editable","verticalAlign","seed","toLowerCase","scale","fontSize","mr","href","target","rel","input","balance","floatBalance","usingBalance","pollTime","setBalance","pollBalance","useCallback","getBalance","newBalance","useOnBlock","useBalance","undefined","etherBalance","formatEther","parseFloat","toFixed","displayBalance","title","src","eth","alt","h","Transactor","etherscan","tx","getNetwork","network","options","dappId","system","networkId","transactionHandler","txInformation","notify","Notify","etherscanNetwork","etherscanTxUrl","Promise","result","parseUnits","gasLimit","hexlify","sendTransaction","includes","emitter","transaction","onclick","open","notification","info","message","description","placement","error","Typography","Text","Paragraph","userProvider","mainnetProvider","minimized","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","modalButtons","cachedProvider","push","key","label","onClick","LogoutOutlined","LoginOutlined","useThemeSwitcher","currentTheme","display","Address","tryToDisplay","thing","toNumber","formatUnits","DisplayVariable","contractFunction","functionInfo","refreshRequired","triggerRefresh","variable","setVariable","refresh","funcResponse","span","style","textAlign","opacity","paddingRight","utils","FunctionForm","form","setForm","txValue","setTxValue","returnValue","setReturnValue","inputIndex","inputs","type","buttons","cursor","isHexString","formUpdate","parseBytes32String","formatBytes32String","toUtf8String","toUtf8Bytes","parseEther","possibleAddress","trim","margin","placeholder","autoComplete","event","suffix","txValueInput","addonAfter","floatValue","BigNumber","from","toHexString","payable","buttonIcon","marginLeft","defaultValue","bordered","disabled","width","height","innerIndex","baseType","test","stateMutability","returned","overrides","noContractDisplay","padding","marginRight","role","aria-label","customContract","account","show","contract","displayedContractFunctions","interface","functions","filter","contractDisplay","isQueryable","connect","float","Account","marginTop","loading","Header","subTitle","GasGauge","shape","parseInt","constants","Select","Option","Swap","ThemeSwitcher","theme","isDarkMode","setIsDarkMode","switcher","themes","status","className","position","right","bottom","checked","isChecked","dark","light","TOKENS","gql","registryAddress","httpURL","uri","match","useQuery","data","tokens","setTokens","load","tokenData","tokenRegistry","token","supply","totalSupply","metadata","URI","uris","Set","t","all","fetch","response","ok","json","meta","tkn","image","to","sx","idx","maxH","m","ExternalLink","View","treasurerParam","treasurer","quantity","setQuantity","setTreasurer","setMetadata","maxWidth","onFinish","evt","confirm","mint","Item","rules","required","val","params","useParams","toString","isOpen","onClose","distribute","raw","setRaw","addresses","setAddresses","update","split","addr","process","InputTabs","isFitted","variant","mb","ref","minH","initialFocusRef","colorScheme","TOKEN","balances","setBalances","tokenID","setTokenID","useDisclosure","onOpen","variables","config","recipients","recipient","safeTransferFrom","fromEntries","bal","identifier","Distribute","entries","amount","targetNetwork","scaffoldEthProvider","StaticJsonRpcProvider","mainnetInfura","localProviderUrl","REACT_APP_PROVIDER","setInjectedProvider","speed","setGasPrice","loadGasPrice","axios","get","newGasPrice","catch","useGasPrice","useUserAddress","localChainId","selectedChainId","readContracts","writeContracts","NetworkDisplay","zIndex","top","maxW","route","setRoute","selectedKeys","mode","exact","path","NFTCreator","WearablesNFTs","NewNFT","EditNFT","Token","left","align","gutter","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","clearCachedProvider","setTimeout","reload","ethereum","prevTheme","subgraphUri","client","ApolloClient","InMemoryCache","ReactDOM","render","themeMap","defaultTheme","document","getElementById"],"mappings":"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","file":"static/js/main.145ff411.chunk.js","sourcesContent":["var map = {\n\t\"./WearablesNFTs.address.js\": 441\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1082;","module.exports = [\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"ApprovalForAll\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256[]\",\n        \"name\": \"values\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"name\": \"TransferBatch\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"TransferSingle\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"value\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"URI\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"accounts\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"name\": \"balanceOfBatch\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isApprovedForAll\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"metadata\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"amounts\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeBatchTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"setApprovalForAll\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"newuri\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"setURI\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"name\": \"supportsInterface\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"tokenCount\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"uri\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];","module.exports = \"0x608060405260006004553480156200001657600080fd5b5060408051808201909152601f81527f53696e676c65204d6574616461746120555249204973204e6f74205573656400602082015262000056816200005d565b5062000159565b80516200007290600290602084019062000076565b5050565b82805462000084906200011c565b90600052602060002090601f016020900481019282620000a85760008555620000f3565b82601f10620000c357805160ff1916838001178555620000f3565b82800160010185558215620000f3579182015b82811115620000f3578251825591602001919060010190620000d6565b506200010192915062000105565b5090565b5b8082111562000101576000815560010162000106565b600181811c908216806200013157607f821691505b602082108114156200015357634e487b7160e01b600052602260045260246000fd5b50919050565b6117c080620001696000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c806367db3b8f1161007157806367db3b8f1461014b5780639f181b5e1461015e578063a22cb46514610166578063d2b04fd614610179578063e985e9c51461018c578063f242432a146101c8576100a8565b8062fdd58e146100ad57806301ffc9a7146100d35780630e89341c146100f65780632eb2c2d6146101165780634e1273f41461012b575b600080fd5b6100c06100bb36600461116a565b6101db565b6040519081526020015b60405180910390f35b6100e66100e13660046112d9565b610272565b60405190151581526020016100ca565b61010961010436600461135b565b6102c6565b6040516100ca91906114dc565b610129610124366004611027565b610368565b005b61013e61013936600461120e565b6103ff565b6040516100ca919061149b565b610129610159366004611318565b610561565b6100c06105bd565b610129610174366004611130565b6105c4565b610129610187366004611193565b6106a8565b6100e661019a366004610ff5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101296101d63660046110cd565b6106d9565b60006001600160a01b03831661024c5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102a357506001600160e01b031982166303a24d0760e21b145b806102be57506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b60008181526003602052604090208054606091906102e390611619565b80601f016020809104026020016040519081016040528092919081815260200182805461030f90611619565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103845750610384853361019a565b6103eb5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610243565b6103f88585858585610760565b5050505050565b606081518351146104645760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610243565b6000835167ffffffffffffffff81111561048e57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156104b7578160200160208202803683370190505b50905060005b84518110156105595761051e8582815181106104e957634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061051157634e487b7160e01b600052603260045260246000fd5b60200260200101516101db565b82828151811061053e57634e487b7160e01b600052603260045260246000fd5b602090810291909101015261055281611681565b90506104bd565b509392505050565b6000818152600360209081526040909120835161058092850190610e62565b50807f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b836040516105b191906114dc565b60405180910390a25050565b6004545b90565b336001600160a01b038316141561062f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610243565b3360008181526001602090815260408083206001600160a01b0387168085529252909120805460ff1916841515179055906001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161069c911515815260200190565b60405180910390a35050565b6001600460008282546106bb91906115ea565b90915550506004546106cf858286856109a4565b6103f88382610561565b6001600160a01b0385163314806106f557506106f5853361019a565b6107535760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610243565b6103f88585858585610aae565b81518351146107c25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610243565b6001600160a01b0384166107e85760405162461bcd60e51b815260040161024390611537565b3360005b845181101561093657600085828151811061081757634e487b7160e01b600052603260045260246000fd5b60200260200101519050600085838151811061084357634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156108935760405162461bcd60e51b81526004016102439061157c565b61089d8282611602565b60008085815260200190815260200160002060008c6001600160a01b03166001600160a01b03168152602001908152602001600020819055508160008085815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461091b91906115ea565b925050819055505050508061092f90611681565b90506107ec565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516109869291906114ae565b60405180910390a461099c818787878787610bd4565b505050505050565b6001600160a01b038416610a045760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610243565b33610a1e81600087610a1588610d3f565b6103f888610d3f565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610a4e9084906115ea565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46103f881600087878787610d98565b6001600160a01b038416610ad45760405162461bcd60e51b815260040161024390611537565b33610ae4818787610a1588610d3f565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610b255760405162461bcd60e51b81526004016102439061157c565b610b2f8482611602565b6000868152602081815260408083206001600160a01b038c81168552925280832093909355881681529081208054869290610b6b9084906115ea565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610bcb828888888888610d98565b50505050505050565b6001600160a01b0384163b1561099c5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610c1890899089908890889088906004016113f8565b602060405180830381600087803b158015610c3257600080fd5b505af1925050508015610c62575060408051601f3d908101601f19168201909252610c5f918101906112fc565b60015b610d0f57610c6e6116c8565b806308c379a01415610ca85750610c836116df565b80610c8e5750610caa565b8060405162461bcd60e51b815260040161024391906114dc565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610243565b6001600160e01b0319811663bc197c8160e01b14610bcb5760405162461bcd60e51b8152600401610243906114ef565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610d8757634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b1561099c5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610ddc9089908990889088908890600401611456565b602060405180830381600087803b158015610df657600080fd5b505af1925050508015610e26575060408051601f3d908101601f19168201909252610e23918101906112fc565b60015b610e3257610c6e6116c8565b6001600160e01b0319811663f23a6e6160e01b14610bcb5760405162461bcd60e51b8152600401610243906114ef565b828054610e6e90611619565b90600052602060002090601f016020900481019282610e905760008555610ed6565b82601f10610ea957805160ff1916838001178555610ed6565b82800160010185558215610ed6579182015b82811115610ed6578251825591602001919060010190610ebb565b50610ee2929150610ee6565b5090565b5b80821115610ee25760008155600101610ee7565b80356001600160a01b03811681146102c157600080fd5b600082601f830112610f22578081fd5b81356020610f2f826115c6565b604051610f3c8282611654565b8381528281019150858301600585901b87018401881015610f5b578586fd5b855b85811015610f7957813584529284019290840190600101610f5d565b5090979650505050505050565b600082601f830112610f96578081fd5b813567ffffffffffffffff811115610fb057610fb06116b2565b604051610fc7601f8301601f191660200182611654565b818152846020838601011115610fdb578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215611007578182fd5b61101083610efb565b915061101e60208401610efb565b90509250929050565b600080600080600060a0868803121561103e578081fd5b61104786610efb565b945061105560208701610efb565b9350604086013567ffffffffffffffff80821115611071578283fd5b61107d89838a01610f12565b94506060880135915080821115611092578283fd5b61109e89838a01610f12565b935060808801359150808211156110b3578283fd5b506110c088828901610f86565b9150509295509295909350565b600080600080600060a086880312156110e4578081fd5b6110ed86610efb565b94506110fb60208701610efb565b93506040860135925060608601359150608086013567ffffffffffffffff811115611124578182fd5b6110c088828901610f86565b60008060408385031215611142578182fd5b61114b83610efb565b91506020830135801515811461115f578182fd5b809150509250929050565b6000806040838503121561117c578182fd5b61118583610efb565b946020939093013593505050565b600080600080608085870312156111a8578384fd5b6111b185610efb565b935060208501359250604085013567ffffffffffffffff808211156111d4578384fd5b6111e088838901610f86565b935060608701359150808211156111f5578283fd5b5061120287828801610f86565b91505092959194509250565b60008060408385031215611220578182fd5b823567ffffffffffffffff80821115611237578384fd5b818501915085601f83011261124a578384fd5b81356020611257826115c6565b6040516112648282611654565b8381528281019150858301600585901b870184018b1015611283578889fd5b8896505b848710156112ac5761129881610efb565b835260019690960195918301918301611287565b50965050860135925050808211156112c2578283fd5b506112cf85828601610f12565b9150509250929050565b6000602082840312156112ea578081fd5b81356112f581611771565b9392505050565b60006020828403121561130d578081fd5b81516112f581611771565b6000806040838503121561132a578182fd5b823567ffffffffffffffff811115611340578283fd5b61134c85828601610f86565b95602094909401359450505050565b60006020828403121561136c578081fd5b5035919050565b6000815180845260208085019450808401835b838110156113a257815187529582019590820190600101611386565b509495945050505050565b60008151808452815b818110156113d2576020818501810151868301820152016113b6565b818111156113e35782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a06040820181905260009061142490830186611373565b82810360608401526114368186611373565b9050828103608084015261144a81856113ad565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611490908301846113ad565b979650505050505050565b6000602082526112f56020830184611373565b6000604082526114c16040830185611373565b82810360208401526114d38185611373565b95945050505050565b6000602082526112f560208301846113ad565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff8211156115e0576115e06116b2565b5060051b60200190565b600082198211156115fd576115fd61169c565b500190565b6000828210156116145761161461169c565b500390565b600181811c9082168061162d57607f821691505b6020821081141561164e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561167a5761167a6116b2565b6040525050565b60006000198214156116955761169561169c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156105c157600481823e5160e01c90565b600060443d10156116ef576105c1565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156117215750505050506105c1565b828501915081518181111561173b575050505050506105c1565b843d8701016020828501011115611757575050505050506105c1565b61176660208286010187611654565b509094505050505090565b6001600160e01b03198116811461178757600080fd5b5056fea2646970667358221220ff8bcbd33105b889131944659059cb5cd303b9b824728274f19ba0c769f6076264736f6c63430008030033\";","module.exports = [\"WearablesNFTs\"];","/* eslint-disable import/no-dynamic-require */\n/* eslint-disable global-require */\nimport { Contract } from \"@ethersproject/contracts\";\nimport { useState, useEffect } from \"react\";\n\n/*\n  ~ What it does? ~\n\n  Loads your local contracts and gives options to read values from contracts \n                                              or write transactions into them\n\n  ~ How can I use? ~\n\n  const readContracts = useContractLoader(localProvider) // or\n  const writeContracts = useContractLoader(userProvider)\n\n  ~ Features ~\n\n  - localProvider enables reading values from contracts\n  - userProvider enables writing transactions into contracts\n  - Example of keeping track of \"purpose\" variable by loading contracts into readContracts \n    and using ContractReader.js hook:\n    const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\n  - Example of using setPurpose function from our contract and writing transactions by Transactor.js helper:\n    tx( writeContracts.YourContract.setPurpose(newPurpose) )\n*/\n\nconst loadContract = (contractName, signer) => {\n  const newContract = new Contract(\n    require(`../contracts/${contractName}.address.js`),\n    require(`../contracts/${contractName}.abi.js`),\n    signer,\n  );\n  try {\n    newContract.bytecode = require(`../contracts/${contractName}.bytecode.js`);\n  } catch (e) {\n    console.log(e);\n  }\n  return newContract;\n};\n\nexport default function useContractLoader(providerOrSigner) {\n  const [contracts, setContracts] = useState();\n  useEffect(() => {\n    async function loadContracts() {\n      if (typeof providerOrSigner !== \"undefined\") {\n        try {\n          // we need to check to see if this providerOrSigner has a signer or not\n          let signer;\n          let accounts;\n          if (providerOrSigner && typeof providerOrSigner.listAccounts === \"function\") {\n            accounts = await providerOrSigner.listAccounts();\n          }\n\n          if (accounts && accounts.length > 0) {\n            signer = providerOrSigner.getSigner();\n          } else {\n            signer = providerOrSigner;\n          }\n\n          const contractList = require(\"../contracts/contracts.js\");\n\n          const newContracts = contractList.reduce((accumulator, contractName) => {\n            accumulator[contractName] = loadContract(contractName, signer);\n            return accumulator;\n          }, {});\n          setContracts(newContracts);\n        } catch (e) {\n          console.log(\"ERROR LOADING CONTRACTS!!\", e);\n        }\n      }\n    }\n    loadContracts();\n  }, [providerOrSigner]);\n  return contracts;\n}\n","import { useEffect, useState } from \"react\";\nimport { isAddress } from \"@ethersproject/address\";\n\n/*\n  ~ What it does? ~\n\n  Checks whether a contract exists on the blockchain, returns true if it exists, otherwise false\n\n  ~ How can I use? ~\n\n  const contractIsDeployed = useContractExistsAtAddress(localProvider, contractAddress);\n\n  ~ Features ~\n\n  - Provide contractAddress to check if the contract is deployed\n  - Change provider to check contract address on different chains (ex. mainnetProvider)\n*/\n\nconst useContractExistsAtAddress = (provider, contractAddress) => {\n  const [contractIsDeployed, setContractIsDeployed] = useState(false);\n\n  // We can look at the blockchain and see what's stored at `contractAddress`\n  // If we find code then we know that a contract exists there.\n  // If we find nothing (0x0) then there is no contract deployed to that address\n  useEffect(() => {\n    // eslint-disable-next-line consistent-return\n    const checkDeployment = async () => {\n      if (!isAddress(contractAddress)) return false;\n      const bytecode = await provider.getCode(contractAddress);\n      setContractIsDeployed(bytecode !== \"0x0\");\n    };\n    if (provider) checkDeployment();\n  }, [provider, contractAddress]);\n\n  return contractIsDeployed;\n};\n\nexport default useContractExistsAtAddress;\n","// From: https://infura.io/dashboard/ethereum\nexport const INFURA_ID = \"79a107f3e7784d31bcedd6fba13d93e9\"\n\n// From: https://etherscan.io/myapikey\nexport const ETHERSCAN_KEY = \"5T6PH4NAY5SDI9MQY8K7PW9CKIS2EBYGMX\"\n\n//BLOCKNATIVE ID FOR Notify.js:\nexport const BLOCKNATIVE_DAPPID = \"0b58206a-f3c0-4701-a62f-73c7243e8c77\"\n\n// EXTERNAL CONTRACTS\n\nexport const DAI_ADDRESS = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n\nexport const DAI_ABI = [{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg1\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\n\nexport const NETWORK = (chainId) => {\n  for(let props of Object.values(NETWORKS)) {\n    if(props.chainId === chainId) {\n      return props\n    }\n  }\n}\n\nexport const NETWORKS = {\n  localhost: {\n    name: \"localhost\",\n    color: '#666666',\n    chainId: 31337,\n    blockExplorer: '',\n    rpcUrl: `http://${window.location.hostname}:8545`,\n  },\n  mainnet: {\n    name: \"mainnet\",\n    color: '#ff8b9e',\n    chainId: 1,\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://etherscan.io/\",\n  },\n  kovan: {\n    name: \"kovan\",\n    color: '#7003DD',\n    chainId: 42,\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://kovan.etherscan.io/\",\n    faucet: \"https://gitter.im/kovan-testnet/faucet\",//https://faucet.kovan.network/\n  },\n  rinkeby: {\n    name: \"rinkeby\",\n    color: '#e0d068',\n    chainId: 4,\n    rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\n    faucet: \"https://faucet.rinkeby.io/\",\n    blockExplorer: \"https://rinkeby.etherscan.io/\",\n  },\n  ropsten: {\n    name: \"ropsten\",\n    color: '#F60D09',\n    chainId: 3,\n    faucet: \"https://faucet.ropsten.be/\",\n    blockExplorer: \"https://ropsten.etherscan.io/\",\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\n  },\n  goerli: {\n    name: \"goerli\",\n    color: '#0975F6',\n    chainId: 5,\n    faucet: \"https://goerli-faucet.slock.it/\",\n    blockExplorer: \"https://goerli.etherscan.io/\",\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\n  },\n  xdai: {\n    name: \"xdai\",\n    color: '#48a9a6',\n    chainId: 100,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://dai.poa.network\",\n    faucet: \"https://xdai-faucet.top/\",\n    blockExplorer: \"https://blockscout.com/poa/xdai/\",\n  },\n  matic: {\n    name: \"matic\",\n    color: '#2bbdf7',\n    chainId: 137,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mainnet.maticvigil.com\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://explorer-mainnet.maticvigil.com//\",\n  },\n  mumbai: {\n    name: \"mumbai\",\n    color: '#92D9FA',\n    chainId: 80001,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://mumbai-explorer.matic.today/\",\n  },\n}\n","import { useMemo } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport BurnerProvider from \"burner-provider\";\nimport { INFURA_ID } from \"../constants\";\n\n/*\n  ~ What it does? ~\n\n  Gets user provider\n\n  ~ How can I use? ~\n\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n\n  ~ Features ~\n\n  - Specify the injected provider from Metamask\n  - Specify the local provider\n  - Usage examples:\n    const address = useUserAddress(userProvider);\n    const tx = Transactor(userProvider, gasPrice)\n*/\n\nconst useUserProvider = (injectedProvider, localProvider) =>\nuseMemo(() => {\n  if (injectedProvider) {\n    console.log(\"🦊 Using injected provider\");\n    return injectedProvider;\n  }\n  if (!localProvider) return undefined;\n\n  let burnerConfig = {}\n\n  if(window.location.pathname){\n    if(window.location.pathname.indexOf(\"/pk\")>=0){\n      let incomingPK = window.location.hash.replace(\"#\",\"\")\n      let rawPK\n      if(incomingPK.length===64||incomingPK.length===66){\n        console.log(\"🔑 Incoming Private Key...\");\n        rawPK=incomingPK\n        burnerConfig.privateKey = rawPK\n        window.history.pushState({},\"\", \"/\");\n        let currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n        if(currentPrivateKey && currentPrivateKey!==rawPK){\n          window.localStorage.setItem(\"metaPrivateKey_backup\"+Date.now(),currentPrivateKey);\n        }\n        window.localStorage.setItem(\"metaPrivateKey\",rawPK);\n      }\n    }\n  }\n\n  console.log(\"🔥 Using burner provider\",burnerConfig);\n  if (localProvider.connection && localProvider.connection.url) {\n    burnerConfig.rpcUrl = localProvider.connection.url\n    return new Web3Provider(new BurnerProvider(burnerConfig));\n  }else{\n    // eslint-disable-next-line no-underscore-dangle\n    const networkName = localProvider._network && localProvider._network.name;\n    burnerConfig.rpcUrl = `https://${networkName || \"mainnet\"}.infura.io/v3/${INFURA_ID}`\n    return new Web3Provider(new BurnerProvider(burnerConfig));\n  }\n}, [injectedProvider, localProvider]);\n\nexport default useUserProvider;\n","import { useEffect, useRef } from \"react\";\n\n// helper hook to call a function regularly in time intervals\n\nexport default function usePoller(fn, delay, extraWatch) {\n  const savedCallback = useRef();\n  // Remember the latest fn.\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [fn]);\n  // Set up the interval.\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n  // run at start too\n  useEffect(() => {\n    fn();\n  },[ extraWatch ]);\n}\n","import { useEffect, useRef } from \"react\"\n\n// helper hook to call a function regularly in time intervals\nlet DEBUG = false\n\nexport default (provider, fn, args = []) => {\n  const savedCallback = useRef()\n\n  // Remember the latest fn.\n  useEffect(() => {\n    savedCallback.current = fn\n  }, [fn])\n\n  // Turn on the listener if we have a function & a provider\n  useEffect(() => {\n    if(fn && provider) {\n      const listener = (blockNumber) => {\n        if(DEBUG) console.log(blockNumber, fn, args, provider.listeners())\n        savedCallback.current(...args)\n      }\n\n      provider.on(\"block\", listener)\n\n      return () => {\n        provider.off(\"block\", listener)\n      }\n    }\n  }, [provider])\n}","import React, { useState, useEffect } from 'react'\nimport { getAddress, isAddress } from '@ethersproject/address'\n\n/*\n  ~ What it does? ~\n\n  Gets ENS name from given address and provider\n\n  ~ How can I use? ~\n\n  const ensName = useLookupAddress(mainnetProvider, address);\n\n  ~ Features ~\n\n  - Provide address and get ENS name corresponding to given address\n*/\n\nconst lookupAddress = async (provider, address) => {\n  if(isAddress(address)) {\n    try {\n      // Accuracy of reverse resolution is not enforced.\n      // We then manually ensure that the reported ens name resolves to address\n      const reportedName = (\n        await provider.lookupAddress(address)\n      )\n      const resolvedAddress = (\n        await provider.resolveName(reportedName)\n      )\n\n      if(\n        getAddress(address)\n        === getAddress(resolvedAddress)\n      ) {\n        return reportedName\n      }\n      return getAddress(address)\n    } catch(e) {\n      return getAddress(address)\n    }\n  }\n  return <em>{address}</em>\n}\n\nconst useLookupAddress = (provider, address) => {\n  const [ensName, setEnsName] = useState(address)\n\n  useEffect(() => {\n    let cache = window.localStorage.getItem(\n      `ensCache_${address}`\n    )\n    cache = cache && JSON.parse(cache)\n    const cacheFor = 60 * 60 * 24 * 5 // 5 days\n\n    if(cache?.created_at + cacheFor > Date.now()) {\n      setEnsName(cache.name)\n    } else {\n      if(provider) {\n        lookupAddress(provider, address).then(\n          (name) => {\n            if(name) {\n              setEnsName(name)\n              window.localStorage.setItem(\n                `ensCache_${address}`,\n                JSON.stringify({\n                  created_at: Date.now(),\n                  name: name,\n                })\n              )\n            }\n          }\n        )\n      }\n    }\n  }, [provider, address, setEnsName])\n\n  return ensName\n}\n\nexport default useLookupAddress","import React from 'react'\nimport Blockies from 'react-blockies'\nimport {\n  Flex, Box, Text, Stack, SkeletonText, SkeletonCircle,\n} from '@chakra-ui/react'\nimport { useLookupAddress } from '../hooks'\n\nconst blockExplorerLink = (\n  (address, blockExplorer) => (\n    `${blockExplorer ?? \"https://etherscan.io/\"}address/${address}`\n  )\n)\n\nexport default (props) => {\n  const { SecondLine } = props\n  const address = props.value ?? props.address\n  const ens = useLookupAddress(props.ensProvider, address)\n\n  if(!address) {\n    return (\n      <Flex>\n        <SkeletonCircle size={7} />\n        <SkeletonText w={20} mt={1} ml={1} noOfLines={2} spacing={1} />\n      </Flex>\n    )\n  }\n\n  let displayAddress = address.substr(0, 6)\n\n  if(ens && !ens.startsWith(\"0x\")) {\n    displayAddress = ens\n  } else if(props.size === \"short\") {\n    displayAddress += `…${address.substr(-4)}`\n  } else if(props.size === \"long\") {\n    displayAddress = address\n  }\n\n  const etherscanLink = (\n    blockExplorerLink(address, props.blockExplorer)\n  )\n\n  const textProps = { copyable: { text: address } }\n  if(props.onChange) {\n    textProps.editable = { onChange: props.onChange }\n  }\n\n  return (\n    <Flex>\n      <Box verticalAlign=\"middle\">\n        <Blockies\n          seed={address.toLowerCase()}\n          size={10}\n          scale={props.fontSize ? props.fontSize / 7 : 4}\n        />\n      </Box>\n      <Box ml={2} mr={2}>\n        <Box {...textProps}>\n          <a\n            href={etherscanLink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {displayAddress}\n          </a>\n        </Box>\n        {SecondLine && <SecondLine/>}\n      </Box>\n    </Flex>\n  )\n}","import React, { useState } from 'react'\nimport { formatEther } from '@ethersproject/units'\nimport { Text, Box, Flex, Image } from '@chakra-ui/react'\nimport { useBalance } from '../hooks'\nimport eth from '../eth.svg'\n\n\n/*\n  ~ What it does? ~\n\n  Displays a balance of given address in ether & dollar\n\n  ~ How can I use? ~\n\n  <Balance\n    address={address}\n    provider={mainnetProvider}\n    price={price}\n  />\n\n  ~ If you already have the balance as a bignumber ~\n  <Balance\n    balance={balance}\n    price={price}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to given address\n  - Provide provider={mainnetProvider} to access balance on mainnet or any other network (ex. localProvider)\n  - Provide price={price} of ether and get your balance converted to dollars\n*/\n\nexport default ({\n  provider, address, balance: input, value, size,\n}) => {\n  const balance = useBalance(provider, address)\n  let floatBalance = 0\n  let usingBalance = balance\n\n  if(input !== undefined) {\n    usingBalance = input\n  }\n  if(value !== undefined) {\n    usingBalance = value\n  }\n\n  if(usingBalance) {\n    const etherBalance = formatEther(usingBalance)\n    parseFloat(etherBalance).toFixed(2)\n    floatBalance = parseFloat(etherBalance)\n  }\n\n  let displayBalance = (\n    floatBalance.toFixed(4)\n  )\n\n  return (\n    <Flex title={`${floatBalance} ETH`}>\n      {displayBalance}\n      <Image src={eth} alt=\"ETH\" h=\"0.9em\" mt=\"4px\" ml=\"2px\"/>\n    </Flex>\n  )\n}","import { useState, useEffect, useCallback } from \"react\";\nimport usePoller from \"./Poller\";\nimport useOnBlock from \"./OnBlock\";\n\n/*\n  ~ What it does? ~\n\n  Gets your balance in ETH from given address and provider\n\n  ~ How can I use? ~\n\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  ~ Features ~\n\n  - Provide address and get balance corresponding to given address\n  - Change provider to access balance on different chains (ex. mainnetProvider)\n  - If no pollTime is passed, the balance will update on every new block\n*/\n\nlet DEBUG = true\n\nexport default (provider, address, pollTime = 0) => {\n  const [balance, setBalance] = useState()\n\n  const pollBalance = useCallback(\n    async (provider, address) => {\n      if(provider && address) {\n        const newBalance = (\n          await provider.getBalance(address)\n        )\n        if(newBalance !== balance) {\n          setBalance(newBalance)\n        }\n      }\n    },\n    [provider, address],\n  )\n\n  useEffect(\n    () => { pollBalance(provider, address) },\n    [pollBalance]\n  )\n\n  // Only pass a provider to watch on a block if there is no pollTime\n  useOnBlock((pollTime === 0) && provider, () => {\n    if(provider && address && pollTime === 0) {\n      pollBalance(provider, address)\n    }\n  })\n\n  // Use a poller if a pollTime is provided\n  usePoller(async () => {\n    if(provider && address && pollTime > 0) {\n      if(DEBUG) console.log('polling!', address)\n      pollBalance()\n    }\n  }, pollTime, provider && address)\n\n  return balance\n}","import { hexlify } from \"@ethersproject/bytes\";\nimport { parseUnits } from \"@ethersproject/units\";\nimport { notification } from \"antd\";\nimport { BLOCKNATIVE_DAPPID } from \"../constants\";\n\nimport Notify from \"bnc-notify\";\n\n// this should probably just be renamed to \"notifier\"\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\n// https://docs.blocknative.com/notify\n\nexport default function Transactor(provider, gasPrice, etherscan) {\n  if(typeof provider !== \"undefined\") {\n    // eslint-disable-next-line consistent-return\n    return async (tx) => {\n      const signer = provider.getSigner()\n      const network = await provider.getNetwork()\n      console.log(\"network\", network)\n      const options = {\n        dappId: BLOCKNATIVE_DAPPID, // GET YOUR OWN KEY AT https://account.blocknative.com\n        system: \"ethereum\",\n        networkId: network.chainId,\n        // darkMode: Boolean, // (default: false)\n        transactionHandler: txInformation => {\n          console.log(\"HANDLE TX\", txInformation)\n        },\n      };\n      const notify = Notify(options);\n\n      let etherscanNetwork = \"\";\n      if (network.name && network.chainId > 1) {\n        etherscanNetwork = network.name + \".\";\n      }\n\n      let etherscanTxUrl = \"https://\" + etherscanNetwork + \"etherscan.io/tx/\";\n      if (network.chainId === 100) {\n        etherscanTxUrl = \"https://blockscout.com/poa/xdai/tx/\";\n      }\n\n      try {\n        let result;\n        if(tx instanceof Promise) {\n          console.log(\"AWAITING TX\", tx)\n          result = await tx\n        } else {\n          if(!tx.gasPrice) {\n            tx.gasPrice = gasPrice || parseUnits(\"4.1\", \"gwei\");\n          }\n          if(!tx.gasLimit) {\n            tx.gasLimit = hexlify(120000);\n          }\n          console.log(\"RUNNING TX\", tx);\n          result = await signer.sendTransaction(tx);\n        }\n        console.log(\"RESULT:\", result);\n        // console.log(\"Notify\", notify);\n\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\n        if ([1, 3, 4, 5, 42, 100].includes(network.chainId)) {\n          const { emitter } = notify.hash(result.hash);\n          emitter.on(\"all\", transaction => ({\n            onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\n          }))\n        } else {\n          notification.info({\n            message: \"Local Transaction Sent\",\n            description: result.hash,\n            placement: \"bottomRight\",\n          })\n        }\n\n        return result;\n      } catch (e) {\n        console.error(e);\n        console.log(\"Transaction Error:\", e.message);\n        notification.error({\n          message: \"Transaction Error\",\n          description: e.message,\n        })\n      }\n    }\n  }\n}","import React, { useState } from \"react\"\nimport {\n  WalletOutlined, QrcodeOutlined, SendOutlined, KeyOutlined,\n} from \"@ant-design/icons\"\nimport { Tooltip, Spin, Modal, Button, Typography } from \"antd\"\nimport QR from \"qrcode.react\"\nimport { parseEther } from \"@ethersproject/units\"\nimport { useUserAddress } from \"eth-hooks\"\nimport { Transactor } from \"../helpers\"\nimport Address from \"./Address\"\nimport Balance from \"./Balance\"\nimport AddressInput from \"./AddressInput\"\nimport EtherInput from \"./EtherInput\"\nimport { ethers } from \"ethers\"\nconst { Text, Paragraph } = Typography\n\n/*\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n*/\n\nexport default function Wallet(props) {\n  const signerAddress = useUserAddress(props.provider);\n  const selectedAddress = props.address || signerAddress;\n\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState()\n\n  const providerSend = props.provider ? (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={() => {\n          setOpen((open) => !open)\n        }}\n        rotate={-90}\n        style={{\n          padding: 7,\n          color: props.color ? props.color : \"\",\n          cursor: \"pointer\",\n          fontSize: 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  ) : null\n\n  let display\n  let receiveButton\n  let privateKeyButton\n  if(qr) {\n    display = (\n      <div>\n        <div>\n          <Text copyable>{selectedAddress}</Text>\n        </div>\n        <QR\n          value={selectedAddress}\n          size={450}\n          level=\"H\"\n          includeMargin\n          renderAs=\"svg\"\n          imageSettings={{ excavate: false }}\n        />\n      </div>\n    )\n    receiveButton = (\n      <Button\n        key=\"hide-receive\"\n        onClick={() => {\n          setQr(\"\")\n        }}\n      >\n        <QrcodeOutlined /> Hide\n      </Button>\n    )\n    privateKeyButton = (\n      <Button key=\"hide-key\" onClick={() => {\n        setPK(selectedAddress)\n        setQr(\"\")\n      }}>\n        <KeyOutlined /> Private Key\n      </Button>\n    )\n  } else if(pk) {\n    let pk = localStorage.getItem(\"metaPrivateKey\")\n    let wallet = new ethers.Wallet(pk)\n\n    if(wallet.address !== selectedAddress){\n      display = (\n        <div>\n          <b>*<em>injected account</em>*, private key unknown</b>\n        </div>\n      )\n    } else {\n      let extraPkDisplayAdded = {}\n      let extraPkDisplay = []\n      extraPkDisplayAdded[wallet.address] = true\n      extraPkDisplay.push(\n        <div style={{fontSize:16,padding:2,backgroundStyle:\"#89e789\"}}>\n          <a href={`/pk#${pk}`}>\n            <Address\n              minimized={true}\n              address={wallet.address}\n              ensProvider={props.ensProvider}\n            />\n            {wallet.address.substr(0,6)}\n          </a>\n        </div>\n      )\n      for(var key in localStorage){\n        if(key.indexOf(\"metaPrivateKey_backup\") >= 0){\n          console.log(key)\n          let pastpk = localStorage.getItem(key)\n          let pastwallet = new ethers.Wallet(pastpk)\n          if(!extraPkDisplayAdded[pastwallet.address] /*&& selectedAddress!=pastwallet.address*/){\n            extraPkDisplayAdded[pastwallet.address] = true\n            extraPkDisplay.push(\n              <div style={{ fontSize: 16 }}>\n                <a href={`/pk#${pastpk}`}>\n                  <Address minimized={true} address={pastwallet.address} ensProvider={props.ensProvider} /> {pastwallet.address.substr(0,6)}\n                </a>\n              </div>\n            )\n          }\n        }\n      }\n\n      display = (\n        <div>\n          <b>Private Key:</b>\n\n          <div><Text copyable>{pk}</Text></div>\n\n          <hr/>\n\n          <i>Point your camera phone at QR code to open in\n            <a target=\"_blank\" href={`https://xdai.io/${pk}`} rel=\"noopener noreferrer\">burner wallet</a>:\n          </i>\n          <QR value={`https://xdai.io/${pk}`} size={450} level=\"H\" includeMargin={true} renderAs=\"svg\" imageSettings={{ excavate: false }}/>\n\n          <Paragraph style={{ fontSize: 16 }} copyable>{`https://xdai.io/${pk}`}</Paragraph>\n\n          {extraPkDisplay && (\n            <div>\n              <h3>Known Private Keys:</h3>\n              {extraPkDisplay}\n              <Button onClick={() => {\n                let currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\")\n                if(currentPrivateKey) {\n                  window.localStorage.setItem(\"metaPrivateKey_backup\"+Date.now(),currentPrivateKey);\n                }\n                const randomWallet = ethers.Wallet.createRandom()\n                const privateKey = randomWallet._signingKey().privateKey\n                window.localStorage.setItem(\"metaPrivateKey\",privateKey);\n                window.location.reload()\n              }}>\n                Generate\n              </Button>\n            </div>\n          )}\n        </div>\n      )\n    }\n\n    receiveButton = (\n      <Button key=\"receive\" onClick={() => {\n        setQr(selectedAddress)\n        setPK(\"\")\n      }}>\n        <QrcodeOutlined /> Receive\n      </Button>\n    )\n    privateKeyButton = (\n      <Button key=\"hide\" onClick={() => {\n        setPK(\"\")\n        setQr(\"\")\n      }}>\n        <KeyOutlined /> Hide\n      </Button>\n    )\n  } else {\n    const inputStyle = {\n      padding: 10,\n    }\n\n    display = (\n      <div>\n        <div style={inputStyle}>\n          <AddressInput\n            autoFocus\n            ensProvider={props.ensProvider}\n            placeholder=\"to address\"\n            address={toAddress}\n            onChange={setToAddress}\n          />\n        </div>\n        <div style={inputStyle}>\n          <EtherInput\n            price={props.price}\n            value={amount}\n            onChange={value => {\n              setAmount(value);\n            }}\n          />\n        </div>\n      </div>\n    )\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress)\n          setPK(\"\")\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    )\n    privateKeyButton = (\n      <Button key=\"hide\" onClick={() => {\n        setPK(selectedAddress)\n        setQr(\"\")\n      }}>\n        <KeyOutlined /> Private Key\n      </Button>\n    )\n  }\n\n  return (\n    <span>\n      {providerSend}\n      <Modal\n        visible={open}\n        title={\n          <div>\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\n            <div style={{ float: \"right\", paddingRight: 25 }}>\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\n            </div>\n          </div>\n        }\n        onOk={() => {\n          setQr()\n          setPK()\n          setOpen((open) => !open)\n        }}\n        onCancel={() => {\n          setQr()\n          setPK()\n          setOpen((open) => !open)\n        }}\n        footer={[\n          privateKeyButton,\n          receiveButton,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!amount || !toAddress || qr}\n            loading={false}\n            onClick={() => {\n              const tx = Transactor(props.provider)\n              let value\n              try {\n                value = parseEther(amount.toString())\n              } catch (e) {\n                // failed to parseEther, try something else\n                value = parseEther(parseFloat(amount).toFixed(8))\n              }\n\n              tx({\n                to: toAddress,\n                value,\n              })\n              setOpen((open) => !open)\n              setQr()\n            }}\n          >\n            <SendOutlined /> Send\n          </Button>,\n        ]}\n      >\n        {display}\n      </Modal>\n    </span>\n  )\n}\n","import React from \"react\"\nimport { Button, Tooltip, Flex, Box, Image } from '@chakra-ui/react'\nimport { LoginOutlined, LogoutOutlined } from '@ant-design/icons'\nimport { useThemeSwitcher } from \"react-css-theme-switcher\"\nimport Address from './Address'\nimport Balance from './Balance'\nimport Wallet from './Wallet'\n\n/*\n  ~ What it does? ~\n\n  Displays an Address, Balance, and Wallet as one Account component,\n  also allows users to log in to existing accounts and log out\n\n  ~ How can I use? ~\n\n  <Account\n    address={address}\n    localProvider={localProvider}\n    userProvider={userProvider}\n    mainnetProvider={mainnetProvider}\n    web3Modal={web3Modal}\n    loadWeb3Modal={loadWeb3Modal}\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\n    blockExplorer={blockExplorer}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to the given address\n  - Provide localProvider={localProvider} to access balance on local network\n  - Provide userProvider={userProvider} to display a wallet\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\n              to be able to log in/log out to/from existing accounts\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n*/\n\nexport default ({\n  address,\n  userProvider,\n  localProvider,\n  mainnetProvider,\n  minimized,\n  web3Modal,\n  loadWeb3Modal,\n  logoutOfWeb3Modal,\n  blockExplorer,\n}) => {\n  const modalButtons = []\n  \n  if(web3Modal) {\n    if(web3Modal.cachedProvider) {\n      modalButtons.push(\n        <Tooltip key=\"logout\" placement=\"bottom\" label=\"Logout\">\n          <Button\n            onClick={logoutOfWeb3Modal}\n          >\n            <LogoutOutlined />\n          </Button>\n        </Tooltip>\n      )\n    } else {\n      modalButtons.push(\n        <Tooltip key=\"login\" placement=\"bottom\" label=\"Login\">\n          <Button\n            onClick={loadWeb3Modal}\n          >\n            <LoginOutlined/>\n          </Button>\n        </Tooltip>\n      )\n    }\n  }\n\n  const { currentTheme } = useThemeSwitcher()\n\n  const display = minimized ? null : (\n    <Flex ml={2}>\n      {address ? (\n        <Address\n          {...{ address, blockExplorer }}\n          ensProvider={mainnetProvider}\n          size=\"short\"\n          SecondLine={() => (\n            <Balance {...{ address }} provider={localProvider}/>\n          )}\n        />\n      ) : (\n        \"Connecting…\"\n      )}\n    </Flex>\n  )\n\n  return (\n    <Flex>\n      {display}\n      {modalButtons}\n    </Flex>\n  )\n}\n","import React from \"react\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { isAddress } from \"@ethersproject/address\";\nimport { Address } from \"../../components\";\n\nconst tryToDisplay = (thing) => {\n  if(thing && thing.toNumber) {\n    try {\n      return thing.toNumber();\n    } catch (e) {\n      return \"Ξ\" + formatUnits(thing, \"ether\");\n    }\n  }\n  if(thing && thing.startsWith && thing.startsWith(\"0x\") && thing.length === 42){\n    return (\n      <Address\n        address={thing}\n        fontSize={22}\n      />\n    )\n  }\n  return JSON.stringify(thing);\n};\n\nexport default tryToDisplay;\n","/* eslint-disable jsx-a11y/accessible-emoji */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Row, Col, Divider } from \"antd\";\nimport tryToDisplay from \"./utils\";\n\nconst DisplayVariable = ({ contractFunction, functionInfo, refreshRequired, triggerRefresh}) => {\n  const [variable, setVariable] = useState(\"\");\n\n  const refresh = useCallback(async () => {\n    try {\n      const funcResponse = await contractFunction();\n      setVariable(funcResponse);\n      triggerRefresh(false);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [setVariable, contractFunction, triggerRefresh]);\n\n  useEffect(() => {\n    refresh();\n  }, [refresh, refreshRequired, contractFunction]);\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={14}>\n          <h2>{tryToDisplay(variable)}</h2>\n        </Col>\n        <Col span={2}>\n          <h2>\n            <a href=\"#\" onClick={refresh}>\n              🔄\n            </a>\n          </h2>\n        </Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n};\n\nexport default DisplayVariable;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from \"react\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { Row, Col, Input, Divider, Tooltip, Button } from \"antd\";\nimport { Transactor } from \"../../helpers\";\nimport tryToDisplay from \"./utils\";\nimport Blockies from \"react-blockies\";\nconst { utils } = require(\"ethers\");\n\n\nexport default function FunctionForm({ contractFunction, functionInfo, provider, gasPrice, triggerRefresh }) {\n  const [form, setForm] = useState({});\n  const [txValue, setTxValue] = useState();\n  const [returnValue, setReturnValue] = useState();\n\n  const tx = Transactor(provider, gasPrice);\n\n  let inputIndex = 0;\n  const inputs = functionInfo.inputs.map(input => {\n    const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + inputIndex++\n\n    let buttons = \"\"\n    if(input.type === \"bytes32\") {\n      buttons = (\n        <Tooltip placement=\"right\" title={\"to bytes32\"}>\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if(utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.parseBytes32String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.formatBytes32String(form[key]);\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n          </div>\n        </Tooltip>\n      )\n    } else if(input.type === \"bytes\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"to hex\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if(utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.toUtf8String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.hexlify(utils.toUtf8Bytes(form[key] ?? ''))\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n            </div>\n        </Tooltip>\n      )\n    } else if(input.type === \"uint256\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"⨯ 10¹⁸\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              const formUpdate = { ...form }\n              formUpdate[key] = utils.parseEther(form[key])\n              setForm(formUpdate)\n            }}\n          >\n            ✴️\n            </div>\n        </Tooltip>\n      )\n    } else if(input.type === \"address\") {\n      const possibleAddress = form[key]?.toLowerCase().trim()\n      if(possibleAddress && possibleAddress.length === 42) {\n        buttons = (\n          <Tooltip placement=\"right\" title=\"blockie\">\n            <Blockies seed={possibleAddress} scale={3} />\n          </Tooltip>\n        )\n      }\n    }\n\n    return (\n      <div style={{ margin: 2 }} key={key}>\n        <Input\n          size=\"large\"\n          placeholder={input.name ? input.type + \" \" + input.name : input.type}\n          autoComplete=\"off\"\n          value={form[key]}\n          name={key}\n          onChange={(event) => {\n            const formUpdate = { ...form };\n            formUpdate[event.target.name] = event.target.value;\n            setForm(formUpdate);\n          }}\n          suffix={buttons}\n        />\n      </div>\n    )\n  });\n\n  const txValueInput = (\n    <div style={{ margin: 2 }} key=\"txValueInput\">\n      <Input\n        placeholder=\"transaction value\"\n        onChange={(e) => setTxValue(e.target.value)}\n        value={txValue}\n        addonAfter={\n          <div>\n            <Row>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title={\" * 10^18 \"}>\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      let floatValue = parseFloat(txValue)\n                      if(floatValue) setTxValue(\"\" + floatValue * 10 ** 18);\n                    }}\n                  >\n                    ✳️\n                  </div>\n                </Tooltip>\n              </Col>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title=\"number to hex\">\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      setTxValue(BigNumber.from(txValue ?? 0).toHexString());\n                    }}\n                  >\n                    #️⃣\n                </div>\n                </Tooltip>\n              </Col>\n            </Row>\n          </div>\n        }\n      />\n    </div>\n  );\n\n  if (functionInfo.payable) {\n    inputs.push(txValueInput);\n  }\n\n  const buttonIcon = (\n    <Button style={{ marginLeft: -32 }}>\n      {functionInfo.type === 'call' ? (\n        'Read 📡'\n      ) : (\n        'Send 💸'\n      )}\n    </Button>\n  )\n  inputs.push(\n    <div style={{ cursor: \"pointer\", margin: 2 }} key=\"goButton\">\n      <Input\n        onChange={(e) => setReturnValue(e.target.value)}\n        defaultValue=\"\"\n        bordered={false}\n        disabled={true}\n        value={returnValue}\n        suffix={\n          <div\n            style={{ width: 50, height: 30, margin: 0 }}\n            type=\"default\"\n            onClick={async () => {\n              let innerIndex = 0\n              const args = functionInfo.inputs.map((input) => {\n                const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + innerIndex++\n                let value = form[key]\n                if(input.baseType === \"array\"){\n                  value = JSON.parse(value)\n                } else if(input.type === \"bool\"){\n                  if(value === 'true' || value === '1' || /^0x0*1$/.test(value)) {\n                    value = 1\n                  } else {\n                    value = 0\n                  }\n                } else if(!value && input.type === 'bytes') {\n                  value = []\n                }\n                return value\n              })\n\n              let result\n              if(['view', 'pure'].includes(\n                functionInfo.stateMutability\n              )) {\n                const returned = await contractFunction(...args)\n                result = tryToDisplay(returned)\n              } else {\n                const overrides = {}\n                if(txValue) {\n                  overrides.value = txValue // ethers.utils.parseEther()\n                }\n                // Uncomment this if you want to skip the gas estimation for each transaction\n                // overrides.gasLimit = hexlify(1200000);\n\n                // console.log(\"Running with extras\",extras)\n                const returned = await tx(contractFunction(...args, overrides))\n                result = tryToDisplay(returned)\n              }\n\n              console.log(\"SETTING RESULT:\", result);\n              setReturnValue(result);\n              triggerRefresh(true);\n            }}\n          >\n            {buttonIcon}\n          </div>\n        }\n      />\n    </div>,\n  );\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={16}>{inputs}</Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n}\n","import React, { useMemo, useState } from \"react\"\nimport { Card } from \"antd\"\nimport { useContractLoader, useContractExistsAtAddress } from \"../../hooks\"\nimport Account from \"../Account\"\nimport DisplayVariable from \"./DisplayVariable\"\nimport FunctionForm from \"./FunctionForm\"\n\nconst noContractDisplay = (\n  <div>\n    Loading…{\" \"}\n    <div style={{ padding: 32 }}>\n      You need to run{\" \"}\n      <code>yarn run chain</code>\n      {\" \"}and{\" \"}\n      <code>yarn run deploy</code>\n      {\" \"}to see your contract here.\n    </div>\n    <div style={{ padding: 32 }}>\n      <span style={{ marginRight: 4 }} role=\"img\" aria-label=\"warning\">\n        ☢️\n      </span>\n      Warning: You might need to run\n      <code>yarn run deploy</code>\n      {\" \"}<em>again</em> after the frontend comes up!\n    </div>\n  </div>\n);\n\nconst isQueryable = fn => (\n  [\"view\", \"pure\"].includes(fn.stateMutability)\n  && fn.inputs.length === 0\n)\n\nexport default ({\n  customContract, account, gasPrice, signer,\n  provider, name, show, price, blockExplorer,\n}) => {\n  const contracts = useContractLoader(provider)\n  const contract = customContract ?? contracts?.[name] ?? null\n  const address = contract?.address ?? null\n  const contractIsDeployed = (\n    useContractExistsAtAddress(provider, address)\n  )\n\n  const displayedContractFunctions = useMemo(\n    () => (\n      contract ? (\n        Object.values(contract.interface.functions).filter(\n          (fn) => (\n            fn.type === \"function\"\n            && (!show || show?.includes(fn.name))\n          )\n        )\n      ) : ([])\n    ),\n    [contract, show],\n  )\n\n  const [refreshRequired, triggerRefresh] = useState(false)\n  const contractDisplay = displayedContractFunctions.map(\n    (fn) => {\n      if(isQueryable(fn)) {\n        return (\n          <DisplayVariable\n            key={fn.name}\n            contractFunction={contract[fn.name]}\n            functionInfo={fn}\n            refreshRequired={refreshRequired}\n            triggerRefresh={triggerRefresh}\n          />\n        )\n      }\n      return (\n        <FunctionForm\n          key={\"FF\" + fn.name}\n          contractFunction={\n            [\"view\", \"pure\"].includes(fn.stateMutability) ? (\n              contract[fn.name]\n            ) : (\n              contract.connect(signer)[fn.name]\n            )\n          }\n          functionInfo={fn}\n          provider={provider}\n          gasPrice={gasPrice}\n          triggerRefresh={triggerRefresh}\n        />\n      )\n    }\n  )\n\n  return (\n    <div style={{ margin: \"auto\", width: \"70vw\" }}>\n      <Card\n        title={\n          <div>\n            {name}\n            <div style={{ float: \"right\" }}>\n              <Account\n                address={address}\n                localProvider={provider}\n                injectedProvider={provider}\n                mainnetProvider={provider}\n                price={price}\n                blockExplorer={blockExplorer}\n              />\n              {account}\n            </div>\n          </div>\n        }\n        size=\"large\"\n        style={{ marginTop: 25, width: \"100%\" }}\n        loading={contractDisplay?.length <= 0}\n      >\n        {contractIsDeployed ? contractDisplay : noContractDisplay}\n      </Card>\n    </div>\n  );\n}\n","import React from \"react\"\nimport { PageHeader } from \"antd\"\n\nexport default function Header() {\n  return (\n    <a href=\"https://github.com/dysbulic/nft-wearable\" target=\"_blank\" rel=\"noopener noreferrer\">\n      <PageHeader\n        title=\"Wearable NFTs\"\n        subTitle=\"Ceramic-updatable ERC-1155 creating a virtual analogue of MetaMerch\"\n        style={{ cursor: \"pointer\" }}\n      />\n    </a>\n  );\n}\n","import React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Timeline, Typography } from \"antd\";\nimport { SendOutlined, DownloadOutlined, EditOutlined } from \"@ant-design/icons\";\n\nconst { Text } = Typography;\n\n// displays a timeline for scaffold-eth usage\n\nexport default function TimelineDisplay(props) {\n  return (\n    <Timeline mode=\"right\">\n      <Timeline.Item dot=\"💾\">\n        <Text delete>\n          Clone and Install from the{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/austintgriffith/scaffold-eth\">\n            github repo\n          </a>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⚛️\">\n        <Text delete>\n          Start your frontend app with: <Text strong>yarn start</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⛓\">\n        <Text delete={props.chainIsUp}>\n          Start your local blockchain with: <Text strong>yarn run chain</Text> (and refresh)\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📝\">\n        <Text delete={props.hasOwner}>\n          Compile and deploy your smart contract: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🤡\">\n        <Text delete={props.isNotSmoort}>\n          Fix error in <Text code>SmartContractWallet.sol</Text> then: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot={<SendOutlined style={{ fontSize: \"16px\" }} />} color={props.hasEther ? \"green\" : \"blue\"}>\n        <Text delete={props.hasEther}>\n          Send test ether to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address using\n          (bottom left) faucet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<DownloadOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.contractHasEther ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.contractHasEther}>\n          Deposit some funds into your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<EditOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.amOwnerOfContract ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.amOwnerOfContract}>\n          Set <b>owner</b> of your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"☢️\">\n        <Text>\n          Yikes, anyone can take ownership of <Text code>SmartContractWallet.sol</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🔬\">\n        <Text>\n          Test your contract with <Text code>buidler/test/myTest.js</Text> then:\n          <Text strong>yarn run test</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🚀\">\n        <Text>\n          Build something awesome with 🏗 <a href=\"https://github.com/austintgriffith/scaffold-eth\">scaffold-eth</a> and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/austingriffith\">\n            @ me\n          </a>\n          !\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📖\">\n        <Text>\n          Read more about{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/developers\">\n            Ethereum\n          </a>\n          ,{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://solidity.readthedocs.io/en/develop/contracts.html\">\n            Solidity\n          </a>\n          , and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://buidler.dev/tutorial\">\n            Buidler\n          </a>\n        </Text>\n      </Timeline.Item>\n    </Timeline>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"antd\";\n\n// added display of 0 instead of NaN if gas price is not provided\n\n/*\n  ~ What it does? ~\n\n  Displays gas gauge \n\n  ~ How can I use? ~\n\n  <GasGauge \n    gasPrice={gasPrice}\n  />\n\n  ~ Features ~\n\n  - Provide gasPrice={gasPrice} and get current gas gauge\n*/\n\nexport default function GasGauge(props) {\n  \n  return (\n    <Button\n      onClick={() => {\n        window.open(\"https://ethgasstation.info/\");\n      }}\n      size=\"large\"\n      shape=\"round\"\n    >\n      <span style={{ marginRight: 8 }}><span role=\"img\" aria-label=\"fuelpump\">⛽️</span></span>\n      {typeof props.gasPrice == \"undefined\" ? 0 : parseInt(props.gasPrice, 10) / 10 ** 9}g\n    </Button>\n  );\n}\n","import React, { useState, useEffect } from \"react\"\nimport { Input } from \"antd\"\nconst { utils, constants } = require(\"ethers\")\n\n/*\n  ~ What it does? ~\n\n  Displays input field with options to convert between STRING and BYTES32\n\n  ~ How can I use? ~\n\n  <BytesStringInput\n    autofocus\n    value={\"scaffold-eth\"}\n    placeholder=\"Enter value...\"\n    onChange={value => {\n      setValue(value)\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide value={value} to specify initial string\n  - Provide placeholder=\"Enter value...\" value for the input\n  - Control input change by onChange={value => { setValue(value)}}\n\n*/\n\nexport default function BytesStringInput(props) {\n  const [mode, setMode] = useState(\"STRING\")\n  const [display, setDisplay] = useState()\n  const [value, setValue] = useState(constants.HashZero)\n\n  // current value is the value in bytes32\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value\n\n  const option = (title) => (\n    <div\n      style={{ cursor: \"pointer\" }}\n      onClick={() => {\n        if (mode === \"STRING\") {\n          setMode(\"BYTES32\")\n          if (!utils.isHexString(currentValue)) {\n              /* in case user enters invalid bytes32 number, \n                  it considers it as string and converts to bytes32 */\n              const changedValue = utils.formatBytes32String(currentValue)\n              setDisplay(changedValue)\n          } else {\n              setDisplay(currentValue)\n          }\n        } else {\n          setMode(\"STRING\")\n          if (currentValue && utils.isHexString(currentValue)) {\n            setDisplay(utils.parseBytes32String(currentValue))\n          } \n          else {\n            setDisplay(currentValue)\n          }\n        }\n      }}\n    >\n      {title}\n    </div>\n  )\n\n  let addonAfter\n  if (mode === \"STRING\") {\n    addonAfter = option(\"STRING 🔀\")\n  } else {\n    addonAfter = option(\"BYTES32 🔀\")\n  }\n\n  useEffect(\n    () => {\n      if(!currentValue){\n        setDisplay(\"\")\n      }\n    }\n  , [currentValue])\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"Enter value in \" + mode}\n      autoFocus={props.autoFocus}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async (e) => {\n        const newValue = e.target.value\n        if(mode === \"STRING\") {\n          //const ethValue = parseFloat(newValue) / props.price\n          //setValue(ethValue)\n          if(typeof props.onChange === \"function\") {\n            props.onChange(utils.formatBytes32String(newValue))\n          }\n          setValue(utils.formatBytes32String(newValue))\n          setDisplay(newValue)\n\n        } else {\n          if(typeof props.onChange === \"function\") {\n            props.onChange(newValue)\n          }\n          setValue(newValue)\n          setDisplay(newValue)\n        }\n      }}\n    />\n  )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Space, Row, InputNumber, Card, notification, Select, Descriptions, Typography, Button, Divider, Tooltip, Drawer, Modal } from \"antd\";\nimport { SettingOutlined, RetweetOutlined } from '@ant-design/icons';\nimport { ChainId, Token, WETH, Fetcher, Trade, TokenAmount, Percent } from '@uniswap/sdk'\nimport { parseUnits, formatUnits } from \"@ethersproject/units\";\nimport { ethers } from \"ethers\";\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { useDebounce } from \"../hooks\";\n\nconst { Option } = Select;\nconst { Text } = Typography;\n\nexport const ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nconst erc20Abi = [\n    \"function balanceOf(address owner) view returns (uint256)\",\n    \"function approve(address _spender, uint256 _value) public returns (bool success)\",\n    \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\"\n];\n\nconst makeCall = async (callName, contract, args, metadata={}) => {\n  if(contract[callName]) {\n    let result\n    if(args) {\n      result = await contract[callName](...args, metadata)\n    } else {\n      result = await contract[callName]()\n    }\n    return result\n  } else {\n    console.log('no call of that name!')\n  }\n}\n\nlet defaultToken = 'ETH'\nlet defaultTokenOut = 'DAI'\nlet defaultSlippage = '0.5'\nlet defaultTimeLimit = 60 * 10\n\nconst tokenListToObject = (array) =>\n   array.reduce((obj, item) => {\n     obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name)\n     return obj\n   }, {})\n\nfunction Swap({ selectedProvider, tokenListURI }) {\n\n  const [tokenIn, setTokenIn] = useState(defaultToken)\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut)\n  const [exact, setExact] = useState()\n  const [amountIn, setAmountIn] = useState()\n  const [amountInMax, setAmountInMax] = useState()\n  const [amountOut, setAmountOut] = useState()\n  const [amountOutMin, setAmountOutMin] = useState()\n  const [trades, setTrades] = useState()\n  const [routerAllowance, setRouterAllowance] = useState()\n  const [balanceIn, setBalanceIn] = useState()\n  const [balanceOut, setBalanceOut] = useState()\n  const [slippageTolerance, setSlippageTolerance] = useState(new Percent(Math.round(defaultSlippage*100).toString(), \"10000\"))\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit)\n  const [swapping, setSwapping] = useState(false)\n  const [approving, setApproving] = useState(false)\n  const [settingsVisible, setSettingsVisible] = useState(false)\n  const [swapModalVisible, setSwapModalVisible] = useState(false)\n\n  const [tokenList, setTokenList] = useState([])\n\n  const [tokens, setTokens] = useState()\n\n  const [invertPrice, setInvertPrice] = useState(false)\n\n  let blockNumber = useBlockNumber(selectedProvider, 3000)\n\n  let signer = selectedProvider.getSigner()\n  let routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\n\n  let _tokenListUri = tokenListURI ? tokenListURI : 'https://gateway.ipfs.io/ipns/tokens.uniswap.org'\n\n  const debouncedAmountIn = useDebounce(amountIn, 500);\n  const debouncedAmountOut = useDebounce(amountOut, 500);\n\n  const activeChainId = (process.env.REACT_APP_NETWORK === 'kovan' ? ChainId.KOVAN : ChainId.MAINNET)\n\n  useEffect(() => {\n    const getTokenList = async () => {\n      console.log(_tokenListUri)\n      try {\n      let tokenList = await fetch(_tokenListUri)\n      let tokenListJson = await tokenList.json()\n      let filteredTokens = tokenListJson.tokens.filter(function (t) {\n        return t.chainId === activeChainId\n      })\n      let ethToken = WETH[activeChainId]\n      ethToken.name = 'Ethereum'\n      ethToken.symbol = 'ETH'\n      ethToken.logoURI = \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\"\n      let _tokenList = [ethToken, ...filteredTokens]\n      setTokenList(_tokenList)\n      let _tokens = tokenListToObject(_tokenList)\n      setTokens(_tokens)\n    } catch (e) {\n      console.log(e)\n    }\n    }\n    getTokenList()\n  },[tokenListURI])\n\n  const getTrades = async () => {\n    if(tokenIn && tokenOut && (amountIn || amountOut)) {\n\n    let pairs = (arr) => arr.map( (v, i) => arr.slice(i + 1).map(w => [v,w]) ).flat();\n\n    let baseTokens = tokenList.filter(function (t) {\n      return ['DAI', 'USDC', 'USDT', 'COMP', 'ETH', 'MKR', 'LINK', tokenIn, tokenOut].includes(t.symbol)\n    }).map((el) => {\n      return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name)\n    })\n\n    let listOfPairwiseTokens = pairs(baseTokens)\n\n    const getPairs = async (list) => {\n\n      let listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider))\n      return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\n    }\n\n    let listOfPairs = await getPairs(listOfPairwiseTokens)\n\n    let bestTrade\n\n    if(exact === 'in') {\n      setAmountInMax()\n      bestTrade = Trade.bestTradeExactIn(\n      listOfPairs.filter(item => item),\n      new TokenAmount(tokens[tokenIn], parseUnits(amountIn.toString(), tokens[tokenIn].decimals)),\n      tokens[tokenOut], { maxNumResults: 3, maxHops: 1 })\n      if(bestTrade[0]) {\n        setAmountOut(bestTrade[0].outputAmount.toSignificant(6))\n      } else { setAmountOut() }\n    } else if (exact === 'out') {\n      setAmountOutMin()\n      bestTrade = Trade.bestTradeExactOut(\n      listOfPairs.filter(item => item),\n      tokens[tokenIn],\n      new TokenAmount(tokens[tokenOut], parseUnits(amountOut.toString(), tokens[tokenOut].decimals)),\n     { maxNumResults: 3, maxHops: 1 })\n      if(bestTrade[0]) {\n        setAmountIn(bestTrade[0].inputAmount.toSignificant(6))\n      } else { setAmountIn() }\n    }\n\n    setTrades(bestTrade)\n\n    console.log(bestTrade)\n\n  }\n  }\n\n  useEffect(() => {\n      getTrades()\n  },[tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider])\n\n  useEffect(() => {\n    if(trades && trades[0]) {\n      if(exact === 'in') {\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance))\n      } else if (exact === 'out') {\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance))\n      }\n    }\n  }, [slippageTolerance, amountIn, amountOut, trades])\n\n  const getBalance = async (_token, _account, _contract) => {\n\n    let newBalance\n    if(_token === 'ETH') {\n      newBalance = await selectedProvider.getBalance(_account)\n    } else {\n      newBalance = await makeCall('balanceOf', _contract, [_account])\n    }\n    return newBalance\n  }\n\n  const getAccountInfo = async () => {\n\n    if(tokens) {\n\n      let accountList = await selectedProvider.listAccounts()\n\n      if(tokenIn) {\n        let tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\n        let newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn)\n        setBalanceIn(newBalanceIn)\n\n        let allowance\n\n        if(tokenIn === 'ETH') {\n          setRouterAllowance()\n        } else {\n          allowance = await makeCall('allowance',tempContractIn,[accountList[0],ROUTER_ADDRESS])\n          setRouterAllowance(allowance)\n        }\n        }\n\n      if(tokenOut) {\n        let tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\n        let newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut)\n        setBalanceOut(newBalanceOut)\n      }\n    }\n  }\n\n  usePoller(getAccountInfo, 6000)\n\n  let route = trades ? (trades.length > 0 ? trades[0].route.path.map(function(item) {\n    return item['symbol'];\n  }) : []) : []\n\n  const updateRouterAllowance = async (newAllowance) => {\n    setApproving(true)\n    try {\n    let tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\n    let result = await makeCall('approve', tempContract, [ROUTER_ADDRESS, newAllowance])\n    console.log(result)\n    setApproving(false)\n    return true\n  } catch(e) {\n      notification.open({\n        message: 'Approval unsuccessful',\n        description:\n        `Error: ${e.message}`,\n      });\n    }\n  }\n\n  const approveRouter = async () => {\n    let approvalAmount = exact === 'in' ? ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals)) : amountInMax.raw.toString()\n    console.log(approvalAmount)\n    let approval = updateRouterAllowance(approvalAmount)\n    if(approval) {\n      notification.open({\n        message: 'Token transfer approved',\n        description:\n        `You can now swap up to ${amountIn} ${tokenIn}`,\n      });\n    }\n  }\n\n  const removeRouterAllowance = async () => {\n    let approvalAmount = ethers.utils.hexlify(0)\n    console.log(approvalAmount)\n    let removal = updateRouterAllowance(approvalAmount)\n    if(removal) {\n      notification.open({\n        message: 'Token approval removed',\n        description:\n        `The router is no longer approved for ${tokenIn}`,\n      });\n    }\n  }\n\n  const executeSwap = async () => {\n    setSwapping(true)\n    try {\n      let args\n      let metadata = {}\n\n      let call\n      let deadline = Math.floor(Date.now() / 1000) + timeLimit\n      let path = trades[0].route.path.map(function(item) {\n        return item['address'];\n      })\n      console.log(path)\n      let accountList = await selectedProvider.listAccounts()\n      let address = accountList[0]\n\n      if (exact === 'in') {\n        let _amountIn = ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals))\n        let _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()))\n        if (tokenIn === 'ETH') {\n          call = 'swapExactETHForTokens'\n          args = [_amountOutMin, path, address, deadline]\n          metadata['value'] = _amountIn\n        } else {\n          call = tokenOut === 'ETH' ? 'swapExactTokensForETH' : 'swapExactTokensForTokens'\n          args = [_amountIn, _amountOutMin, path, address, deadline]\n        }\n      } else if (exact === 'out') {\n        let _amountOut = ethers.utils.hexlify(parseUnits(amountOut.toString(), tokens[tokenOut].decimals))\n        let _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()))\n        if (tokenIn === 'ETH') {\n          call = 'swapETHForExactTokens'\n          args = [_amountOut, path, address, deadline]\n          metadata['value'] = _amountInMax\n        } else {\n          call = tokenOut === 'ETH' ? 'swapTokensForExactETH' : 'swapTokensForExactTokens'\n          args = [_amountOut, _amountInMax, path, address, deadline]\n        }\n      }\n      console.log(call, args, metadata)\n      let result = await makeCall(call, routerContract, args, metadata)\n      console.log(result)\n      notification.open({\n        message: 'Swap complete 🦄',\n        description:\n        <><Text>{`Swapped ${tokenIn} for ${tokenOut}, transaction: `}</Text><Text copyable>{result.hash}</Text></>,\n      });\n      setSwapping(false)\n  } catch (e) {\n    console.log(e)\n    setSwapping(false)\n    notification.open({\n      message: 'Swap unsuccessful',\n      description:\n      `Error: ${e.message}`,\n    });\n  }\n  }\n\n  const showSwapModal = () => {\n    setSwapModalVisible(true);\n  };\n\n  const handleSwapModalOk = () => {\n    setSwapModalVisible(false);\n    executeSwap()\n  };\n\n  const handleSwapModalCancel = () => {\n    setSwapModalVisible(false);\n  };\n\n  let insufficientBalance = balanceIn ? parseFloat(formatUnits(balanceIn,tokens[tokenIn].decimals)) < amountIn : null\n  let inputIsToken = tokenIn !== 'ETH'\n  let insufficientAllowance = !inputIsToken ? false : routerAllowance ? parseFloat(formatUnits(routerAllowance,tokens[tokenIn].decimals)) < amountIn : null\n  let formattedBalanceIn = balanceIn?parseFloat(formatUnits(balanceIn,tokens[tokenIn].decimals)).toPrecision(6):null\n  let formattedBalanceOut = balanceOut?parseFloat(formatUnits(balanceOut,tokens[tokenOut].decimals)).toPrecision(6):null\n\n  let metaIn = tokens && tokenList && tokenIn ? tokenList.filter(function (t) {\n    return t.address === tokens[tokenIn].address\n  })[0] : null\n  let metaOut = tokens && tokenList && tokenOut ? tokenList.filter(function (t) {\n    return t.address === tokens[tokenOut].address\n    })[0] : null\n\n  const cleanIpfsURI = (uri) => {\n    try {\n    return (uri).replace('ipfs://','https://ipfs.io/ipfs/')\n  } catch(e) {\n    console.log(e, uri)\n    return uri\n  }\n  }\n\n  let logoIn = metaIn?cleanIpfsURI(metaIn.logoURI):null\n  let logoOut = metaOut?cleanIpfsURI(metaOut.logoURI):null\n\n  let rawPrice = trades&&trades[0]?trades[0].executionPrice:null\n  let price = rawPrice?rawPrice.toSignificant(7):null\n  let priceDescription = rawPrice ? (invertPrice ? `${(rawPrice.invert()).toSignificant(7)} ${tokenIn} per ${tokenOut}` : `${price} ${tokenOut} per ${tokenIn}`) : null\n\n  let priceWidget = (\n    <Space>\n    <Text type=\"secondary\">{priceDescription}</Text>\n    <Button type=\"text\" onClick={() => {setInvertPrice(!invertPrice)}}><RetweetOutlined /></Button>\n    </Space>\n  )\n\n  let swapModal = (\n    <Modal title=\"Confirm swap\" visible={swapModalVisible} onOk={handleSwapModalOk} onCancel={handleSwapModalCancel}>\n      <Row><Space><img src={logoIn} alt={tokenIn} width='30'/>{amountIn}{tokenIn}</Space></Row>\n      <Row justify='center' align='middle' style={{width:30}}><span>↓</span></Row>\n      <Row><Space><img src={logoOut} alt={tokenOut} width='30'/>{amountOut}{tokenOut}</Space></Row>\n      <Divider/>\n      <Row>{priceWidget}</Row>\n      <Row>{trades&&((amountOutMin && exact==='in') || (amountInMax && exact==='out'))?(exact==='in'?`Output is estimated. You will receive at least ${amountOutMin.toSignificant(6)} ${tokenOut} or the transaction will revert.`:`Input is estimated. You will sell at most ${amountInMax.toSignificant(6)} ${tokenIn} or the transaction will revert.`):null}</Row>\n    </Modal>\n  )\n\n  return (\n    <Card title={<Space><img src=\"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\" width='40' alt='uniswapLogo'/><Typography>Uniswapper</Typography></Space>} extra={<Button type=\"text\" onClick={() => {setSettingsVisible(true)}}><SettingOutlined /></Button>}>\n    <Space direction=\"vertical\">\n    <Row justify=\"center\" align=\"middle\">\n    <Card size=\"small\" type=\"inner\" title={`From${exact==='out' && tokenIn && tokenOut?' (estimate)':''}`} extra={<><img src={logoIn} alt={tokenIn} width='30'/><Button type=\"link\" onClick={() => {\n      setAmountOut()\n      setAmountIn(formatUnits(balanceIn,tokens[tokenIn].decimals))\n      setAmountOutMin()\n      setAmountInMax()\n      setExact('in')\n    }}>{formattedBalanceIn}</Button></>} style={{ width: 400, textAlign: 'left' }}>\n      <InputNumber style={{width: '160px'}} min={0} size={'large'} value={amountIn} onChange={(e) => {\n        setAmountOut()\n        setTrades()\n        setAmountIn(e)\n        setExact('in')\n      }}/>\n      <Select showSearch value={tokenIn} style={{width: '120px'}} size={'large'} bordered={false} defaultValue={defaultToken} onChange={(value) => {\n        console.log(value)\n        if(value===tokenOut) {\n          console.log('switch!', tokenIn)\n          setTokenOut(tokenIn)\n          setAmountOut(amountIn)\n          setBalanceOut(balanceIn)\n        }\n        setTokenIn(value)\n        setTrades()\n        setAmountIn()\n        setExact('out')\n        setBalanceIn()\n      }} filterOption={(input, option) =>\n      option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      } optionFilterProp=\"children\">\n      {tokenList.map(token => (\n        <Option key={token.symbol} value={token.symbol}>{token.symbol}</Option>\n      ))}\n      </Select>\n    </Card>\n    </Row>\n    <Row justify=\"center\" align=\"middle\">\n      <Tooltip title={route.join(\"->\")}><span>↓</span></Tooltip>\n    </Row>\n    <Row justify=\"center\" align=\"middle\">\n    <Card size=\"small\" type=\"inner\" title={`To${exact==='in' && tokenIn && tokenOut?' (estimate)':''}`} extra={<><img src={logoOut} width='30' alt={tokenOut}/><Button type=\"text\">{formattedBalanceOut}</Button></>} style={{ width: 400, textAlign: 'left' }}>\n      <InputNumber style={{width: '160px'}} size={'large'} min={0} value={amountOut} onChange={(e) => {\n        setAmountOut(e)\n        setAmountIn()\n        setTrades()\n        setExact('out')\n      }}/>\n      <Select showSearch value={tokenOut} style={{width: '120px'}} size={'large'} bordered={false} onChange={(value) => {\n        console.log(value, tokenIn, tokenOut)\n        if(value===tokenIn) {\n          console.log('switch!', tokenOut)\n          setTokenIn(tokenOut)\n          setAmountIn(amountOut)\n          setBalanceIn(balanceOut)\n        }\n        setTokenOut(value)\n        setExact('in')\n        setAmountOut()\n        setTrades()\n        setBalanceOut()\n      }} filterOption={(input, option) =>\n      option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      } optionFilterProp=\"children\">\n      {tokenList.map(token => (\n        <Option key={token.symbol} value={token.symbol}>{token.symbol}</Option>\n      ))}\n      </Select>\n    </Card>\n    </Row>\n    <Row justify=\"center\" align=\"middle\">\n      {priceDescription?priceWidget:null}\n    </Row>\n    <Row justify=\"center\" align=\"middle\">\n    <Space>\n      {inputIsToken?<Button size=\"large\" loading={approving} disabled={!insufficientAllowance} onClick={approveRouter}>{(!insufficientAllowance&&amountIn&&amountOut)?'Approved':'Approve'}</Button>:null}\n      <Button size=\"large\" loading={swapping} disabled={insufficientAllowance || insufficientBalance || !amountIn || !amountOut} onClick={showSwapModal}>{insufficientBalance?'Insufficient balance':'Swap!'}</Button>\n      {swapModal}\n    </Space>\n    </Row>\n    </Space>\n    <Drawer visible={settingsVisible} onClose={() => { setSettingsVisible(false) }} width={500}>\n    <Descriptions title=\"Details\" column={1} style={{textAlign: 'left'}}>\n      <Descriptions.Item label=\"blockNumber\">{blockNumber}</Descriptions.Item>\n      <Descriptions.Item label=\"routerAllowance\"><Space>{routerAllowance?formatUnits(routerAllowance,tokens[tokenIn].decimals):null}{routerAllowance>0?<Button onClick={removeRouterAllowance}>Remove Allowance</Button>:null}</Space></Descriptions.Item>\n      <Descriptions.Item label=\"route\">{route.join(\"->\")}</Descriptions.Item>\n      <Descriptions.Item label=\"exact\">{exact}</Descriptions.Item>\n      <Descriptions.Item label=\"bestPrice\">{trades ? (trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null) : null}</Descriptions.Item>\n      <Descriptions.Item label=\"nextMidPrice\">{trades ? (trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null) : null}</Descriptions.Item>\n      <Descriptions.Item label=\"priceImpact\">{trades ? (trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null) : null}</Descriptions.Item>\n      <Descriptions.Item label=\"slippageTolerance\">{<InputNumber\n        defaultValue={defaultSlippage}\n        min={0}\n        max={100}\n        precision={2}\n        formatter={value => `${value}%`}\n        parser={value => value.replace('%', '')}\n        onChange={(value) => {\n          console.log(value)\n\n         let slippagePercent = new Percent(Math.round(value*100).toString(), \"10000\")\n         setSlippageTolerance(slippagePercent)\n       }}\n      />}</Descriptions.Item>\n      <Descriptions.Item label=\"amountInMax\">{amountInMax?amountInMax.toExact():null}</Descriptions.Item>\n      <Descriptions.Item label=\"amountOutMin\">{amountOutMin?amountOutMin.toExact():null}</Descriptions.Item>\n      <Descriptions.Item label=\"timeLimitInSeconds\">{<InputNumber\n              min={0}\n              max={3600}\n              defaultValue={defaultTimeLimit}\n              onChange={(value) => {\n              console.log(value)\n              setTimeLimit(value)\n             }}\n            />}</Descriptions.Item>\n    </Descriptions>\n    </Drawer>\n    </Card>\n  )\n\n}\n\nexport default Swap;\n","import React, { useEffect, useState } from \"react\";\nimport { Switch } from \"antd\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\n\nexport default function ThemeSwitcher() {\n\n  const theme = window.localStorage.getItem(\"theme\");\n  const [isDarkMode, setIsDarkMode] = useState(!theme || theme === \"light\" ? false : true);\n  const { switcher, currentTheme, status, themes } = useThemeSwitcher();\n\n  useEffect(() => {\n    window.localStorage.setItem(\"theme\", currentTheme);\n  }, [currentTheme])\n\n  const toggleTheme = (isChecked) => {\n    setIsDarkMode(isChecked);\n    switcher({ theme: isChecked ? themes.dark : themes.light });\n  }\n\n  // Avoid theme change flicker\n  // if (status === \"loading\") {\n  //   return null;\n  // }\n\n  return (\n    <div className=\"main fade-in\" style={{ position: \"fixed\", right: 8, bottom: 8 }}>\n      <span style={{ padding: 8 }}>{currentTheme === \"light\" ? \"☀️\" : \"🌜\"}</span>\n      <Switch checked={isDarkMode} onChange={toggleTheme} />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n  Alert, AlertIcon, Button, Spinner, Image,\n  Table, Thead, Tbody, Tr, Th, Td,\n} from '@chakra-ui/react'\nimport { ExternalLinkIcon, ViewIcon } from '@chakra-ui/icons'\nimport { Link } from 'react-router-dom'\nimport { useQuery, gql } from '@apollo/client'\nimport registryAddress from '../contracts/WearablesNFTs.address'\n\nconst TOKENS = gql(`\n  query GetTokens {\n    tokenRegistry(id: \"${registryAddress.toLowerCase()}\") {\n      id\n      tokens {\n        id\n        URI\n        totalSupply\n      }\n    }\n  }\n`)\n\nconst httpURL = (uri) => {\n  const match = uri.match(/^(ip[nf]s):\\/\\/(.+)$/)\n  if(!match) {\n    return uri\n  } else {\n    return `https://ipfs.io/${match[1]}/${match[2]}`\n  }\n}\n\nexport default ({ ensProvider }) => {\n  const { loading, error, data } = useQuery(TOKENS)\n  const [tokens, setTokens] = useState(null) \n  const load = async () => {\n    if(data) {\n      const tokenData = data?.tokenRegistry?.tokens\n      if(!tokenData) {\n        return setTokens([])\n      }\n\n      const tokens = tokenData.map((token) => ({\n        loading: true,\n        id: token.id,\n        supply: token.totalSupply,\n        metadata: token.URI,\n      }))\n      setTokens(tokens)\n      const uris = [...new Set([...tokens.map(t => t.metadata)])]\n      await Promise.all(uris.map(async (uri) => {\n        const response = await fetch(httpURL(uri))\n        if(response.ok) {\n          const meta = await response.json()\n          setTokens((tokens) => {\n            return tokens.map((tkn) => {\n              if(tkn.metadata !== uri) {\n                return tkn\n              } else {\n                return {\n                  ...tkn,\n                  loading: false,\n                  name: meta.name,\n                  description: meta.description,\n                  image: httpURL(meta.image),\n                }\n              }\n            })\n          })\n        }\n      }))\n    }\n  }\n\n  useEffect(() => { load() }, [data])\n  \n  if(error) {\n    return (\n      <Alert status=\"error\">\n        <AlertIcon />\n        {error}\n      </Alert>\n    )\n  }\n\n  if(!tokens || loading) {\n    return <Spinner/>\n  }\n\n  if(tokens.length === 0) {\n    return (\n      <>\n        <h2>No Tokens Have Been Created Yet</h2>\n        <h2><em>(If you just minted a token, it may take several seconds for The Graph to add the new token to its index.)</em></h2>\n        <Link to=\"/new\"><Button>Create One</Button></Link>\n      </>\n    )\n  }\n\n  return (\n    <Table\n      sx={{\n        'th, td': { textAlign: 'center' },\n      }}\n    >\n      <Thead>\n        <Tr>\n          <Th>Name</Th>\n          <Th>Image</Th>\n          <Th>Description</Th>\n          <Th>Supply</Th>\n          <Th>Metadata</Th>\n          <Th>Distribution</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {tokens.map((token, idx) => (\n          <Tr key={idx}>\n            <Td>{token.loading ? <Spinner/> : (\n              token.name ?? <em>Unnamed</em>\n            )}</Td>\n            <Td>{token.loading ? <Spinner/> : (\n              <a href={token.image}>\n                <Image maxH=\"5rem\" m=\"auto\" src={token.image}/>\n              </a>\n              ?? <em>No Image</em>\n            )}</Td>\n            <Td>{token.loading ? <Spinner/> : (\n              token.description ?? <em>No Description</em>\n            )}</Td>\n            <Td>{token.supply}</Td>\n            <Td><a href={token.metadata}><ExternalLinkIcon/></a></Td>\n            <Td><Link to={`/token/${token.id}`}><ViewIcon/></Link></Td>\n          </Tr>\n        ))}\n      </Tbody>\n    </Table>\n  )\n}\n","import React, { useState } from 'react'\nimport { Form, Input, Layout } from 'antd'\n\nexport default ({ contract, treasurer: treasurerParam }) => {\n  const [quantity, setQuantity] = useState(1)\n  const [treasurer, setTreasurer] = useState(treasurerParam)\n  const [metadata, setMetadata] = useState('')\n\n  const create = (evt) => {\n    //evt.preventDefault()\n    const enact = (\n      window.confirm(`¿Mint ${quantity} token${quantity === 1 ? '' : 's'} to ${treasurer}?`)\n    )\n    if(enact) {\n      contract.mint(treasurer, quantity, metadata, [])\n    }\n  }\n\n  return (\n    <Layout style={{ maxWidth: '40rem', margin: 'auto' }}>\n      <Form onFinish={create}>\n        <Form.Item\n          label=\"Quantity\"\n          rules={[{ required: true, message: 'Specify a quantity to create.' }]}\n        >\n          <Input\n            type=\"number\"\n            value={quantity}\n            onChange={(evt) => {\n              const val = evt.target.value\n              setQuantity(val && parseInt(val))\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          label=\"Treasurer\"\n          rules={[{ required: true, message: 'Specify the recipient of the new tokens.' }]}\n        >\n          <Input\n            type=\"text\"\n            value={treasurer}\n            onChange={(evt) => {\n              const val = evt.target.value\n              setTreasurer(val)\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          label=\"Metadata\"\n          rules={[{ required: true, message: 'Token metadata.' }]}\n        >\n          <Input\n            value={metadata}\n            onChange={(evt) => setMetadata(evt.target.value)}\n          />\n        </Form.Item>\n       <Input type=\"submit\" value=\"Create\"/>\n      </Form>\n    </Layout>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\n\nexport default ({ contract }) => {\n  const [metadata, setMetadata] = useState(null)\n  const params = useParams()\n  let id = params.id\n\n  if(id === undefined) {\n    return <p>Missing <code>id</code> of the NFT to edit.</p>\n  }\n\n  useEffect(() => {\n    (async () => {\n      setMetadata(await contract?.uri(id) ?? null)\n    })()\n  }, [contract, id])\n\n  if(metadata) {\n    return (\n      <ul>\n        <li>ID: {id.toString()}</li>\n        <li>Metadata: {metadata}</li>\n      </ul>\n    )\n  } else {\n    return JSON.stringify(params)\n  }\n}","import React, { useRef, useState } from 'react'\nimport {\n  Modal, ModalOverlay, ModalContent, ModalHeader,\n  ModalCloseButton, ModalBody, ModalFooter,\n  Button, Tabs, TabList, TabPanels, Tab, TabPanel,\n  FormControl, FormLabel, FormHelperText, Textarea,\n  UnorderedList, ListItem,\n} from '@chakra-ui/react'\nimport Address from '../components/Address'\n\nexport default ({\n  isOpen = false, onClose, quantity, ensProvider,\n  distribute,\n}) => {\n  const [raw, setRaw] = useState('')\n  const [addresses, setAddresses] = useState([])\n  const text = useRef()\n  const update = (input) => {\n    setRaw(input)\n    setAddresses(\n      input.split(/\\s*([;,]|\\s)\\s*/)\n      .filter(addr => !(/^([;,]|\\s)?$/.test(addr)))\n    )\n  }\n  const cancel = () => {\n    update('')\n    onClose()\n  }\n  const process = async () => {\n    try {\n      await distribute(addresses)\n    } catch(err) {\n      console.error(err)\n    }\n    onClose()\n  }\n\n  const InputTabs = () => (\n    <Tabs isFitted variant=\"enclosed\">\n      <TabList mb=\"1em\">\n        <Tab>CSV</Tab>\n        <Tab>Parsed</Tab>\n      </TabList>\n      <TabPanels>\n        <TabPanel>\n          <FormControl>\n            <FormLabel>Comma Separated ETH Addresses</FormLabel>\n            <Textarea\n              placeholder=\"Enter space, semicolon, or comma separated eth addresses.\"\n              ref={text} value={raw} minH=\"6em\"\n              onChange={evt => update(evt.target.value)}\n            />\n            <FormHelperText>Each address will get one token.</FormHelperText>\n          </FormControl>\n        </TabPanel>\n        <TabPanel>\n          <UnorderedList>\n            {addresses.map((addr) => (\n              <ListItem key={addr}>\n                <Address\n                  value={addr} size=\"short\" {...{ ensProvider }}\n                />\n              </ListItem>\n            ))}\n          </UnorderedList>\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  )\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} initialFocusRef={text}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          Distribute {addresses.length} / {quantity} Tokens\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <InputTabs/>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            colorScheme=\"blue\" mr={3}\n            onClick={process}\n          >\n            Distribute\n          </Button>\n          <Button variant=\"ghost\" onClick={cancel}>Cancel</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}","import React, { useEffect , useState} from 'react'\nimport {\n  Alert, AlertIcon, Spinner, Stack, Button,\n  Table, Thead, Tbody, Tr, Th, Td, useDisclosure,\n  Box, Image,\n} from '@chakra-ui/react'\nimport { useQuery, gql } from '@apollo/client'\nimport { useParams } from 'react-router'\nimport Address from '../components/Address'\nimport Distribute from './Distribute'\n\nconst TOKEN = gql(`\n  query GetToken($id: String!) {\n    token(id: $id) {\n      identifier\n      balances {\n        account { id }\n        value\n      }\n    }\n  }\n`)\n\nexport default ({ ensProvider, address, contract }) => {\n  const [balances, setBalances] = useState(null)\n  const [quantity, setQuantity] = useState(null)\n  const [tokenID, setTokenID] = useState(null)\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const params = useParams()\n  const id = params.id\n  let { loading, error, data } = useQuery(\n    TOKEN,\n    { variables: { id } },\n  )\n  const config = () => {\n    setQuantity(balances[address.toLowerCase()])\n    onOpen()\n  }\n  const distribute = async (recipients) => {\n    await Promise.all(\n      recipients.map(async (recipient) => {\n        await contract.safeTransferFrom(\n          address, recipient, tokenID, 1, []\n        )\n      })\n    )\n  }\n\n  useEffect(() => {\n    if(data?.token.balances) {\n      setBalances(\n        Object.fromEntries(\n          data.token.balances.map((bal) => [\n            bal.account.id,\n            bal.value,\n          ])\n        )\n      )\n    }\n    if(data?.token.identifier) {\n      setTokenID(data.token.identifier)\n    }\n  }, [data?.token.balances])\n\n  if(loading) {\n    return <Spinner/>\n  }\n\n  if(!balances || balances.length === 0) {\n    error = error ?? \"Couldn't find any balances.\"\n  }\n\n  if(!balances || balances.length === 0) {\n    error = error ?? \"Couldn't find any balances.\"\n  }\n\n  if(error) {\n    return (\n      <Alert status=\"error\">\n        <AlertIcon />\n        {error}\n      </Alert>\n    )\n  }\n\n  return (\n    <Stack>\n      <Distribute {...{ isOpen, onClose, quantity, distribute }}/>\n      <Table>\n        <Thead>\n          <Tr><Th>Quantity</Th><Th>Owner</Th><Th>Actions</Th></Tr>\n        </Thead>\n        <Tbody>\n          {Object.entries(balances).map(([account, amount]) => (\n            <Tr key={account}>\n              <Td>{amount}</Td>\n              <Td><Address\n                value={account} size=\"short\"\n                {...{ ensProvider }}\n              /></Td>\n              <Td>\n                {account.toLowerCase() === address.toLowerCase() && (\n                  <Button onClick={config}>Distribute</Button>\n                )}\n              </Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </Table>\n      <Button onClick={config}>Distribute Tokens</Button>\n    </Stack>\n  )\n}","import React, { useCallback, useEffect, useState } from \"react\"\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\"\nimport \"antd/dist/antd.css\"\nimport {\n  StaticJsonRpcProvider, JsonRpcProvider, Web3Provider,\n} from \"@ethersproject/providers\"\nimport \"./App.css\"\nimport { Row, Col, Button, Menu, Switch as SwitchD } from \"antd\"\nimport {\n  Box, Alert, AlertIcon, AlertTitle, AlertDescription,\n  CloseButton, Tabs, TabList, TabPanels, Tab, TabPanel,\n} from '@chakra-ui/react'\nimport Web3Modal from \"web3modal\"\nimport WalletConnectProvider from \"@walletconnect/web3-provider\"\nimport { useUserAddress } from \"eth-hooks\"\nimport {\n  useGasPrice, useUserProvider, useContractLoader,\n  useContractReader, useEventListener, useBalance,\n} from \"./hooks\"\nimport {\n  Header, Account, Contract, GasGauge, ThemeSwitch,\n} from \"./components\"\nimport { Transactor } from \"./helpers\"\nimport { formatEther, parseEther } from \"@ethersproject/units\"\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\"\nimport NFTCreator from \"./views/NFTCreator\"\nimport NewNFT from \"./views/NewNFT\"\nimport EditNFT from \"./views/EditNFT\"\nimport Token from \"./views/Token\"\n\n/// 📡 What chain are your contracts deployed to?\n// const targetNetwork = NETWORKS['localhost'] // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\nconst targetNetwork = NETWORKS['rinkeby'] // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// 😬 Sorry for all the console logging\nconst DEBUG = true\n\n// 🛰 providers\nif(DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\")\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\nconst scaffoldEthProvider = (\n  new StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\n)\nconst mainnetInfura = (\n  new StaticJsonRpcProvider(`https://mainnet.infura.io/v3/${INFURA_ID}`)\n)\n\nlet localProviderUrl = targetNetwork.rpcUrl\nlocalProviderUrl = (\n  process.env.REACT_APP_PROVIDER ?? localProviderUrl\n)\nif(DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrl)\nconst localProvider = new StaticJsonRpcProvider(localProviderUrl)\n\n// 🔭 block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer\n\nexport default (props) => {\n  const mainnetProvider = (\n    (scaffoldEthProvider && scaffoldEthProvider._network) ? (\n      scaffoldEthProvider\n    ) : (\n      mainnetInfura\n    )\n  )\n  const [injectedProvider, setInjectedProvider] = useState()\n  const gasPrice = useGasPrice(targetNetwork, 'fast') // EtherGasStation\n  const userProvider = useUserProvider(injectedProvider, localProvider)\n  const address = useUserAddress(userProvider)\n  let localChainId = localProvider?._network?.chainId\n  let selectedChainId = userProvider?._network?.chainId\n  const tx = Transactor(userProvider, gasPrice)\n  const readContracts = useContractLoader(localProvider)\n  const writeContracts = useContractLoader(userProvider)\n\n  let NetworkDisplay = () => (\n    <Box\n      zIndex={1} position=\"absolute\"\n      right=\"13em\" top={5}\n      color={targetNetwork.color}\n    >\n      {targetNetwork.name}\n    </Box>\n  )\n  if(localChainId && selectedChainId && localChainId != selectedChainId) {\n    NetworkDisplay = () => (\n      <Box\n        zIndex={2} position=\"absolute\"\n        right={0} top={5}\n      >\n        <Alert status=\"error\" maxW=\"6em\">\n          <AlertIcon />\n          <AlertTitle mr={2}>⚠️ Wrong Network:</AlertTitle>\n          <AlertDescription>\n            You have <b>{NETWORK(selectedChainId)?.name ?? \"Unknown\"}</b> selected and you need to be on <b>{NETWORK(localChainId).name}</b>.\n          </AlertDescription>\n          <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" />\n        </Alert>\n      </Box>\n    )\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect()\n    setInjectedProvider(new Web3Provider(provider))\n  }, [setInjectedProvider])\n\n  useEffect(() => {\n    if(web3Modal.cachedProvider) {\n      loadWeb3Modal()\n    }\n  }, [loadWeb3Modal])\n\n  const [route, setRoute] = useState()\n  useEffect(() => {\n    setRoute(window.location.pathname)\n  }, [setRoute])\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <NetworkDisplay/>\n      <BrowserRouter>\n        <Menu\n          style={{ textAlign: \"center\" }}\n          selectedKeys={[route]}\n          mode=\"horizontal\"\n        >\n          <Menu.Item key=\"/\">\n            <Link onClick={() => setRoute(\"/\")} to=\"/\">\n              📺 Consumers\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/create\">\n            <Link onClick={() => setRoute(\"/create\")} to=\"/create\">\n              🎨 Creators\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/new\">\n            <Link onClick={() => setRoute(\"/new\")} to=\"/new\">\n              ➕ New\n            </Link>\n          </Menu.Item>\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            {writeContracts ? (\n              <NFTCreator\n                ensProvider={mainnetProvider}\n                contract={writeContracts?.WearablesNFTs}\n              />\n            ) : (\n              <p>Unable to retrieve contracts. ¿Have they been created?</p>\n            )}\n          </Route>\n          <Route exact path=\"/create\">\n            <Contract\n              name=\"WearablesNFTs\"\n              signer={userProvider.getSigner()}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            />\n          </Route>\n          <Route exact path=\"/new\">\n            {writeContracts ? (\n              <NewNFT\n                contract={writeContracts?.WearablesNFTs}\n                treasurer={address}\n              />\n            ) : (\n              <p>Unable to retrieve contracts. ¿Have they been created?</p>\n            )}\n          </Route>\n          <Route exact path=\"/edit/:id?\">\n            {readContracts ? (\n              <EditNFT\n                {...{ tx }}\n                contract={readContracts?.WearablesNFTs}\n              />\n            ) : (\n              <p>Unable to retrieve contracts. ¿Have they been created?</p>\n            )}\n          </Route>\n          <Route exact path=\"/token/:id\">\n            <Token\n              {...{ address }}\n              ensProvider={mainnetProvider}\n              contract={writeContracts?.WearablesNFTs}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      <ThemeSwitch />\n\n      <Box\n        position=\"fixed\"\n        textAlign=\"right\"\n        right={0} top={0}\n        padding={10}\n      >\n        <Account\n          {...{ address,\n            localProvider,\n            userProvider,\n            mainnetProvider,\n            web3Modal,\n            loadWeb3Modal,\n            logoutOfWeb3Modal,\n            blockExplorer,\n          }}\n        />\n      </Box>\n\n      <Box\n        position=\"fixed\" textAlign=\"left\"\n        left={0} bottom={0} padding={10}\n      >\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n            <GasGauge gasPrice={gasPrice} />\n          </Col>\n        </Row>\n      </Box>\n    </div>\n  )\n}\n\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID,\n      },\n    },\n  },\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider()\n  setTimeout(() => window.location.reload(), 1)\n}\n\nlet _ = window?.ethereum?.on('chainChanged', (chainId) => (\n  web3Modal.cachedProvider && (\n    setTimeout(() => window.location.reload(), 1)\n  )\n))\n\n_ = window?.ethereum?.on('accountsChanged', (accounts) => (\n  web3Modal.cachedProvider && (\n    setTimeout(() => window.location.reload(), 1)\n  )\n))\n","import { useState } from \"react\";\nimport { usePoller } from \"eth-hooks\";\nimport axios from \"axios\";\n\nexport default function useGasPrice(targetNetwork,speed) {\n  const [gasPrice, setGasPrice] = useState();\n  const loadGasPrice = async () => {\n    if(targetNetwork.gasPrice){\n      setGasPrice(targetNetwork.gasPrice);\n    }else{\n      axios\n        .get(\"https://ethgasstation.info/json/ethgasAPI.json\")\n        .then(response => {\n          const newGasPrice = response.data[speed || \"fast\"] * 100000000;\n          if (newGasPrice !== gasPrice) {\n            setGasPrice(newGasPrice);\n          }\n        })\n        .catch(error => console.log(error));\n    }\n  };\n\n  usePoller(loadGasPrice, 39999);\n  return gasPrice;\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {\n  ApolloClient, ApolloProvider, InMemoryCache,\n} from \"@apollo/client\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\"\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n}\n\nconst prevTheme = window.localStorage.getItem(\"theme\")\n\n// let subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\"\nconst subgraphUri = \"https://api.thegraph.com/subgraphs/name/0xorg/eip1155-subgraph-rinkeby\"\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache(),\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ChakraProvider>\n      <ThemeSwitcherProvider themeMap={themes} defaultTheme={prevTheme ? prevTheme : \"light\"}>\n        <App subgraphUri={subgraphUri}/>\n      </ThemeSwitcherProvider>\n    </ChakraProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n)","module.exports = \"0x737f27080Ac6074Acb5204374877C4c0081c0cEb\";","var map = {\n\t\"./WearablesNFTs.abi.js\": 1083\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 578;","var map = {\n\t\"./WearablesNFTs.bytecode.js\": 1084\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 579;","module.exports = __webpack_public_path__ + \"static/media/eth.ec81052f.svg\";"],"sourceRoot":""}